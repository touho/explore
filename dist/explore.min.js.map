{"version":3,"file":null,"sources":["../src/core/serializable.js","../src/core/serializableManager.js","../src/util/assert.js","../src/core/propertyType.js","../src/core/dataTypes.js","../src/util/input.js","../src/util/net.js","../src/core/property.js","../src/util/vector.js","../src/core/propertyOwner.js","../src/core/entity.js","../src/core/componentData.js","../src/core/prototype.js","../src/core/game.js","../src/core/scene.js","../src/core/component.js","../src/core/entityPrototype.js","../src/core/level.js","../src/components/Transform.js","../src/components/Test.js","../src/components/Mover.js","../src/components/Rect.js","../src/components/Spawner.js","../src/components/Trigger.js"],"sourcesContent":["import assert from '../util/assert';\nimport * as serializableManager from './serializableManager';\n\nconst CHARACTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'; // 62 chars\nconst CHAR_COUNT = CHARACTERS.length;\n\nexport function createStringId(threeLetterPrefix = '???', characters = 16) {\n\tlet id = threeLetterPrefix;\n\tfor (let i = characters - 1; i >= 0; --i)\n\t\tid += CHARACTERS[Math.random() * CHAR_COUNT | 0];\n\treturn id;\n}\n\nlet serializableClasses = new Map();\n\nexport default class Serializable {\n\tconstructor(predefinedId = false, skipSerializableRegistering = false) {\n\t\tassert(this.threeLetterType, 'Forgot to Serializable.registerSerializable your class?');\n\t\tthis._children = new Map(); // threeLetterType -> array\n\t\tthis._listeners = [];\n\t\tthis._isInTree = this.isRoot;\n\t\tthis._state |= Serializable.STATE_CONSTRUCTOR;\n\t\tif (skipSerializableRegistering)\n\t\t\treturn;\n\t\tif (predefinedId) {\n\t\t\tthis._state |= Serializable.STATE_PREDEFINEDID;\n\t\t\tthis.id = predefinedId;\n\t\t} else {\n\t\t\tthis.id = createStringId(this.threeLetterType);\n\t\t}\n\t\tif (this.id.startsWith('?'))\n\t\t\tthrow new Error('?');\n\t\tserializableManager.addSerializable(this);\n\t}\n\tdelete() {\n\t\tif (this._parent) {\n\t\t\tthis._parent.deleteChild(this);\n\t\t\treturn false;\n\t\t}\n\t\tthis.deleteChildren();\n\t\tthis._alive = false;\n\t\tthis._isInTree = false;\n\t\tthis._listeners.length = 0;\n\t\tserializableManager.removeSerializable(this.id);\n\t\tthis._state |= Serializable.STATE_DESTROY;\n\t\treturn true;\n\t}\n\tdeleteChildren() {\n\t\tif (this._children.size) {\n\t\t\tthis._children.forEach(array => {\n\t\t\t\tarray.forEach(child => {\n\t\t\t\t\tchild._parent = null;\n\t\t\t\t\tchild.delete();\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis._children.clear();\n\n\t\t\tif (this._parent) {\n\t\t\t\tserializableManager.addChange(serializableManager.changeType.deleteAllChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\t// this is called right after constructor\n\tinitWithChildren(children = []) {\n\t\tassert(!(this._state & Serializable.STATE_INIT), 'init already done');\n\t\tthis._state |= Serializable.STATE_INIT;\n\t\tif (children.length > 0)\n\t\t\tthis.addChildren(children);\n\t\treturn this;\n\t}\n\taddChildren(children) {\n\t\tfor (let i = 0; i < children.length; i++)\n\t\t\tthis.addChild(children[i]);\n\t\treturn this;\n\t}\n\taddChild(child) {\n\t\t\n\t\tthis._addChild(child);\n\t\t\n\t\t\n\t\tthis._state |= Serializable.STATE_ADDCHILD;\n\t\t\n\t\tif (this._isInTree)\n\t\t\tserializableManager.addChange(serializableManager.changeType.addSerializableToTree, child);\n\t\treturn this;\n\t}\n\t_addChild(child) {\n\t\tassert(child._parent === null);\n\t\t\n\t\tlet array = this._children.get(child.threeLetterType);\n\t\tif (array === undefined) {\n\t\t\tarray = [];\n\t\t\tthis._children.set(child.threeLetterType, array);\n\t\t}\n\t\tarray.push(child);\n\t\tchild._parent = this;\n\t\tchild._state |= Serializable.STATE_ADDPARENT;\n\t\tchild.setInTreeStatus(this._isInTree);\n\t\t\n\t\treturn this;\n\t}\n\tfindChild(threeLetterType, filterFunction) {\n\t\tlet array = this._children.get(threeLetterType);\n\t\tif (!array) return null;\n\t\tif (filterFunction)\n\t\t\treturn array.find(filterFunction) || null;\n\t\telse\n\t\t\treturn array[0];\n\t}\n\tfindParent(threeLetterType, filterFunction = null) {\n\t\tlet parent = this;\n\t\twhile (parent) {\n\t\t\tif (parent.threeLetterType === threeLetterType && (!filterFunction || filterFunction(parent)))\n\t\t\t\treturn parent;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn null;\n\t}\n\tgetRoot() {\n\t\tlet element = this;\n\t\twhile (element._parent)\n\t\t\telement = element._parent;\n\t\treturn element;\n\t}\n\t// idx is optional\n\tdeleteChild(child, idx) {\n\t\tserializableManager.addChange(serializableManager.changeType.deleteSerializable, child);\n\t\tthis._detachChild(child, idx);\n\t\tchild.delete();\n\t\treturn this;\n\t}\n\t// idx is optional\n\t_detachChild(child, idx = 0) {\n\t\tlet array = this._children.get(child.threeLetterType);\n\t\tassert(array, 'child not found');\n\t\tif (array[idx] !== child)\n\t\t\tidx = array.indexOf(child);\n\t\tassert(idx >= 0, 'child not found');\n\t\tarray.splice(idx, 1);\n\t\tif (array.length === 0)\n\t\t\tthis._children.delete(child.threeLetterType);\n\t\tchild._parent = null;\n\t\tchild.setInTreeStatus(false);\n\t\t\n\t\treturn this;\n\t}\n\tforEachChild(threeLetterType = null, callback, deep = false) {\n\t\tfunction processArray(array) {\n\t\t\tarray.forEach(child => {\n\t\t\t\tcallback(child);\n\t\t\t\tdeep && child.forEachChild(threeLetterType, callback, true);\n\t\t\t});\n\t\t}\n\t\tif (threeLetterType) {\n\t\t\tprocessArray(this._children.get(threeLetterType) || []);\n\t\t} else {\n\t\t\tthis._children.forEach(processArray);\n\t\t}\n\t\treturn this;\n\t}\n\tmove(newParent) {\n\t\t\n\t\tnewParent._addChild(this._detach());\n\n\t\tserializableManager.addChange(serializableManager.changeType.move, this);\n\t\t\n\t\treturn this;\n\t}\n\t_detach() {\n\t\tthis._parent && this._parent._detachChild(this);\n\t\treturn this;\n\t}\n\tgetParent() {\n\t\treturn this._parent || null;\n\t}\n\tgetChildren(threeLetterType) {\n\t\treturn this._children.get(threeLetterType) || [];\n\t}\n\ttoJSON() {\n\t\tlet json = {\n\t\t\tid: this.id\n\t\t};\n\t\tif (this._children.size > 0) {\n\t\t\tlet arrays = [];\n\t\t\t// prototypes must come before a level\n\t\t\tArray.from(this._children.keys()).sort((a, b) => a === 'prt' ? -1 : 1)\n\t\t\t\t.forEach(key => arrays.push(this._children.get(key)));\n\t\t\tjson.c = [].concat(...arrays).map(child => child.toJSON());\n\t\t}\n\t\treturn json;\n\t}\n\ttoString() {\n\t\treturn JSON.stringify(this.toJSON(), null, 4);\n\t}\n\tclone() {\n\t\tlet obj = new this.constructor();\n\t\tlet children = [];\n\t\tthis.forEachChild(null, child => {\n\t\t\tchildren.push(child.clone());\n\t\t});\n\t\tobj.initWithChildren(children);\n\t\tthis._state |= Serializable.STATE_CLONE;\n\t\treturn obj;\n\t}\n\tlisten(event, callback) {\n\t\tif (!this._listeners.hasOwnProperty(event)) {\n\t\t\tthis._listeners[event] = [];\n\t\t}\n\t\tthis._listeners[event].unshift(callback);\n\t\treturn () => {\n\t\t\tvar index = this._listeners[event].indexOf(callback);\n\t\t\tthis._listeners[event].splice(index, 1);\n\t\t};\n\t}\n\tdispatch(event, ...args) {\n\t\tif (this._listeners.hasOwnProperty(event)) {\n\t\t\tfor (var i = this._listeners[event].length - 1; i >= 0; --i) {\n\t\t\t\ttry {\n\t\t\t\t\tthis._listeners[event][i].apply(null, args);\n\t\t\t\t} catch(e) {\n\t\t\t\t\tconsole.error(`Event ${event} listener crashed.`, this._listeners[event][i], e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\thasDescendant(child) {\n\t\tif (!child) return false;\n\t\tlet parent = child._parent;\n\t\twhile (parent) {\n\t\t\tif (parent === this) return true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t}\n\tsetInTreeStatus(isInTree) {\n\t\tif (this._isInTree === isInTree)\n\t\t\treturn;\n\t\t\n\t\tthis._isInTree = isInTree;\n\t\tthis._children.forEach(array => {\n\t\t\tarray.forEach(child => child.setInTreeStatus(isInTree));\n\t\t});\n\t}\n\tstatic fromJSON(json) {\n\t\tassert(typeof json.id === 'string' && json.id.length > 5, 'Invalid id.');\n\t\tlet fromJSON = serializableClasses.get(json.id.substring(0, 3));\n\t\tassert(fromJSON);\n\t\tlet obj;\n\t\ttry {\n\t\t\tobj = fromJSON(json);\n\t\t} catch(e) {\n\t\t\tif (!window.force)\n\t\t\t\tdebugger; // Type 'force = true' in console to ignore failed imports.\n\t\t\t\n\t\t\tif (!window.force)\n\t\t\t\tthrow new Error();\n\t\t\treturn null;\n\t\t}\n\t\tlet children = json.c ? json.c.map(child => Serializable.fromJSON(child)).filter(Boolean) : [];\n\t\tif (obj._state & Serializable.STATE_INIT)\n\t\t\tobj.addChildren(children);\n\t\telse\n\t\t\tobj.initWithChildren(children);\n\t\tobj._state |= Serializable.STATE_FROMJSON;\n\t\treturn obj;\n\t}\n\tstatic registerSerializable(Class, threeLetterType, fromJSON = null) {\n\t\tClass.prototype.threeLetterType = threeLetterType;\n\t\tassert(typeof threeLetterType === 'string' && threeLetterType.length === 3);\n\t\tif (!fromJSON)\n\t\t\tfromJSON = json => new Class(json.id);\n\t\tserializableClasses.set(threeLetterType, fromJSON);\n\t}\n}\n\nSerializable.prototype._parent = null;\nSerializable.prototype._alive = true;\nSerializable.prototype._state = 0;\n\nSerializable.STATE_CONSTRUCTOR = 1;\nSerializable.STATE_INIT = 2;\nSerializable.STATE_ADDCHILD = 4;\nSerializable.STATE_ADDPARENT = 8;\nSerializable.STATE_CLONE = 16;\nSerializable.STATE_DESTROY = 32;\nSerializable.STATE_FROMJSON = 64;\nSerializable.STATE_PREDEFINEDID = 128;\n\nSerializable.prototype.isRoot = false; // If this should be a root node\nObject.defineProperty(Serializable.prototype, 'debug', {\n\tget() {\n\t\tlet info = this.threeLetterType;\n\n\t\tthis._children.forEach((value, key) => {\n\t\t\tinfo += '|';\n\t\t\tif (key === 'prp')\n\t\t\t\tinfo += this.getChildren('prp').map(p => `${p.name}=${p._value}`).join(', ');\n\t\t\telse\n\t\t\t\tinfo += `${key}(${value.length})`;\n\t\t});\n\t\t\n\t\tinfo += '|state: ';\n\t\t\n\t\tlet states = [];\n\t\tlet logState = (state, stateString) => {\n\t\t\tif (this._state & state)\n\t\t\t\tstates.push(stateString);\n\t\t};\n\t\t\n\t\tlogState(Serializable.STATE_CONSTRUCTOR, 'constructor');\n\t\tlogState(Serializable.STATE_INIT, 'init');\n\t\tlogState(Serializable.STATE_ADDCHILD, 'add child');\n\t\tlogState(Serializable.STATE_ADDPARENT, 'add parent');\n\t\tlogState(Serializable.STATE_CLONE, 'clone');\n\t\tlogState(Serializable.STATE_DESTROY, 'destroy');\n\t\tlogState(Serializable.STATE_FROMJSON, 'from json');\n\t\tlogState(Serializable.STATE_PREDEFINEDID, 'predefined id');\n\t\t\n\t\tinfo += states.join(', ');\n\t\t\n\t\treturn info;\n\t}\n});\nObject.defineProperty(Serializable.prototype, 'debugChildren', {\n\tget() {\n\t\tlet c = [];\n\t\tthis._children.forEach((value, key) => {\n\t\t\tc = c.concat(value);\n\t\t});\n\t\t\n\t\tlet children = [];\n\t\t\n\t\tfunction createDebugObject(type) {\n\t\t\tif (type === 'gam') return new function Game(){};\n\t\t\tif (type === 'sce') return new function Scene(){};\n\t\t\tif (type === 'prt') return new function Prototype(){};\n\t\t\tif (type === 'prp') return new function Property(){};\n\t\t\tif (type === 'cda') return new function ComponentData(){};\n\t\t\tif (type === 'com') return new function Component(){};\n\t\t\tif (type === 'epr') return new function EntityPrototype(){};\n\t\t\tif (type === 'ent') return new function Entity(){};\n\t\t\tif (type === 'lvl') return new function Level(){};\n\t\t\treturn new function Other(){};\n\t\t}\n\n\t\tc.forEach(child => {\n\t\t\tlet obj = createDebugObject(child.threeLetterType);\n\t\t\t\n\t\t\tobj.debug = child.debug;\n\t\t\tobj.ref = child;\n\t\t\tlet c = child.debugChildArray;\n\t\t\tif (c && c.length > 0)\n\t\t\t\tobj.children = c;\n\t\t\tchildren.push(obj);\n\t\t});\n\n\t\treturn children;\n\t}\n});\n","import assert from '../util/assert';\nimport Serializable from './serializable';\n\nexport let serializables = {};\n\nlet DEBUG_CHANGES = 0;\n\nexport function addSerializable(serializable) {\n\tassert(serializables[serializable.id] === undefined, `Serializable id clash ${serializable.id}`);\n\tserializables[serializable.id] = serializable;\n}\n\nexport function getSerializable(id) {\n\treturn serializables[id] || null;\n}\n\nexport function hasSerializable(id) {\n\treturn Boolean(serializables[id]);\n}\n\nexport function removeSerializable(id) {\n\tif (serializables[id])\n\t\tdelete serializables[id];\n\telse\n\t\tthrow new Error('Serializable not found!');\n}\n\n// reference parameters are not sent over net. they are helpers in local game instance\nexport let changeType = {\n\taddSerializableToTree: 'a', // parentId, reference\n\tsetPropertyValue: 's', // id, value\n\tdeleteSerializable: 'd', // id\n\tmove: 'm', // id, parentId\n\tdeleteAllChildren: 'c', // id\n};\nlet keyToShortKey = {\n\tid: 'i', // obj.id\n\ttype: 't', // changeType.*\n\tvalue: 'v', // value after toJSON\n\tparentId: 'p' // obj._parent.id\n};\nlet shortKeyToKey = {};\nObject.keys(keyToShortKey).forEach(k => {\n\tshortKeyToKey[keyToShortKey[k]] = k;\n});\n\nlet origin;\nlet previousVisualOrigin;\nfunction resetOrigin() {\n\torigin = null;\n}\nexport function getChangeOrigin() {\n\treturn origin;\n}\nexport function setChangeOrigin(_origin) {\n\tif (_origin !== origin) {\n\t\torigin = _origin;\n\t\tif (DEBUG_CHANGES && _origin && _origin !== previousVisualOrigin) {\n\t\t\tconsole.log('origin', previousVisualOrigin);\n\t\t\tpreviousVisualOrigin = _origin;\n\t\t}\n\t\tsetTimeout(resetOrigin);\n\t}\n}\n\nlet externalChange = false;\nexport function addChange(type, reference) {\n\tassert(origin, 'Change without origin!');\n\tif (!reference.id) return;\n\t\n\tlet change = {\n\t\ttype,\n\t\treference,\n\t\tid: reference.id,\n\t\texternal: externalChange,\n\t\torigin\n\t};\n\tif (type === changeType.setPropertyValue) {\n\t\tchange.value = reference._value;\n\t} else if (type === changeType.move) {\n\t\tchange.parent = reference._parent;\n\t} else if (type === changeType.addSerializableToTree) {\n\t\tchange.parent = reference._parent;\n\t\tdelete change.id;\n\t}\n\t\n\tif (DEBUG_CHANGES)\n\t\tconsole.log('change', change);\n\t\n\tlet previousOrigin = origin;\n\tlisteners.forEach(l => l(change));\n\tif (origin !== previousOrigin) {\n\t\tif (DEBUG_CHANGES)\n\t\t\tconsole.log('origin changed from', previousOrigin, 'to', origin && origin.constructor || origin);\n\t\torigin = previousOrigin;\n\t}\n}\n\nexport function executeExternal(callback) {\n\tsetChangeOrigin('external');\n\tif (externalChange) return callback();\n\texternalChange = true;\n\tcallback();\n\texternalChange = false;\n}\n\nlet listeners = [];\n\nexport function addChangeListener(callback) {\n\tassert(typeof callback === 'function');\n\tlisteners.push(callback);\n}\n\nexport function packChange(change) {\n\tif (change.packedChange)\n\t\treturn change.packedChange; // optimization\n\t\n\tlet packed = {};\n\ttry {\n\t\tif (change.parent)\n\t\t\tchange.parentId = change.parent.id;\n\t\t\n\t\tif (change.type === changeType.addSerializableToTree) {\n\t\t\tif (change.reference) {\n\t\t\t\tchange.value = change.reference.toJSON();\n\t\t\t} else if (change.value) {\n\t\t\t\t// change.value = change.value; // no changes\n\t\t\t} else {\n\t\t\t\tassert(false, 'invalid change of type addSerializableToTree', change);\n\t\t\t}\n\t\t} else if (change.value) {\n\t\t\tchange.value = change.reference.propertyType.type.toJSON(change.value);\n\t\t}\n\n\t\tObject.keys(keyToShortKey).forEach(key => {\n\t\t\tif (change[key]) {\n\t\t\t\tif (key === 'type' && change[key] === changeType.setPropertyValue) return; // optimize most common type\n\t\t\t\tpacked[keyToShortKey[key]] = change[key];\n\t\t\t}\n\t\t});\n\t} catch(e) {\n\t\tconsole.log('PACK ERROR', e);\n\t}\n\treturn packed;\n}\n\nexport function unpackChange(packedChange) {\n\tlet change = {\n\t\tpackedChange // optimization\n\t};\n\tObject.keys(packedChange).forEach(shortKey => {\n\t\tlet key = shortKeyToKey[shortKey];\n\t\tchange[key] = packedChange[shortKey];\n\t});\n\tif (!change.type)\n\t\tchange.type = changeType.setPropertyValue;\n\t\n\tif (change.type === changeType.addSerializableToTree) {\n\t\t// reference does not exist because it has not been created yet\n\t\tchange.id = change.value.id;\n\t} else {\n\t\tchange.reference = getSerializable(change.id);\n\t\tif (change.reference) {\n\t\t\tchange.id = change.reference.id;\n\t\t} else {\n\t\t\tconsole.error('received a change with unknown id', change, 'packed:', packedChange);\n\t\t\treturn null;\n\t\t}\n\t}\n\t\n\tif (change.parentId)\n\t\tchange.parent = getSerializable(change.parentId);\n\treturn change;\n}\n\nexport function executeChange(change) {\n\tlet newScene;\n\t\n\texecuteExternal(() => {\n\t\tconsole.log('execute change', change.type, change.id || change.value);\n\t\tif (change.type === changeType.setPropertyValue) {\n\t\t\tchange.reference.value = change.reference.propertyType.type.fromJSON(change.value);\n\t\t} else if (change.type === changeType.addSerializableToTree) {\n\t\t\tif (change.parent) {\n\t\t\t\tlet obj = Serializable.fromJSON(change.value);\n\t\t\t\tchange.parent.addChild(obj);\n\t\t\t\tif (obj.threeLetterType === 'ent') {\n\t\t\t\t\tobj.localMaster = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet obj = Serializable.fromJSON(change.value); // Scene does not need a parent\n\t\t\t\tif (obj.threeLetterType === 'sce')\n\t\t\t\t\tnewScene = obj;\n\t\t\t}\n\t\t} else if (change.type === changeType.deleteAllChildren) {\n\t\t\tchange.reference.deleteChildren();\n\t\t} else if (change.type === changeType.deleteSerializable) {\n\t\t\tchange.reference.delete();\n\t\t} else if (change.type === changeType.move) {\n\t\t\tchange.reference.move(change.parent);\n\t\t}\n\t});\n\t\n\tif (newScene)\n\t\tnewScene.play();\n}\n","import { getChangeOrigin } from '../core/serializableManager';\nexport default function assert(condition, message) {\n\tif (!condition) {\n\t\tconsole.log('Assert', message, new Error().stack, '\\norigin', getChangeOrigin());\n\t\tdebugger;\n\t\tthrow new Error(message);\n\t}\n}\n","import assert from '../util/assert';\nimport Property from './property';\n\n// info about type, validator, validatorParameters, initialValue\n\n\n\nclass PropertyType {\n\tconstructor(name, type, validator, initialValue, description, flags = [], visibleIf) {\n\t\tassert(typeof name === 'string');\n\t\tassert(name[0] >= 'a' && name[0] <= 'z', 'Name of a property must start with lower case letter.');\n\t\tassert(type && typeof type.name === 'string');\n\t\tassert(validator && typeof validator.validate === 'function');\n\t\t\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.validator = validator;\n\t\tthis.initialValue = initialValue;\n\t\tthis.description = description;\n\t\tthis.visibleIf = visibleIf;\n\t\tthis.flags = {};\n\t\tflags.forEach(f => this.flags[f.type] = f);\n\t}\n\tgetFlag(flag) {\n\t\treturn this.flags[flag.type];\n\t}\n\tcreateProperty({ value, predefinedId, skipSerializableRegistering = false } = {}) {\n\t\treturn new Property({\n\t\t\tpropertyType: this,\n\t\t\tvalue,\n\t\t\tpredefinedId,\n\t\t\tname: this.name,\n\t\t\tskipSerializableRegistering\n\t\t});\n\t}\n}\n\n/*\n\tBeautiful way of creating property types\n\t\n\toptionalParameters:\n\t\tdescription: 'Example',\n\t\tvalidator: PropertyType.\n */\nexport default function createPropertyType(propertyName, defaultValue, type, ...optionalParameters) {\n\ttype = type();\n\tlet validator = type.validators.default();\n\tlet description = '';\n\tlet flags = [];\n\tlet visibleIf = null;\n\toptionalParameters.forEach((p, idx) => {\n\t\tif (typeof p === 'string')\n\t\t\tdescription = p;\n\t\telse if (p && p.validate)\n\t\t\tvalidator = p;\n\t\telse if (p && p.isFlag)\n\t\t\tflags.push(p);\n\t\telse if (p && p.visibleIf)\n\t\t\tvisibleIf = p;\n\t\telse\n\t\t\tassert(false, 'invalid parameter ' + p + ' idx ' + idx);\n\t});\n\treturn new PropertyType(propertyName, type, validator, defaultValue, description, flags, visibleIf);\n};\n\nexport let dataType = createPropertyType;\n\ndataType.visibleIf = function(propertyName, value) {\n\tassert(typeof propertyName === 'string' && propertyName.length);\n\tassert(typeof value !== 'undefined');\n\treturn {\n\t\tvisibleIf: true,\n\t\tpropertyName,\n\t\tvalue\n\t};\n};\n\nfunction createFlag(type, func = {}) {\n\tfunc.isFlag = true;\n\tfunc.type = type;\n\treturn func;\n}\n\ncreatePropertyType.flagDegreesInEditor = createFlag('degreesInEditor');\n\nexport function createDataType({\n\tname = '',\n\tvalidators = { default: x => x }, // default must exist. if value is a reference(object), validator should copy the value.\n\ttoJSON = x => x,\n\tfromJSON = x => x,\n\tclone = x => x\n}) {\n\tassert(name, 'name missing from property type');\n\tassert(typeof validators.default === 'function','default validator missing from property type: ' + name);\n\tassert(typeof toJSON === 'function', 'invalid toJSON for property type: ' + name);\n\tassert(typeof fromJSON === 'function', 'invalid fromJSON for property type: ' + name);\n\n\tlet type = {\n\t\tname,\n\t\tvalidators,\n\t\ttoJSON,\n\t\tfromJSON,\n\t\tclone\n\t};\n\tlet createType = () => type;\n\n\tObject.keys(validators).forEach(validatorName => {\n\t\tcreateType[validatorName] = createValidator(validatorName, validators[validatorName]);\n\t\tvalidators[validatorName] = createType[validatorName];\n\t});\n\treturn createType;\n}\n\nfunction createValidator(name, validatorFunction) {\n\tlet validator = function() {\n\t\tlet parameters = [...arguments];\n\t\treturn {\n\t\t\tvalidatorName: name,\n\t\t\tvalidatorParameters: parameters,\n\t\t\tvalidate: x => validatorFunction(x, ...parameters),\n\t\t\tparameters\n\t\t};\n\t};\n\tvalidator.validatorName = name;\n\tvalidator.validate = validatorFunction;\n\treturn validator;\n}\n","import assert from '../util/assert';\nimport { createDataType, dataType } from './propertyType';\nimport Vector from '../util/vector';\n\nfunction validateFloat(val) {\n\tif (isNaN(val) || val === Infinity || val === -Infinity)\n\t\tthrow new Error('Invalid float: ' + val);\n}\n\nconst FLOAT_JSON_PRECISION = 4;\nconst FLOAT_JSON_PRECISION_MULTIPLIER = Math.pow(10, FLOAT_JSON_PRECISION);\nconst FLOAT_DELTA = 0.0000001;\n\ndataType.float = createDataType({\n\tname: 'float',\n\tvalidators: {\n\t\tdefault(x) {\n\t\t\tx = parseFloat(x);\n\t\t\tvalidateFloat(x);\n\t\t\treturn x;\n\t\t},\n\t\t// PropertyType.float.range(min, max)\n\t\trange(x, min, max) {\n\t\t\tx = parseFloat(x);\n\t\t\tvalidateFloat(x);\n\t\t\treturn Math.min(max, Math.max(min, x));\n\t\t},\n\t\tmodulo(x, min, max) {\n\t\t\tx = parseFloat(x);\n\t\t\tvalidateFloat(x);\n\t\t\t\n\t\t\tlet range = max - min;\n\t\t\t\n\t\t\tif (x < min) {\n\t\t\t\tx += (((min - x) / range | 0) + 1) * range;\n\t\t\t} else if (x > max - FLOAT_DELTA) {\n\t\t\t\tx -= (((x - max) / range | 0) + 1) * range;\n\t\t\t}\n\t\t\t\n\t\t\treturn x;\n\t\t}\n\t},\n\ttoJSON: x => Math.round(x*FLOAT_JSON_PRECISION_MULTIPLIER)/FLOAT_JSON_PRECISION_MULTIPLIER,\n\tfromJSON: x => x\n});\ndataType.int = createDataType({\n\tname: 'int',\n\tvalidators: {\n\t\tdefault(x) {\n\t\t\tx = parseInt(x);\n\t\t\tvalidateFloat(x);\n\t\t\treturn x;\n\t\t},\n\t\t// PropertyType.float.range(min, max)\n\t\trange(x, min, max) {\n\t\t\tx = parseInt(x);\n\t\t\tvalidateFloat(x);\n\t\t\treturn Math.min(max, Math.max(min, x));\n\t\t}\n\t},\n\ttoJSON: x => x,\n\tfromJSON: x => x\n});\n\ndataType.vector = createDataType({\n\tname: 'vector',\n\tvalidators: {\n\t\tdefault(vec) {\n\t\t\tif (!(vec instanceof Vector))\n\t\t\t\tthrow new Error();\n\t\t\tvec = vec.clone();\n\t\t\tvec.x = parseFloat(vec.x);\n\t\t\tvec.y = parseFloat(vec.y);\n\t\t\tvalidateFloat(vec.x);\n\t\t\tvalidateFloat(vec.y);\n\t\t\treturn vec;\n\t\t}\n\t},\n\ttoJSON: vec => ({\n\t\tx: Math.round(vec.x*FLOAT_JSON_PRECISION_MULTIPLIER)/FLOAT_JSON_PRECISION_MULTIPLIER,\n\t\ty: Math.round(vec.y*FLOAT_JSON_PRECISION_MULTIPLIER)/FLOAT_JSON_PRECISION_MULTIPLIER\n\t}),\n\tfromJSON: vec => Vector.fromObject(vec),\n\tclone: vec => vec.clone()\n});\n\ndataType.string = createDataType({\n\tname: 'string',\n\tvalidators: {\n\t\tdefault: x => x ? String(x) : ''\n\t},\n\ttoJSON: x => x,\n\tfromJSON: x => x\n});\n\ndataType.bool = createDataType({\n\tname: 'bool',\n\tvalidators: {\n\t\tdefault(x) {\n\t\t\tif (typeof x !== 'boolean')\n\t\t\t\tthrow new Error();\n\t\t\treturn x;\n\t\t}\n\t},\n\ttoJSON: x => x ? 1 : 0,\n\tfromJSON: x => !!x\n});\n\ndataType.enum = createDataType({\n\tname: 'enum',\n\tvalidators: {\n\t\tdefault() {\n\t\t\tassert(false, `also specify enum values with Prop.enum.values('value1', 'value2', ...)`);\n\t\t},\n\t\tvalues(x, ...values) {\n\t\t\tif (!Array.isArray(values))\n\t\t\t\tthrow new Error();\n\t\t\tif (typeof x !== 'string')\n\t\t\t\tthrow new Error('val should be string');\n\t\t\tif (values.indexOf(x) < 0)\n\t\t\t\tthrow new Error(`value ${x} not in enum: [${values}]`);\n\t\t\treturn x;\n\t\t}\n\t},\n\ttoJSON: x => x,\n\tfromJSON: x => x\n});\n","import Vector from '../util/vector';\n\nexport function keyPressed(key) {\n\treturn keys[key] || false;\n}\n\nexport function listenKeyDown(handler) {\n\tkeyDownListeners.push(handler);\n\treturn () => keyDownListeners.splice(keyDownListeners.indexOf(handler), 1);\n}\nexport function listenKeyUp(handler) {\n\tkeyUpListeners.push(handler);\n\treturn () => keyUpListeners.splice(keyUpListeners.indexOf(handler), 1);\n}\n\nexport const key = {\n\tleft: 37,\n\tright: 39,\n\tup: 38,\n\tdown: 40,\n\tctrl: 17,\n\tappleLeft: 91,\n\tappleRight: 93,\n\talt: 18,\n\tshift: 16,\n\tspace: 32,\n\ta: 65,\n\tz: 90,\n\t'0': 48,\n\t'1': 49,\n\t'9': 57,\n\tbackspace: 8,\n\tenter: 13,\n\tesc: 27\n};\n\nexport function listenMouseMove(element, handler) {\n\telement.addEventListener('mousemove', event => {\n\t\tlet x = event.pageX;\n\t\tlet y = event.pageY;\n\t\tlet el = element;\n\t\twhile( el != null ) {\n\t\t\tx -= el.offsetLeft;\n\t\t\ty -= el.offsetTop;\n\t\t\tel = el.offsetParent;\n\t\t}\n\t\t\n\t\telement._mx = x;\n\t\telement._my = y;\n\t\thandler(new Vector(x, y));\n\t});\n}\n\nexport function listenMouseDown(element, handler) {\n\telement.addEventListener('mousedown', event => {\n\t\tif (typeof element._mx === 'number')\n\t\t\thandler(new Vector(element._mx, element._my));\n\t\telse\n\t\t\thandler();\n\t});\n}\nexport function listenMouseUp(element, handler) {\n\telement.addEventListener('mouseup', event => {\n\t\tif (typeof element._mx === 'number')\n\t\t\thandler(new Vector(element._mx, element._my));\n\t\telse\n\t\t\thandler();\n\t});\n}\n\n////////////////////////////////////\n\n\nlet keys = {};\nlet keyDownListeners = [];\nlet keyUpListeners = [];\n\n\nif (typeof window !== 'undefined') {\n\n\twindow.onkeydown = event => {\n\t\tlet keyCode = event.which || event.keyCode;\n\n\t\tif (document.activeElement.nodeName.toLowerCase() == \"input\" && keyCode !== key.esc)\n\t\t\treturn;\n\n\t\tkeys[keyCode] = true;\n\t\tkeyDownListeners.forEach(l => l(keyCode));\n\t};\n\twindow.onkeyup = event => {\n\t\tlet key = event.which || event.keyCode;\n\t\tkeys[key] = false;\n\t\tkeyUpListeners.forEach(l => l(key));\n\t};\n}\n","import { addChangeListener, packChange, unpackChange, executeChange, executeExternal, changeType } from '../core/serializableManager'\nimport Serializable from '../core/serializable';\nimport { game } from '../core/game';\n\nimport { lzw_decode, lzw_encode } from './compression';\n\nlet networkEnabled = false;\nexport function setNetworkEnabled(enabled = true) {\n\tnetworkEnabled = enabled;\n}\n\nlet socket;\n\nfunction isInSceneTree(change) {\n\treturn change.reference.getRoot().threeLetterType === 'sce';\n}\n\nfunction getQueryVariable(variable) {\n\tvar query = window.location.search.substring(1);\n\tvar vars = query.split('&');\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=');\n\t\tif (decodeURIComponent(pair[0]) == variable) {\n\t\t\treturn decodeURIComponent(pair[1]);\n\t\t}\n\t}\n\tconsole.log('Query variable %s not found', variable);\n}\n\nfunction tryToLoad() {\n\tif (!window.io) return setTimeout(tryToLoad, 10);\n\t\n\tsocket = io();\n\t\n\tlet changes = [];\n\tlet valueChanges = {}; // id => change\n\n\taddChangeListener(change => {\n\t\tif (change.origin === 'external' || !networkEnabled)\n\t\t\treturn; // Don't send a change that you have received.\n\t\t\n\t\tif (isInSceneTree(change)) // Don't sync scene\n\t\t\treturn;\n\t\t\n\t\tif (change.type === changeType.setPropertyValue) {\n\t\t\tlet duplicateChange = valueChanges[change.id];\n\t\t\tif (duplicateChange) {\n\t\t\t\tchanges.splice(changes.indexOf(duplicateChange), 1);\n\t\t\t}\n\t\t\tvalueChanges[change.id] = change;\n\t\t}\n\t\tchanges.push(change);\n\t});\n\t\n\tsetInterval(() => {\n\t\tif (changes.length === 0)\n\t\t\treturn;\n\t\tlet packedChanges = changes.map(packChange);\n\t\tchanges.length = 0;\n\t\tvalueChanges = {};\n\t\tconsole.log('sending', packedChanges);\n\t\tsocket.emit('c', packedChanges);\n\t}, 100);\n\n\tsocket.on('c', packedChanges => {\n\t\tconsole.log('RECEIVE,', networkEnabled);\n\t\tif (!networkEnabled)\n\t\t\treturn;\n\t\t\n\t\tconsole.log('received', packedChanges);\n\t\tpackedChanges.forEach(change => {\n\t\t\tchange = unpackChange(change);\n\t\t\tif (change) {\n\t\t\t\texecuteChange(change);\n\t\t\t}\n\t\t});\n\t});\n\t\n\tsocket.on('requestGameId', serverStartTime => {\n\t\tif (game)\n\t\t\tsocket.emit('gameId', game.id);\n\t});\n\n\tlet clientStartTime = Date.now();\n\tsocket.on('refreshIfOlderThan', requiredClientTime => {\n\t\tif (clientStartTime < requiredClientTime)\n\t\t\tlocation.reload();\n\t});\n\t\n\tsocket.on('gameData', gameData => {\n\t\tconsole.log('gameData', gameData);\n\t\texecuteExternal(() => {\n\t\t\tSerializable.fromJSON(gameData);\n\t\t});\n\t\tlocalStorage.anotherGameId = gameData.id;\n\t\t// location.replace(`${location.origin}${location.pathname}?gameId=${gameData.id}`);\n\t\thistory.replaceState({}, null, `?gameId=${gameData.id}`);\n\t\tconsole.log('replaced with', `${location.origin}${location.pathname}?gameId=${gameData.id}`);\n\t});\n\t\n\tsetTimeout(() => {\n\t\tlet gameId = getQueryVariable('gameId') || localStorage.anotherGameId;\n\t\tconsole.log('requestGameData', gameId);\n\t\tsocket.emit('requestGameData', gameId);\n\t}, 100);\n}\n\nif (typeof window !== 'undefined')\n\ttryToLoad();\n","import Serializable from './serializable';\nimport { addChange, changeType, setChangeOrigin } from './serializableManager'; \nimport assert from '../util/assert';\n\n// Instance of a property\nexport default class Property extends Serializable {\n\t// set skipSerializableRegistering=true if you are not planning to add this property to the hierarchy\n\t// if you give propertyType, value in real value form\n\t// if you don't give propertyType (give it later), value as JSON form\n\tconstructor({ value, predefinedId, name, propertyType, skipSerializableRegistering = false }) {\n\t\tassert(name, 'Property without a name can not exist');\n\t\tsuper(predefinedId, skipSerializableRegistering);\n\t\tthis._initialValue = value;\n\t\tif (propertyType)\n\t\t\tthis.setPropertyType(propertyType);\n\t\telse {\n\t\t\tthis.name = name;\n\t\t\tthis._initialValueIsJSON = true;\n\t\t}\n\t}\n\tsetPropertyType(propertyType) {\n\t\tthis.propertyType = propertyType;\n\t\ttry {\n\t\t\tif (this._initialValue !== undefined)\n\t\t\t\tthis.value = this._initialValueIsJSON ? propertyType.type.fromJSON(this._initialValue) : this._initialValue;\n\t\t\telse\n\t\t\t\tthis.value = propertyType.initialValue;\n\t\t} catch(e) {\n\t\t\tconsole.log('Invalid value', e, propertyType, this);\n\t\t\tthis.value = propertyType.initialValue;\n\t\t}\n\t\tthis.name = propertyType.name;\n\t}\n\tclone(skipSerializableRegistering = false) {\n\t\treturn new Property({\n\t\t\tvalue: this.propertyType.type.clone(this.value),\n\t\t\tname: this.name,\n\t\t\tpropertyType: this.propertyType,\n\t\t\tskipSerializableRegistering\n\t\t});\n\t}\n\ttoJSON() {\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tv: this.type.toJSON(this.value),\n\t\t\tn: this.propertyType.name\n\t\t});\n\t}\n}\nProperty.prototype.propertyType = null;\nObject.defineProperty(Property.prototype, 'type', {\n\tget() {\n\t\treturn this.propertyType.type;\n\t}\n});\nObject.defineProperty(Property.prototype, 'value', {\n\tset(newValue) {\n\t\tthis._value = this.propertyType.validator.validate(newValue);\n\t\tthis.dispatch('change', this._value);\n\t\tif (this._isInTree)\n\t\t\taddChange(changeType.setPropertyValue, this);\n\t},\n\tget() {\n\t\treturn this._value;\n\t}\n});\n\nSerializable.registerSerializable(Property, 'prp', json => {\n\treturn new Property({\n\t\tvalue: json.v,\n\t\tpredefinedId: json.id,\n\t\tname: json.n\n\t});\n});\n\nObject.defineProperty(Property.prototype, 'debug', {\n\tget() {\n\t\treturn `prp ${this.name}=${this.value}`;\n\t}\n});\n","export default class Vector {\n\tconstructor(x, y) {\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t}\n\tadd(vec) {\n\t\tthis.x += vec.x;\n\t\tthis.y += vec.y;\n\t\treturn this;\n\t}\n\tsubtract(vec) {\n\t\tthis.x -= vec.x;\n\t\tthis.y -= vec.y;\n\t\treturn this;\n\t}\n\tmultiply(vec) {\n\t\tthis.x *= vec.x;\n\t\tthis.y *= vec.y;\n\t\treturn this;\n\t}\n\tmultiplyScalar(scalar) {\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\treturn this;\n\t}\n\tdivide(vec) {\n\t\tthis.x /= vec.x;\n\t\tthis.y /= vec.y;\n\t\treturn this;\n\t}\n\tdivideScalar(scalar) {\n\t\tthis.x /= scalar;\n\t\tthis.y /= scalar;\n\t\treturn this;\n\t}\n\tdot(vec) {\n\t\treturn this.x * vec.x + this.y * vec.y;\n\t}\n\tlength() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t}\n\tlengthSq() {\n\t\treturn this.x * this.x + this.y * this.y;\n\t}\n\tsetLength(newLength) {\n\t\tlet oldLength = this.length();\n\n\t\tif (oldLength === 0) {\n\t\t\tthis.x = newLength;\n\t\t\tthis.y = 0;\n\t\t} else {\n\t\t\tthis.multiplyScalar(newLength / oldLength);\n\t\t}\n\t\treturn this;\n\t}\n\tgetProjectionOn(vec) {\n\t\tlet length = vec.length();\n\t\tif (length === 0)\n\t\t\treturn this.clone();\n\t\telse\n\t\t\treturn vec.clone().multiplyScalar(this.dot(vec) / (length * length));\n\t}\n\tdistance(vec) {\n\t\tlet dx = this.x - vec.x,\n\t\t\tdy = this.y - vec.y;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t}\n\tdistanceSq(vec) {\n\t\tlet dx = this.x - vec.x,\n\t\t\tdy = this.y - vec.y;\n\t\treturn dx * dx + dy * dy;\n\t}\n\tnormalize() {\n\t\treturn this.setLength(1);\n\t}\n\thorizontalAngle() {\n\t\treturn Math.atan2(this.y, this.x);\n\t}\n\tverticalAngle() {\n\t\treturn Math.atan2(this.x, this.y);\n\t}\n\trotate(angle) {\n\t\tlet x = this.x * Math.cos(angle) - this.y * Math.sin(angle);\n\t\tthis.y = this.x * Math.sin(angle) + this.y * Math.cos(angle);\n\t\tthis.x = x;\n\n\t\treturn this;\n\t}\n\trotateTo(rotation) {\n\t\treturn this.rotate(rotation-this.verticalAngle());\n\t}\n\tisEqualTo(vec) {\n\t\treturn this.x === vec.x && this.y === vec.y;\n\t}\n\tclone() {\n\t\treturn new Vector(this.x, this.y);\n\t}\n\tset(vec) {\n\t\tthis.x = vec.x;\n\t\tthis.y = vec.y;\n\t\treturn this;\n\t}\n\ttoString() {\n\t\treturn `[${this.x}, ${this.y}]`;\n\t}\n}\nVector.fromObject = function(obj) {\n\treturn new Vector(obj.x, obj.y);\n};\n","import Serializable from './serializable';\nimport assert from '../util/assert';\nimport { getSerializable } from './serializableManager';\nexport { default as Prop } from './propertyType';\n\nexport default class PropertyOwner extends Serializable {\n\tconstructor(predefinedId = false) {\n\t\tassert(Array.isArray(this.constructor._propertyTypes), 'call PropertyOwner.defineProperties after class definition');\n\t\tsuper(predefinedId);\n\t\tthis._properties = {};\n\t}\n\t// Just a helper\n\tinitWithPropertyValues(values = {}) {\n\t\tlet children = [];\n\t\t\n\t\tObject.keys(values).forEach(propName => {\n\t\t\tlet propertyType = this.constructor._propertyTypesByName[propName];\n\t\t\tassert(propertyType, 'Invalid property ' + propName);\n\t\t\tchildren.push(propertyType.createProperty({\n\t\t\t\tvalue: values[propName]\n\t\t\t}));\n\t\t});\n\t\tthis.initWithChildren(children);\n\t\treturn this;\n\t}\n\tinitWithChildren(children = []) {\n\t\tassert(!(this._state & Serializable.STATE_INIT), 'init already done');\n\t\tthis._state |= Serializable.STATE_INIT;\n\t\t\n\t\tlet propChildren = [];\n\t\tlet otherChildren = [];\n\t\t// Separate Property children and other children\n\t\tchildren.forEach(child => {\n\t\t\tif (child.threeLetterType === 'prp') {\n\t\t\t\tpropChildren.push(child);\n\t\t\t} else {\n\t\t\t\totherChildren.push(child);\n\t\t\t}\n\t\t});\n\t\tsuper.addChildren(otherChildren);\n\t\t\n\t\tlet invalidPropertiesCount = 0;\n\t\t\n\t\t// Make sure Properties have a PropertyType. They don't work without it.\n\t\tpropChildren.filter(prop => !prop.propertyType).forEach(prop => {\n\t\t\tif (!this.constructor._propertyTypesByName[prop.name]) {\n\t\t\t\tconsole.log('Property of that name not defined', this.id, prop.name, this);\n\t\t\t\tinvalidPropertiesCount++;\n\t\t\t\tprop.isInvalid = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tprop.setPropertyType(this.constructor._propertyTypesByName[prop.name]);\n\t\t});\n\t\tif (invalidPropertiesCount)\n\t\t\tpropChildren = propChildren.filter(p => !p.isInvalid);\n\t\t\n\t\t// Make sure all PropertyTypes have a matching Property\n\t\tlet nameToProp = {};\n\t\tpropChildren.forEach(c => nameToProp[c.name] = c);\n\t\tthis.constructor._propertyTypes.forEach(propertyType => {\n\t\t\tif (!nameToProp[propertyType.name])\n\t\t\t\tpropChildren.push(propertyType.createProperty());\n\t\t});\n\t\t\n\t\tsuper.addChildren(propChildren);\n\t};\n\taddChild(child) {\n\t\tassert(this._state & Serializable.STATE_INIT, this.constructor.componentName || this.constructor + ' requires that initWithChildren will be called before addChild');\n\t\tsuper.addChild(child);\n\t\tif (child.threeLetterType === 'prp') {\n\t\t\tif (!child.propertyType) {\n\t\t\t\tif (!this.constructor._propertyTypesByName[child.name]) {\n\t\t\t\t\tconsole.log('Property of that name not defined', this.id, child, this);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchild.setPropertyType(this.constructor._propertyTypesByName[child.name]);\n\t\t\t}\n\t\t\tassert(this._properties[child.propertyType.name] === undefined, 'Property already added');\n\t\t\tthis._properties[child.propertyType.name] = child;\n\t\t}\n\t};\n\tdelete() {\n\t\tif (!super.delete()) return false;\n\t\tthis._properties = {};\n\t\treturn true;\n\t}\n\t// idx is optional\n\tdeleteChild(child, idx) {\n\t\tassert(child.threeLetterType !== 'prp', 'Can not delete just one Property child.');\n\t\tsuper.deleteChild(child, idx);\n\t}\n}\n\nPropertyOwner.defineProperties = function(Class, propertyTypes) {\n\tClass._propertyTypes = propertyTypes;\n\tClass._propertyTypesByName = {};\n\tpropertyTypes.forEach(propertyType => {\n\t\tassert(Class.prototype[propertyType.name] === undefined, 'Property name ' + propertyType.name + ' clashes');\n\t\tClass._propertyTypesByName[propertyType.name] = propertyType;\n\t\tObject.defineProperty(Class.prototype, propertyType.name, {\n\t\t\tget() {\n\t\t\t\treturn this._properties[propertyType.name].value;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis._properties[propertyType.name].value = value;\n\t\t\t}\n\t\t});\n\t});\n};\n","import Serializable from './serializable';\nimport assert from '../util/assert';\n\nconst ALIVE_ERROR = 'entity is already dead';\n\nexport default class Entity extends Serializable {\n\tconstructor(predefinedId = false) {\n\t\tsuper(predefinedId);\n\t\tthis.components = new Map(); // name -> array\n\t\tthis.sleeping = false;\n\t\tthis.prototype = null; // should be set immediately after constructor\n\t\tthis.localMaster = true; // set false if entity is controlled over the net\n\t}\n\n\t// Get the first component of given name\n\tgetComponent(name) {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tlet components = this.components.get(name);\n\t\tif (components !== undefined)\n\t\t\treturn components[0];\n\t\telse\n\t\t\treturn null;\n\t}\n\n\t// Get all components with given name\n\tgetComponents(name) {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\treturn this.components.get(name) || [];\n\t}\n\t\n\tgetListOfAllComponents() {\n\t\tlet components = [];\n\t\tthis.components.forEach((value, key) => {\n\t\t\tcomponents.push(...value);\n\t\t});\n\t\treturn components;\n\t}\n\t\n\tclone() {\n\t\tlet entity = new Entity();\n\t\tentity.prototype = this.prototype;\n\t\tentity.sleeping = this.sleeping;\n\t\tlet components = [];\n\t\tthis.components.forEach((value, key) => {\n\t\t\tcomponents.push(...value.map(c => c.clone()));\n\t\t});\n\t\tentity.addComponents(components);\n\t\treturn entity;\n\t}\n\n\t/*\n\tAdds multiple components as an array to this Entity.\n\tUses addComponent internally.\n\tInitializes components after all components are added.\n\t*/\n\taddComponents(components) {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tassert(Array.isArray(components), 'Parameter is not an array.');\n\n\t\tfor (let i = 0; i < components.length; i++) {\n\t\t\tlet componentList = this.components.get(components[i]._name) || this.components.set(components[i]._name, []).get(components[i]._name);\n\t\t\tcomponentList.push(components[i]);\n\t\t\tcomponents[i].entity = this;\n\t\t\tcomponents[i]._parent = this;\n\t\t}\n\t\t\n\t\tif (!this.sleeping)\n\t\t\tEntity.initComponents(components);\n\t\treturn this;\n\t}\n\tstatic initComponents(components) {\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i]._preInit();\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i]._init();\n\t}\n\tstatic makeComponentsSleep(components) {\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i]._sleep();\n\t}\n\tstatic deleteComponents(components) {\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i].delete();\n\t}\n\tsleep() {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tif (this.sleeping) return false;\n\t\t\n\t\tthis.components.forEach((value, key) => Entity.makeComponentsSleep(value));\n\t\t\n\t\tthis.sleeping = true;\n\t\treturn true;\n\t}\n\twakeUp() {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tif (!this.sleeping) return false;\n\n\t\tthis.components.forEach((value, key) => Entity.initComponents(value));\n\n\t\tthis.sleeping = false;\n\t\treturn true;\n\t}\n\tdelete() {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tthis.sleep();\n\t\tif (!super.delete()) return false;\n\t\t\n\t\tthis.components.forEach((value, key) => Entity.deleteComponents(value));\n\t\tthis.components.clear();\n\t\t\n\t\treturn true;\n\t}\n\tdeleteComponent(component) {\n\t\tlet array = this.getComponents(component.constructor.componentName);\n\t\tlet idx = array.indexOf(component);\n\t\tassert(idx >= 0);\n\t\tif (!this.sleeping)\n\t\t\tcomponent._sleep();\n\t\tcomponent.delete();\n\t\tarray.splice(idx, 1);\n\t\treturn this;\n\t}\n\tsetInTreeStatus(isInTree) {\n\t\tif (this._isInTree === isInTree)\n\t\t\treturn;\n\n\t\tthis._isInTree = isInTree;\n\t\tthis.components.forEach((value, key) => {\n\t\t\tvalue.forEach(component => component.setInTreeStatus(isInTree));\n\t\t});\n\t}\n\ttoJSON() {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\t\n\t\tlet components = [];\n\t\tthis.components.forEach(compArray => {\n\t\t\tcompArray.forEach(comp => {\n\t\t\t\tcomponents.push(comp.toJSON());\n\t\t\t});\n\t\t});\n\t\t\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tcomp: components,\n\t\t\tproto: this.prototype.id\n\t\t});\n\t}\n}\nObject.defineProperty(Entity.prototype, 'position', {\n\tget() {\n\t\treturn this.getComponent('Transform').position;\n\t},\n\tset(position) {\n\t\tthis.getComponent('Transform').position = position;\n\t}\n});\n\nSerializable.registerSerializable(Entity, 'ent', json => {\n\tconsole.log('creating entity from json', json);\n\tlet entity = new Entity(json.id);\n\tentity.prototype = getSerializable(json.proto);\n\tconsole.log('created entity from json', entity);\n\tif (json.comp) {\n\t\tentity.addComponents(json.comp.map(Serializable.fromJSON));\n\t}\n\treturn entity;\n});\n","import Serializable, { createStringId } from './serializable';\nimport assert from '../util/assert';\nimport { componentClasses, Component } from './component';\n\nexport default class ComponentData extends Serializable {\n\tconstructor(componentClassName, predefinedId = false, predefinedComponentId = false) {\n\t\tthis.name = componentClassName;\n\t\tthis.componentClass = componentClasses.get(this.name);\n\t\tassert(this.componentClass, 'Component class not defined: ' + componentClassName);\n\t\tsuper(predefinedId);\n\t\tif (!this.componentClass.allowMultiple)\n\t\t\tpredefinedComponentId = '_' + componentClassName;\n\t\tthis.componentId = predefinedComponentId || createStringId('cid', 10); // what will be the id of component created from this componentData\n\t}\n\taddChild(child) {\n\t\tif (child.threeLetterType === 'prp') {\n\t\t\tif (!child.propertyType) {\n\t\t\t\tif (!this.componentClass._propertyTypesByName[child.name]) {\n\t\t\t\t\tconsole.log('Property of that name not defined', this.id, child, this);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchild.setPropertyType(this.componentClass._propertyTypesByName[child.name]);\n\t\t\t}\n\t\t}\n\t\tsuper.addChild(child);\n\t\treturn this;\n\t};\n\tclone() {\n\t\tlet obj = new ComponentData(this.name);\n\t\tlet children = [];\n\t\tthis.forEachChild(null, child => {\n\t\t\tchildren.push(child.clone());\n\t\t});\n\t\tobj.initWithChildren(children);\n\t\tthis._state |= Serializable.STATE_CLONE;\n\t\treturn obj;\n\t}\n\ttoJSON() {\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tcid: this.componentId,\n\t\t\tn: this.name\n\t\t});\n\t}\n\t/*\n\tReturns a list of Properties.\n\tThose which don't have an id are temporary properties generated from parents.\n\tDon't set _depth.\n\t */\n\tgetInheritedProperties(_depth = 0) {\n\t\tlet properties = {};\n\n\t\t// properties from parent\n\t\tlet parentComponentData = this.getParentComponentData();\n\t\tif (parentComponentData)\n\t\t\tparentComponentData.getInheritedProperties(_depth + 1).forEach(prop => properties[prop.name] = prop);\n\t\t\n\t\t// properties from this. override properties of parents\n\t\tthis.getChildren('prp').forEach(prop => {\n\t\t\tif (_depth === 0)\n\t\t\t\tproperties[prop.name] = prop;\n\t\t\telse\n\t\t\t\tproperties[prop.name] = prop.clone(true);\n\t\t});\n\t\t\n\t\t// fill from propertyType\n\t\tif (_depth === 0) {\n\t\t\treturn this.componentClass._propertyTypes.map(propertyType => {\n\t\t\t\treturn properties[propertyType.name] || propertyType.createProperty({\n\t\t\t\t\tskipSerializableRegistering: true\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn Object.keys(properties).map(key => properties[key]);\n\t\t}\n\t}\n\tgetParentComponentData() {\n\t\tif (!this._parent) return null;\n\t\tlet parentPrototype = this._parent.getParentPrototype();\n\t\twhile (parentPrototype) {\n\t\t\tlet parentComponentData = parentPrototype.findChild('cda', componentData => componentData.componentId === this.componentId);\n\t\t\tif (parentComponentData)\n\t\t\t\treturn parentComponentData;\n\t\t\telse\n\t\t\t\tparentPrototype = parentPrototype.getParentPrototype();\n\t\t}\n\t\treturn null;\n\t}\n\tgetPropertyOrCreate(name) {\n\t\tlet property = this.findChild('prp', prp => prp.name === name);\n\t\tif (!property) {\n\t\t\tproperty = this.componentClass._propertyTypesByName[name].createProperty();\n\t\t\tthis.addChild(property);\n\t\t}\n\t\treturn property;\n\t}\n\tgetProperty(name) {\n\t\treturn this.findChild('prp', prp => prp.name === name);\n\t}\n\tsetValue(propertyName, value) {\n\t\tthis.getPropertyOrCreate(propertyName).value = value;\n\t\treturn this;\n\t}\n\tgetValue(name) {\n\t\tlet property = this.getProperty(name);\n\t\tif (property)\n\t\t\treturn property.value;\n\t\tlet parent = this.getParentComponentData();\n\t\t\n\t\tif (parent)\n\t\t\treturn parent.getValue(name);\n\t\t\n\t\treturn this.componentClass._propertyTypesByName[name].initialValue;\n\t}\n\tcreateComponent() {\n\t\tlet properties = this.getInheritedProperties();\n\t\tlet values = {};\n\t\tproperties.forEach(prop => {\n\t\t\tvalues[prop.name] = prop.value;\n\t\t});\n\t\tlet component = Component.create(this.name, values);\n\t\tcomponent._componentId = this.componentId;\n\t\treturn component;\n\t}\n}\nSerializable.registerSerializable(ComponentData, 'cda', json => {\n\treturn new ComponentData(json.n, json.id, json.cid);\n});\n","import Serializable from './serializable';\nimport assert from '../util/assert';\nimport { getSerializable } from './serializableManager';\nimport Prop from './propertyType';\nimport PropertyOwner from './propertyOwner';\nimport ComponentData from './componentData';\nimport Entity from './entity';\nimport { game } from './game';\n\nlet propertyTypes = [\n\tProp('name', 'No name', Prop.string)\n];\n\nexport default class Prototype extends PropertyOwner {\n\tconstructor() {\n\t\tsuper(...arguments);\n\t\t\n\t\tthis.previouslyCreatedEntity = null;\n\t}\n\t\n\taddChild(child) {\n\t\tif (child.threeLetterType === 'cda' && !child.componentClass.allowMultiple)\n\t\t\tassert(this.findChild('cda', cda => cda.componentId === child.componentId) === null, `Can't have multiple ${child.name} components. See Component.allowMultiple`);\n\t\tsuper.addChild(child);\n\t}\n\tgetParentPrototype() {\n\t\treturn this._parent && this._parent.threeLetterType === 'prt' ? this._parent : null;\n\t}\n\t\n\t/*\n\tReturns JSON:\n\t[\n\t\t{\n\t\t\townComponent: false, // component of a parent prototype\n\t\t\tcomponentClass: [object Object],\n\t\t\tcomponentId: <componentId>,\n\t\t\tthreeLetterType: 'icd',\n\t \t\tgeneratedForPrototype: <this>,\n\t\t\tproperties: [\n\t\t\t\t{ id missing }\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t ownComponentData: <ComponentData> || null, // null if this prototype has 0 properties defined\n\t\t\t componentClass: [object Object],\n\t\t\t componentId: <componentId>,\n\t\t\t threeLetterType: 'icd',\n\t\t\t generatedForPrototype: <this>,\n\t\t\t properties: [\n\t\t\t \t{ id found if own property } // some properties might be from parent prototypes and thus missing id\n\t\t\t ]\n\t\t }\n\t]\n\t */\n\tgetInheritedComponentDatas(filter = null) {\n\t\tlet originalPrototype = this;\n\t\t\n\t\tfunction getDataFromPrototype(prototype, _depth = 0) {\n\t\t\tlet data;\n\t\t\t\n\t\t\tlet parentPrototype = prototype.getParentPrototype();\n\t\t\tif (parentPrototype)\n\t\t\t\tdata = getDataFromPrototype(parentPrototype, _depth + 1);\n\t\t\telse\n\t\t\t\tdata = {}; // Top level\n\t\t\t\n\t\t\tlet componentDatas = prototype.getChildren('cda');\n\t\t\tcomponentDatas.forEach(componentData => {\n\t\t\t\tif (filter && !filter(componentData))\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\tif (!data[componentData.componentId]) {\n\t\t\t\t\t// Most parent version of this componentId\n\t\t\t\t\tdata[componentData.componentId] = {\n\t\t\t\t\t\t// ownComponent = true if the original prototype is the first one introducing this componentId\n\t\t\t\t\t\townComponentData: null, // will be given value if original prototype has this componentId\n\t\t\t\t\t\tcomponentClass: componentData.componentClass,\n\t\t\t\t\t\tcomponentId: componentData.componentId,\n\t\t\t\t\t\tpropertyHash: {},\n\t\t\t\t\t\tthreeLetterType: 'icd',\n\t\t\t\t\t\tgeneratedForPrototype: originalPrototype\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (_depth === 0) {\n\t\t\t\t\tdata[componentData.componentId].ownComponentData = componentData;\n\t\t\t\t}\n\n\t\t\t\tcomponentData.getChildren('prp').forEach(property => {\n\t\t\t\t\t// Newest version of a property always overrides old property\n\t\t\t\t\tdata[componentData.componentId].propertyHash[property.name] = _depth === 0 ? property : property.clone(true);\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\treturn data;\n\t\t}\n\n\t\tlet data = getDataFromPrototype(this);\n\t\tlet array = Object.keys(data).map(key => data[key]);\n\t\tarray.forEach(inheritedComponentData => {\n\t\t\tinheritedComponentData.properties = inheritedComponentData.componentClass._propertyTypes.map(propertyType => {\n\t\t\t\tif (inheritedComponentData.propertyHash[propertyType.name])\n\t\t\t\t\treturn inheritedComponentData.propertyHash[propertyType.name];\n\t\t\t\telse\n\t\t\t\t\treturn propertyType.createProperty({ skipSerializableRegistering: true });\n\t\t\t});\n\t\t\tdelete inheritedComponentData.propertyHash;\n\t\t});\n\t\t\n\t\tarray.forEach(inheritedComponentData => {\n\t\t\tlet cid = inheritedComponentData.componentId;\n\t\t});\n\n\t\treturn array.sort((a, b) => a.componentClass.componentName.localeCompare(b.componentClass.componentName));\n\t}\n\t\n\tcreateAndAddPropertyForComponentData(inheritedComponentData, propertyName, propertyValue) {\n\t\tlet propertyType = inheritedComponentData.componentClass._propertyTypesByName[propertyName];\n\t\tassert(propertyType, 'Invalid propertyName', propertyName, inheritedComponentData);\n\t\tlet componentData = this.findChild('cda', componentData => componentData.componentId === inheritedComponentData.componentId);\n\t\tlet componentDataIsNew = false;\n\t\tif (!componentData) {\n\t\t\tconsole.log('no component data. create one', this, inheritedComponentData);\n\t\t\tcomponentData = new ComponentData(inheritedComponentData.componentClass.componentName, false, inheritedComponentData.componentId);\n\t\t\tcomponentDataIsNew = true;\n\t\t}\n\t\tlet property = componentData.findChild('prp', property => property.name === propertyName);\n\t\tif (property) {\n\t\t\tproperty.value = propertyValue;\n\t\t\treturn property;\n\t\t}\n\n\t\tproperty = propertyType.createProperty({\n\t\t\tvalue: propertyValue,\n\t\t});\n\t\tcomponentData.addChild(property);\n\t\t\n\t\tif (componentDataIsNew)\n\t\t\tthis.addChild(componentData);\n\t\t\n\t\treturn property;\n\t}\n\t\n\tfindComponentDataByComponentId(componentId, alsoFindFromParents = false) {\n\t\tlet child = this.findChild('cda', componentData => componentData.componentId === componentId);\n\t\tif (child)\n\t\t\treturn child;\n\t\tif (alsoFindFromParents) {\n\t\t\tlet parent = this.getParentPrototype();\n\t\t\tif (parent)\n\t\t\t\treturn parent.findComponentDataByComponentId(componentId, alsoFindFromParents);\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tgetOwnComponentDataOrInherit(componentId) {\n\t\tlet componentData = this.findComponentDataByComponentId(componentId, false);\n\t\tif (!componentData) {\n\t\t\tlet inheritedComponentData = this.findComponentDataByComponentId(componentId, true);\n\t\t\tif (!inheritedComponentData)\n\t\t\t\treturn null;\n\t\t\t\n\t\t\tcomponentData = new ComponentData(inheritedComponentData.name, false, componentId);\n\t\t\tthis.addChild(componentData);\n\t\t}\n\t\treturn componentData\n\t}\n\t\n\tfindOwnProperty(componentId, propertyName) {\n\t\tlet componentData = this.findComponentDataByComponentId(componentId);\n\t\tif (componentData) {\n\t\t\treturn componentData.getProperty(propertyName);\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tcreateEntity() {\n\t\tlet entity = new Entity();\n\t\tlet inheritedComponentDatas = this.getInheritedComponentDatas();\n\t\tlet components = inheritedComponentDatas.map(Component.createWithInheritedComponentData);\n\t\tentity.addComponents(components);\n\t\tentity.prototype = this;\n\t\t\n\t\tthis.previouslyCreatedEntity = entity;\n\t\treturn entity;\n\t}\n\t\n\tgetValue(componentId, propertyName) {\n\t\tlet componentData = this.findComponentDataByComponentId(componentId, true);\n\t\tif (componentData)\n\t\t\treturn componentData.getValue(propertyName);\n\t\telse\n\t\t\treturn undefined;\n\t}\n\t\n\tcountEntityPrototypes(findParents = false) {\n\t\tif (this.threeLetterType !== 'prt')\n\t\t\treturn 0;\n\t\t\n\t\tlet count = 0;\n\t\tlet levels = game.getChildren('lvl');\n\t\tfor (let i = levels.length-1; i >= 0; i--) {\n\t\t\tlet entityPrototypes = levels[i].getChildren('epr');\n\t\t\tfor (let j = entityPrototypes.length-1; j >= 0; j--) {\n\t\t\t\tif (entityPrototypes[j].prototype === this)\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (findParents)\n\t\t\tthis.forEachChild('prt', prt => count += prt.countEntityPrototypes(true));\n\t\t\n\t\treturn count;\n\t}\n\t\n\tdelete() {\n\t\tthis._game = this._game || this.getRoot();\n\t\tif (!super.delete()) return false;\n\t\tif (this.threeLetterType === 'prt') {\n\t\t\tthis._game.forEachChild('lvl', lvl => {\n\t\t\t\tlet items = lvl.getChildren('epr');\n\t\t\t\tfor (let i = items.length-1; i >= 0; i--) {\n\t\t\t\t\tif (items[i].prototype === this) {\n\t\t\t\t\t\tlvl.deleteChild(items[i], i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.previouslyCreatedEntity = null;\n\t\treturn true;\n\t}\n}\nPropertyOwner.defineProperties(Prototype, propertyTypes);\n\nPrototype.create = function(name) {\n\treturn new Prototype().initWithPropertyValues({ name: name });\n};\n\nSerializable.registerSerializable(Prototype, 'prt');\n","import Serializable from './serializable'\nimport { addChange, changeType, setChangeOrigin } from './serializableManager';\nimport Prototype from '../core/prototype'\nimport assert from '../util/assert'\nimport PropertyOwner, { Prop } from '../core/propertyOwner';\n\nlet propertyTypes = [\n\tProp('name', 'No name', Prop.string)\n];\n\nlet game = null; // only one game at the time\nexport { game };\n\nlet isClient = typeof window !== 'undefined';\n\nexport default class Game extends PropertyOwner {\n\tconstructor(predefinedId) {\n\t\tif (isClient) {\n\t\t\tif (game) {\n\t\t\t\ttry {\n\t\t\t\t\tgame.delete();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Deleting old game failed', e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tgame = this;\n\t\t}\n\t\t\n\t\tif (predefinedId)\n\t\t\tconsole.log('game import');\n\t\telse\n\t\t\tconsole.log('game created');\n\t\t\n\t\tsuper(...arguments);\n\t}\n\tinitWithChildren() {\n\t\tsuper.initWithChildren(...arguments);\n\t\taddChange(changeType.addSerializableToTree, this);\n\t}\n\tdelete() {\n\t\tif (!super.delete()) return false;\n\t\t\n\t\tif (game === this)\n\t\t\tgame = null;\n\t\tconsole.log('game.delete');\n\t\t\n\t\treturn true;\n\t}\n}\nPropertyOwner.defineProperties(Game, propertyTypes);\n\nGame.prototype.isRoot = true;\n\nSerializable.registerSerializable(Game, 'gam');\n","import Serializable from './serializable';\nimport Entity from './entity';\nimport assert from '../util/assert';\nimport { game } from './game';\nimport { addChange, changeType, setChangeOrigin } from './serializableManager';\n\nlet scene = null;\nexport { scene };\n\nlet isClient = typeof window !== 'undefined';\n\nexport default class Scene extends Serializable {\n\tconstructor(predefinedId = false) {\n\t\tif (isClient) {\n\t\t\tif (scene) {\n\t\t\t\ttry {\n\t\t\t\t\tscene.delete();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Deleting old scene failed', e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tscene = this;\n\t\t\t\n\t\t\tthis.canvas = document.querySelector('canvas.anotherCanvas');\n\t\t\tthis.context = this.canvas.getContext('2d');\n\t\t}\n\t\tthis.level = null;\n\t\t\n\t\t// To make component based entity search fast:\n\t\tthis.components = new Map(); // componentName -> Set of components\n\t\t\n\t\tthis.animationFrameId = null;\n\t\tthis.playing = false;\n\t\tthis.time = 0;\n\n\t\tsuper(predefinedId);\n\t\taddChange(changeType.addSerializableToTree, this);\n\n\t\tif (predefinedId)\n\t\t\tconsole.log('scene import');\n\t\telse\n\t\t\tconsole.log('scene created');\n\t\t\n\t\tthis.draw();\n\t}\n\twin() {\n\t\tsetTimeout(() => {\n\t\t\tsetChangeOrigin(this);\n\t\t\tthis.reset();\n\t\t\tgame.dispatch('levelCompleted');\n\t\t})\n\t}\n\tanimFrame(playCalled) {\n\t\tthis.animationFrameId = null;\n\t\tif (!this._alive || !this.playing) return;\n\t\t\n\t\tlet t = 0.001*performance.now();\n\t\tlet dt = t-this._prevUpdate;\n\t\tif (dt > 0.1)\n\t\t\tdt = 0.1;\n\t\tthis._prevUpdate = t;\n\t\tthis.time += dt;\n\n\t\tsetChangeOrigin(this);\n\t\tthis.dispatch('onUpdate', dt, this.time);\n\t\tthis.draw();\n\t\t\n\t\tthis.requestAnimFrame();\n\t}\n\trequestAnimFrame() {\n\t\tthis.animationFrameId = window.requestAnimationFrame(() => this.animFrame());\n\t}\n\tdraw() {\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\tthis.dispatch('onDraw', this.context);\n\t}\n\tisInInitialState() {\n\t\treturn !this.playing && this.time === 0;\n\t}\n\treset() {\n\t\tthis.pause();\n\t\tthis.deleteChildren();\n\t\tif (this.level)\n\t\t\tthis.level.createScene(this);\n\t\tthis.time = 0;\n\t\tthis.draw();\n\t}\n\tpause() {\n\t\tif (!this.playing) return;\n\t\t\n\t\tthis.playing = false;\n\t\tif (this.animationFrameId)\n\t\t\twindow.cancelAnimationFrame(this.animationFrameId);\n\t\tthis.animationFrameId = null;\n\t}\n\tplay() {\n\t\tif (this.playing) return;\n\t\t\n\t\tthis._prevUpdate = 0.001*performance.now();\n\t\tthis.playing = true;\n\t\t\n\t\tthis.requestAnimFrame();\n\t\t\n\t\t\n\t\tif (this.time === 0)\n\t\t\tthis.dispatch('onStart');\n\t\t\n\t\t/*\n\t\tlet player = game.findChild('prt', p => p.name === 'Player', true);\n\t\tif (player) {\n\t\t\tconsole.log('Spawning player!', player);\n\t\t\tthis.spawn(player);\n\t\t}\n\t\t*/\n\t}\n\tdelete() {\n\t\tif (!super.delete()) return false;\n\t\t\n\t\tif (scene === this)\n\t\t\tscene = null;\n\t\t\n\t\tconsole.log('scene.delete');\n\t\treturn true;\n\t}\n\n\t// To make component based entity search fast:\n\taddComponent(component) {\n\t\tlet set = this.components.get(component.constructor.componentName);\n\t\tif (!set) {\n\t\t\tset = new Set();\n\t\t\tthis.components.set(component.constructor.componentName, set);\n\t\t}\n\t\tset.add(component);\n\t}\n\tremoveComponent(component) {\n\t\tlet set = this.components.get(component.constructor.componentName);\n\t\tassert(set);\n\t\tassert(set.delete(component));\n\t}\n\tgetComponents(componentName) {\n\t\treturn this.components.get(componentName) || new Set;\n\t}\n}\nScene.prototype.isRoot = true;\n\nSerializable.registerSerializable(Scene, 'sce');\n","import Serializable from './serializable';\nimport assert from '../util/assert';\nimport Property from './property';\nimport PropertyOwner from './propertyOwner';\nimport { scene } from './scene';\nimport { game } from './game';\nexport { default as Prop } from './propertyType';\nexport let componentClasses = new Map();\nimport ComponentData from './componentData';\n\n// Instance of a component, see componentExample.js\nexport class Component extends PropertyOwner {\n\tconstructor(predefinedId = false) {\n\t\tsuper(predefinedId);\n\t\tthis._componentId = null; // Creator will fill this\n\t\tthis.scene = scene;\n\t\tthis.game = game;\n\t\tthis._listenRemoveFunctions = [];\n\t\tthis.entity = null;\n\t}\n\tdelete() {\n\t\t// Component.delete never returns false because entity doesn't have components as children\n\t\tthis._parent = null;\n\t\tthis.entity = null;\n\t\tsuper.delete();\n\t\treturn true;\n\t}\n\t_preInit() {\n\t\tthis.constructor.requirements.forEach(r => {\n\t\t\tthis[r] = this.entity.getComponent(r);\n\t\t\tassert(this[r], `${this.constructor.componentName} requires component ${r} but it is not found`);\n\t\t});\n\n\t\tthis.forEachChild('com', c => c._preInit());\n\t\t\n\t\t['onUpdate', 'onDraw', 'onDrawHelper', 'onStart'].forEach(funcName => {\n\t\t\tif (typeof this[funcName] === 'function') {\n\t\t\t\t// console.log('listen ' + funcName);\n\t\t\t\tthis._listenRemoveFunctions.push(this.scene.listen(funcName, (...args) => this[funcName](...args)));\n\t\t\t}\n\t\t});\n\n\t\tif (this.constructor.componentName !== 'Transform')\n\t\t\tthis.scene.addComponent(this);\n\t\t\n\t\ttry {\n\t\t\tif (typeof this.preInit === 'function')\n\t\t\t\tthis.preInit();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.componentName, 'preInit', e);\n\t\t}\n\t}\n\t_init() {\n\t\tthis.forEachChild('com', c => c._init());\n\t\ttry {\n\t\t\tif (typeof this.init === 'function')\n\t\t\t\tthis.init();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.componentName, 'init', e);\n\t\t}\n\t}\n\t_sleep() {\n\t\ttry {\n\t\t\tif (typeof this.sleep === 'function')\n\t\t\t\tthis.sleep();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.componentName, 'sleep', e);\n\t\t}\n\n\t\tif (this.constructor.componentName !== 'Transform')\n\t\t\tthis.scene.removeComponent(this);\n\t\t\n\t\tthis.forEachChild('com', c => c._sleep());\n\t\t// console.log(`remove ${this._listenRemoveFunctions.length} listeners`);\n\t\tthis._listenRemoveFunctions.forEach(f => f());\n\t\tthis._listenRemoveFunctions.length = 0;\n\t}\n\tcreateComponentData() {\n\t\tlet componentName = this.constructor.componentName;\n\t\tlet propertyTypes = this.constructor._propertyTypes;\n\t\tlet componentData = new ComponentData(componentName);\n\t\tlet children = [];\n\t\tpropertyTypes.forEach(pt => {\n\t\t\tchildren.push(pt.createProperty({\n\t\t\t\tvalue: this[pt.name]\n\t\t\t}));\n\t\t});\n\t\tcomponentData.initWithChildren(children);\n\t\treturn componentData;\n\t}\n\ttoJSON() {\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tn: this.constructor.componentName,\n\t\t\tcid: this._componentId\n\t\t});\n\t}\n}\nComponent.create = function(name, values = {}) {\n\tlet componentClass = componentClasses.get(name);\n\tassert(componentClass);\n\tlet component = new componentClass();\n\tcomponent.initWithPropertyValues(values);\n\treturn component;\n};\nComponent.createWithInheritedComponentData = function(inheritedComponentData) {\n\tlet component = new inheritedComponentData.componentClass;\n\tcomponent._componentId = inheritedComponentData.componentId;\n\tlet properties = inheritedComponentData.properties.map(p => p.clone());\n\tcomponent.initWithChildren(properties);\n\treturn component;\n};\n\nComponent.reservedPropertyNames = new Set(['id', 'constructor', 'delete', 'children', 'entity', 'env', 'init', 'preInit', 'sleep', 'toJSON', 'fromJSON']);\nComponent.reservedPrototypeMembers = new Set(['id', 'children', 'entity', 'env', '_preInit', '_init', '_sleep', '_forEachChildComponent', '_properties', '_componentData', 'toJSON', 'fromJSON']);\nComponent.register = function({\n\tname = '', // required\n\tdescription = '',\n\tcategory = 'Other',\n\ticon = 'fa-puzzle-piece', // in editor\n\tcolor = '', // in editor\n\tproperties = [],\n\trequirements = ['Transform'],\n\tchildren = [],\n\tparentClass = Component,\n\tprototype = {},\n\tallowMultiple = true\n}) {\n\tassert(name, 'Component must have a name.');\n\tassert(name[0] >= 'A' && name[0] <= 'Z', 'Component name must start with capital letter.');\n\tassert(!componentClasses.has(name), 'Duplicate component class ' + name);\n\tObject.keys(prototype).forEach(k => {\n\t\tif (Component.reservedPrototypeMembers.has(k))\n\t\t\tassert(false, 'Component prototype can not have a reserved member: ' + k);\n\t});\n\t\n\tlet constructorFunction = prototype.constructor;\n\tlet deleteFunction = prototype.delete;\n\tdelete prototype.constructor;\n\tdelete prototype.delete;\n\tclass Com extends parentClass {\n\t\tconstructor() {\n\t\t\tsuper(...arguments);\n\t\t\tif (constructorFunction)\n\t\t\t\tconstructorFunction();\n\t\t}\n\t\tdelete() {\n\t\t\tif (!super.delete()) return false;\n\t\t\t\n\t\t\tif (deleteFunction)\n\t\t\t\tdeleteFunction();\n\t\t\t\n\t\t\treturn true;\n\t\t}\n\t}\n\tproperties.forEach(p => {\n\t\tassert(!Component.reservedPropertyNames.has(p.name), 'Can not have property called ' + p.name);\n\t});\n\tPropertyOwner.defineProperties(Com, properties); // properties means propertyTypes here\n\tCom.componentName = name;\n\tCom.category = category;\n\tif (requirements.indexOf('Transform') < 0) requirements.push('Transform');\n\tCom.requirements = requirements;\n\tCom.children = children;\n\tCom.description = description;\n\tCom.allowMultiple = allowMultiple;\n\tCom.icon = icon;\n\t\n\tlet num = name.split('').reduce((prev, curr) => prev + curr.charCodeAt(0), 0);\n\tCom.color = color || `hsla(${ num % 360 }, 40%, 60%, 1)`;\n\n\tprototype._name = name;\n\tObject.assign(Com.prototype, prototype);\n\tcomponentClasses.set(Com.componentName, Com);\n\treturn Com;\n};\n\nSerializable.registerSerializable(Component, 'com', json => {\n\tlet component = new (componentClasses.get(json.n))(json.id);\n\tcomponent._componentId = json.cid || null;\n\treturn component;\n});\n","import Prototype from './prototype';\nimport Property from './property';\nimport Serializable from './serializable';\nimport { getSerializable } from './serializableManager';\nimport { Prop, componentClasses } from './component';\nimport ComponentData from './componentData';\nimport { scene } from './scene';\nimport assert from '../util/assert';\nimport Vector from '../util/vector';\n\n// EntityPrototype is a prototype that always has one Transform ComponentData and optionally other ComponentDatas also.\n// Entities are created based on EntityPrototypes\nexport default class EntityPrototype extends Prototype {\n\tconstructor(predefinedId = false) {\n\t\tsuper(...arguments);\n\t\t// this._parent is level, not prototype. We need a link to parent-prototype.\n\t\tthis.prototype = null;\n\t}\n\tgetTransform() {\n\t\treturn this.findChild('cda', cda => cda.name === 'Transform');\n\t}\n\tgetParentPrototype() {\n\t\treturn this.prototype;\n\t}\n\tclone() {\n\t\tlet obj = new EntityPrototype();\n\t\tobj.prototype = this.prototype;\n\t\tlet id = obj.id;\n\t\tlet children = [];\n\t\tthis.forEachChild(null, child => {\n\t\t\tif (child.threeLetterType === 'prp' && child.name === 'name') {\n\t\t\t\tlet property = new Property({\n\t\t\t\t\tvalue: child.propertyType.type.clone(child.value),\n\t\t\t\t\tname: child.name,\n\t\t\t\t\tpropertyType: this.propertyType,\n\t\t\t\t\tpredefinedId: id + '_n'\n\t\t\t\t});\n\t\t\t\tchildren.push(property);\n\t\t\t} else if (child.threeLetterType === 'cda' && child.name === 'Transform') {\n\t\t\t\tlet transform = new ComponentData('Transform', id + '_t');\n\n\t\t\t\tlet position = transform.componentClass._propertyTypesByName.position.createProperty({\n\t\t\t\t\tvalue: child.findChild('prp', prp => prp.name === 'position').value,\n\t\t\t\t\tpredefinedId: id + '_p'\n\t\t\t\t});\n\t\t\t\ttransform.addChild(position);\n\n\t\t\t\tlet scale = transform.componentClass._propertyTypesByName.scale.createProperty({\n\t\t\t\t\tvalue: child.findChild('prp', prp => prp.name === 'scale').value,\n\t\t\t\t\tpredefinedId: id + '_s'\n\t\t\t\t});\n\t\t\t\ttransform.addChild(scale);\n\n\t\t\t\tlet rotation = transform.componentClass._propertyTypesByName.rotation.createProperty({\n\t\t\t\t\tvalue: child.findChild('prp', prp => prp.name === 'rotation').value,\n\t\t\t\t\tpredefinedId: id + '_r'\n\t\t\t\t});\n\t\t\t\ttransform.addChild(rotation);\n\t\t\t\t\n\t\t\t\tchildren.push(transform);\n\t\t\t} else {\n\t\t\t\tchildren.push(child.clone());\n\t\t\t}\n\t\t});\n\t\tobj.initWithChildren(children);\n\t\tthis._state |= Serializable.STATE_CLONE;\n\t\treturn obj;\n\t}\n\ttoJSON() {\n\t\t// return super.toJSON();\n\t\t\n\t\t// Below optimization reduces size 88%. id's have to be generated based on this.id\n\t\t\n\t\tlet Transform = this.getTransform();\n\t\tlet json = {\n\t\t\tid: this.id,\n\t\t\tp: this.prototype.id\n\t\t};\n\t\t\n\t\tlet childArrays = [];\n\t\tthis._children.forEach(child => {\n\t\t\tchildArrays.push(child);\n\t\t});\n\t\tlet children = [].concat(...childArrays).filter(child => {\n\t\t\treturn child !== Transform && child !== this._properties.name;\n\t\t});\n\t\tif (children.length > 0)\n\t\t\tjson.c = children.map(child => child.toJSON());\n\t\t\n\t\tlet prototype = this.prototype;\n\t\t\n\t\tlet floatToJSON = Prop.float().toJSON;\n\t\tlet handleProperty = prp => {\n\t\t\tif (prp.name === 'name') {\n\t\t\t\tif (!prototype || prp.value !== prototype.name)\n\t\t\t\t\tjson.n = prp.value;\n\t\t\t} else if (prp.name === 'position') {\n\t\t\t\tjson.x = floatToJSON(prp.value.x);\n\t\t\t\tjson.y = floatToJSON(prp.value.y);\n\t\t\t} else if (prp.name === 'scale') {\n\t\t\t\tif (!prp.value.isEqualTo(new Vector(1, 1))) {\n\t\t\t\t\tjson.w = floatToJSON(prp.value.x);\n\t\t\t\t\tjson.h = floatToJSON(prp.value.y);\n\t\t\t\t}\n\t\t\t} else if (prp.name === 'rotation') {\n\t\t\t\tif (prp.value !== 0)\n\t\t\t\t\tjson.a = floatToJSON(prp.value);\n\t\t\t}\n\t\t};\n\t\thandleProperty(this._properties.name);\n\n\t\tTransform.getChildren('prp').forEach(handleProperty);\n\t\treturn json;\n\t}\n\tspawnEntityToScene(position) {\n\t\tif (!scene)\n\t\t\treturn;\n\t\t\n\t\tif (position) {\n\t\t\tthis.getTransform().getPropertyOrCreate('position').value = position;\n\t\t}\n\t\t\n\t\tlet entity = this.createEntity();\n\t\tscene.addChild(entity);\n\t}\n}\nObject.defineProperty(EntityPrototype.prototype, 'position', {\n\tget() {\n\t\treturn this.getTransform().findChild('prp', prp => prp.name === 'position').value;\n\t},\n\tset(position) {\n\t\treturn this.getTransform().findChild('prp', prp => prp.name === 'position').value = position;\n\t}\n});\n\n// If Transform or Transform.position is missing, they are added.\nEntityPrototype.createFromPrototype = function(prototype, componentDatas = []) {\n\n\tlet entityPrototype = new EntityPrototype();\n\tentityPrototype.prototype = prototype;\n\tlet id = entityPrototype.id;\n\t\n\tassert(!componentDatas.find(cda => cda.name === 'Transform'), 'Prototype (prt) can not have a Transform component');\n\t\n\tlet transform = new ComponentData('Transform', id + '_t');\n\tcomponentDatas.push(transform);\n\t\n\tlet position = transform.componentClass._propertyTypesByName.position.createProperty({\n\t\tvalue: new Vector(0, 0),\n\t\tpredefinedId: id + '_p'\n\t});\n\ttransform.addChild(position);\n\n\tlet scale = transform.componentClass._propertyTypesByName.scale.createProperty({\n\t\tvalue: new Vector(1, 1),\n\t\tpredefinedId: id + '_s'\n\t});\n\ttransform.addChild(scale);\n\n\tlet rotation = transform.componentClass._propertyTypesByName.rotation.createProperty({\n\t\tvalue: 0,\n\t\tpredefinedId: id + '_r'\n\t});\n\ttransform.addChild(rotation);\n\n\tlet name = EntityPrototype._propertyTypesByName.name.createProperty({\n\t\tvalue: prototype.name,\n\t\tpredefinedId: id + '_n'\n\t});\n\t\n\tentityPrototype.initWithChildren([name, ...componentDatas])\n\n\treturn entityPrototype;\n};\n\nSerializable.registerSerializable(EntityPrototype, 'epr', json => {\n\tlet entityPrototype = new EntityPrototype(json.id);\n\tentityPrototype.prototype = getSerializable(json.p);\n\tassert(entityPrototype.prototype, `Prototype ${json.p} not found`);\n\t\n\tlet nameId = json.id + '_n';\n\tlet transformId = json.id + '_t';\n\tlet positionId = json.id + '_p';\n\tlet scaleId = json.id + '_s';\n\tlet rotationId = json.id + '_r';\n\t\n\tlet name = Prototype._propertyTypesByName.name.createProperty({ \n\t\tvalue: json.n === undefined ? entityPrototype.prototype.name : json.n, \n\t\tpredefinedId: nameId \n\t});\n\t\n\tlet transformData = new ComponentData('Transform', transformId);\n\tlet transformClass = componentClasses.get('Transform');\n\t\n\tlet position = transformClass._propertyTypesByName.position.createProperty({\n\t\tvalue: new Vector(json.x, json.y),\n\t\tpredefinedId: positionId\n\t});\n\ttransformData.addChild(position);\n\n\tlet scale = transformClass._propertyTypesByName.scale.createProperty({\n\t\tvalue: new Vector(json.w === undefined ? 1 : json.w, json.h === undefined ? 1 : json.h),\n\t\tpredefinedId: scaleId\n\t});\n\ttransformData.addChild(scale);\n\n\tlet rotation = transformClass._propertyTypesByName.rotation.createProperty({\n\t\tvalue: json.a || 0,\n\t\tpredefinedId: rotationId\n\t});\n\ttransformData.addChild(rotation);\n\t\n\t\n\tentityPrototype.initWithChildren([name, transformData]);\n\treturn entityPrototype;\n});\n","import Serializable from './serializable';\nimport PropertyOwner, { Prop } from '../core/propertyOwner';\nimport Scene, { scene } from './scene';\n\nlet propertyTypes = [\n\tProp('name', 'No name', Prop.string)\n];\n\nexport default class Level extends PropertyOwner {\n\tconstructor(predefinedId) {\n\t\tsuper(...arguments);\n\n\t\tif (predefinedId)\n\t\t\tconsole.log('level import');\n\t\telse\n\t\t\tconsole.log('level created');\n\t}\n\tcreateScene(predefinedSceneObject = false) {\n\t\tif (!predefinedSceneObject)\n\t\t\tnew Scene();\n\t\tlet entities = this.getChildren('epr').map(epr => epr.createEntity());\n\t\tscene.addChildren(entities);\n\t\tscene.level = this;\n\t\treturn scene;\n\t}\n\t\n\t\n\t/*\n\tOPTIMIZATION DOES NOT WORK, YET\n\ttoJSON() {\n\t\tlet json = super.toJSON();\n\t\tconsole.log('before', json);\n\t\tif (json.c) {\n\t\t\tlet prototypeIds = new Set();\n\t\t\tjson.c.forEach(child => {\n\t\t\t\tconsole.log('child', child);\n\t\t\t\tprototypeIds.add(child.p);\n\t\t\t});\n\t\t\t\n\t\t\tlet prototypeIdToNum = {};\n\t\t\tlet prototypeIdArray = [];\n\t\t\tlet num = 0;\n\t\t\tprototypeIds.forEach(key => {\n\t\t\t\tprototypeIdArray[num] = key;\n\t\t\t\tprototypeIdToNum[key] = num++;\n\t\t\t});\n\n\t\t\tjson.c.forEach(child => {\n\t\t\t\tchild.p = prototypeIdToNum[child.p] || child.p;\n\t\t\t});\n\t\t\t\n\t\t\tjson.p = prototypeIdArray;\n\n\t\t\tconsole.log(json, prototypeIds, prototypeIdToNum, prototypeIdArray);\n\t\t}\n\t\treturn json;\n\t}\n\t*/\n}\nPropertyOwner.defineProperties(Level, propertyTypes);\n\nSerializable.registerSerializable(Level, 'lvl');\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\n\nComponent.register({\n\tname: 'Transform',\n\tcategory: 'Core',\n\ticon: 'fa-dot-circle-o',\n\tallowMultiple: false,\n\tproperties: [\n\t\tProp('position', new Vector(0, 0), Prop.vector),\n\t\tProp('scale', new Vector(1, 1), Prop.vector),\n\t\tProp('rotation', 0, Prop.float, Prop.float.modulo(0, Math.PI * 2), Prop.flagDegreesInEditor)\n\t]\n});\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\n\nlet vari = 0;\n\nComponent.register({\n\tname: 'Test',\n\tcategory: 'Core',\n\tproperties: [\n\t\tProp('name', 'Oh right', Prop.string),\n\t\tProp('enum', 'yksi', Prop.enum, Prop.enum.values('yksi', 'kaksi', 'kolme', 'neljä')),\n\t\tProp('topBarHelper', new Vector(0, 1), Prop.vector),\n\t\tProp('test' + ++vari, vari, Prop.int),\n\t\tProp('test' + ++vari, false, Prop.bool),\n\t\tProp('test' + ++vari, true, Prop.bool)\n\t]\n});\n","import { Component, Prop } from '../core/component';\nimport { key, keyPressed } from '../util/input';\nimport Vector from '../util/vector';\n\nComponent.register({\n\tname: 'Mover',\n\tproperties: [\n\t\tProp('change', new Vector(10, 10), Prop.vector),\n\t\tProp('userControlled', false, Prop.bool),\n\t\tProp('speed', 1, Prop.float),\n\t\tProp('rotationSpeed', 0, Prop.float, 'Degrees per second', Prop.flagDegreesInEditor)\n\t],\n\tprototype: {\n\t\tonUpdate(dt, t) {\n\t\t\tif (this.userControlled) {\n\t\t\t\tif (!this.entity.localMaster) return;\n\t\t\t\t\n\t\t\t\tlet dx = 0;\n\t\t\t\tlet dy = 0;\n\t\t\t\t\n\t\t\t\tif (keyPressed(key.left)) dx -= 1;\n\t\t\t\tif (keyPressed(key.right)) dx += 1;\n\t\t\t\tif (keyPressed(key.up)) dy -= 1;\n\t\t\t\tif (keyPressed(key.down)) dy += 1;\n\t\t\t\tif (dx) this.Transform.position.x += dx * this.speed * dt;\n\t\t\t\tif (dy) this.Transform.position.y += dy * this.speed * dt;\n\t\t\t\tif (dx || dy) {\n\t\t\t\t\tthis.Transform.position = this.Transform.position;\n\t\t\t\t}\n\t\t\t\tif (dx && this.rotationSpeed) {\n\t\t\t\t\tthis.Transform.rotation += dt * dx * this.rotationSpeed;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet change = new Vector(dt, 0).rotate(t * this.speed).multiply(this.change);\n\t\t\t\tthis.Transform.position.set(this.Transform.position).add(change);\n\t\t\t\t\n\t\t\t\tif (this.rotationSpeed)\n\t\t\t\t\tthis.Transform.rotation += dt * this.rotationSpeed;\n\t\t\t}\n\t\t}\n\t}\n});\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\n\nComponent.register({\n\tname: 'Rect',\n\ticon: 'fa-stop',\n\tallowMultiple: true,\n\tproperties: [\n\t\tProp('size', new Vector(10, 10), Prop.vector),\n\t\tProp('style', 'red', Prop.string),\n\t\tProp('randomStyle', false, Prop.bool)\n\t],\n\tprototype: {\n\t\tinit() {\n\t\t\tif (this.randomStyle)\n\t\t\t\tthis.style = `hsl(${Math.random()*360 | 0}, 100%, 40%)`;\n\t\t},\n\t\tonDraw(context) {\n\t\t\tlet\n\t\t\t\tx = this.Transform.position.x - this.size.x/2 * this.Transform.scale.x,\n\t\t\t\ty = this.Transform.position.y - this.size.y/2 * this.Transform.scale.y,\n\t\t\t\tw = this.size.x * this.Transform.scale.x,\n\t\t\t\th = this.size.y * this.Transform.scale.y;\n\t\t\tcontext.save();\n\t\t\tcontext.fillStyle = this.style;\n\t\t\tcontext.translate(x+w/2, y+h/2);\n\t\t\tcontext.rotate(this.Transform.rotation);\n\t\t\tcontext.fillRect(-w/2, -h/2, w, h);\n\t\t\tcontext.restore();\n\t\t}\n\t}\n});\n","import { Component, Prop } from '../core/component';\nimport EntityPrototype from '../core/entityPrototype';\n\nComponent.register({\n\tname: 'Spawner',\n\tproperties: [\n\t\tProp('typeName', '', Prop.string)\n\t],\n\tprototype: {\n\t\tonStart() {\n\t\t\tthis.spawn();\n\t\t},\n\t\tonDrawHelper(context) {\n\t\t\tlet size = 30;\n\t\t\tlet\n\t\t\t\tx = this.Transform.position.x - size * this.Transform.scale.x/2,\n\t\t\t\ty = this.Transform.position.y - size * this.Transform.scale.y/2,\n\t\t\t\tw = size * this.Transform.scale.x,\n\t\t\t\th = size * this.Transform.scale.y;\n\t\t\tcontext.save();\n\t\t\tcontext.fillStyle = 'blue';\n\t\t\tcontext.strokeStyle = 'white';\n\t\t\tcontext.lineWidth = 1;\n\t\t\tcontext.font = '40px FontAwesome';\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.fillText('\\uf21d', this.Transform.position.x + 2, this.Transform.position.y);\n\t\t\tcontext.strokeText('\\uf21d', this.Transform.position.x + 2, this.Transform.position.y);\n\t\t\t\n\t\t\tcontext.restore();\n\t\t},\n\t\tspawn() {\n\t\t\tlet prototype = this.game.findChild('prt', prt => prt.name === this.typeName);\n\t\t\tif (!prototype)\n\t\t\t\treturn;\n\n\t\t\tEntityPrototype.createFromPrototype(prototype).spawnEntityToScene(this.Transform.position);\n\t\t}\n\t}\n});\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\n\nComponent.register({\n\tname: 'Trigger',\n\tallowMultiple: true,\n\tproperties: [\n\t\tProp('trigger', 'playerComesNear', Prop.enum, Prop.enum.values('playerComesNear')),\n\t\tProp('radius', 40, Prop.float, Prop.float.range(0, 1000), Prop.visibleIf('trigger', 'playerComesNear')),\n\t\tProp('action', 'win', Prop.enum, Prop.enum.values('win'))\n\t],\n\tprototype: {\n\t\tonDrawHelper(context) {\n\t\t\tlet size = 30;\n\t\t\tlet\n\t\t\t\tx = this.Transform.position.x - size * this.Transform.scale.x/2,\n\t\t\t\ty = this.Transform.position.y - size * this.Transform.scale.y/2,\n\t\t\t\tw = size * this.Transform.scale.x,\n\t\t\t\th = size * this.Transform.scale.y;\n\t\t\tcontext.save();\n\t\t\tcontext.fillStyle = 'blue';\n\t\t\tcontext.strokeStyle = 'white';\n\t\t\tcontext.lineWidth = 1;\n\t\t\tcontext.font = '40px FontAwesome';\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.fillText('\\uf085', this.Transform.position.x, this.Transform.position.y + 15);\n\t\t\tcontext.strokeText('\\uf085', this.Transform.position.x, this.Transform.position.y + 15);\n\t\t\t\n\t\t\tcontext.restore();\n\t\t},\n\t\tpreInit() {\n\t\t\tthis.storeProp = `__Trigger_${this._componentId}`;\n\t\t},\n\t\tonUpdate() {\n\t\t\tif (this.trigger === 'playerComesNear') {\n\t\t\t\tlet componentSet = this.scene.getComponents('Mover');\n\t\t\t\tlet entities = [];\n\t\t\t\tcomponentSet.forEach(c => entities.push(c.entity));\n\t\t\t\tlet distSq = this.radius * this.radius;\n\t\t\t\tlet pos = this.Transform.position;\n\t\t\t\tfor (let i = 0; i < entities.length; ++i) {\n\t\t\t\t\tif (entities[i].position.distanceSq(pos) < distSq) {\n\t\t\t\t\t\tif (!entities[i][this.storeProp] && this.launchTrigger(entities[i]) === false)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tentities[i][this.storeProp] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tentities[i][this.storeProp] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\t// Return false if other triggers should not be checked\n\t\tlaunchTrigger(entity) {\n\t\t\tif (this.action === 'win') {\n\t\t\t\tthis.scene.win();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n});\n"],"names":["createStringId","threeLetterPrefix","characters","let","id","i","CHARACTERS","Math","random","CHAR_COUNT","addSerializable","serializable","assert","undefined","serializables","getSerializable","removeSerializable","Error","resetOrigin","origin","getChangeOrigin","setChangeOrigin","_origin","setTimeout","addChange","type","reference","change","external","externalChange","changeType","setPropertyValue","value","_value","move","parent","_parent","addSerializableToTree","previousOrigin","listeners","forEach","l","executeExternal","callback","addChangeListener","push","packChange","packedChange","packed","parentId","toJSON","propertyType","Object","keys","keyToShortKey","key","e","console","log","condition","message","stack","createPropertyType","propertyName","defaultValue","validator","validators","default","description","flags","visibleIf","optionalParameters","p","idx","validate","isFlag","PropertyType","createFlag","func","createDataType","ref","x","name","fromJSON","clone","createType","validatorName","createValidator","validatorFunction","parameters","validatorParameters","validateFloat","val","isNaN","Infinity","keyPressed","getQueryVariable","variable","query","window","location","search","substring","vars","split","length","pair","decodeURIComponent","tryToLoad","io","socket","changes","valueChanges","duplicateChange","splice","indexOf","setInterval","packedChanges","map","emit","on","serverStartTime","game","clientStartTime","Date","now","requiredClientTime","reload","gameData","Serializable","localStorage","anotherGameId","history","replaceState","gameId","const","serializableClasses","Map","predefinedId","skipSerializableRegistering","this","threeLetterType","_children","_listeners","_isInTree","isRoot","_state","STATE_CONSTRUCTOR","STATE_PREDEFINEDID","startsWith","serializableManager.addSerializable","delete","deleteChild","deleteChildren","_alive","serializableManager.removeSerializable","STATE_DESTROY","size","array","child","clear","serializableManager.addChange","serializableManager.changeType","deleteAllChildren","initWithChildren","children","STATE_INIT","addChildren","addChild","_addChild","STATE_ADDCHILD","get","set","STATE_ADDPARENT","setInTreeStatus","findChild","filterFunction","find","findParent","getRoot","element","deleteSerializable","_detachChild","forEachChild","deep","processArray","newParent","_detach","getParent","getChildren","json","arrays","Array","from","sort","a","b","c","concat","toString","JSON","stringify","obj","constructor","STATE_CLONE","listen","event","hasOwnProperty","unshift","index","this$1","dispatch","apply","args","error","hasDescendant","isInTree","force","filter","Boolean","STATE_FROMJSON","registerSerializable","Class","prototype","defineProperty","info","join","states","logState","state","stateString","createDebugObject","debug","debugChildArray","shortKeyToKey","k","Property","super","_initialValue","setPropertyType","_initialValueIsJSON","initialValue","assign","v","n","newValue","f","getFlag","flag","createProperty","dataType","flagDegreesInEditor","Vector","y","add","vec","subtract","multiply","multiplyScalar","scalar","divide","divideScalar","dot","sqrt","lengthSq","setLength","newLength","oldLength","getProjectionOn","distance","dx","dy","distanceSq","normalize","horizontalAngle","atan2","verticalAngle","rotate","angle","cos","sin","rotateTo","rotation","isEqualTo","fromObject","FLOAT_JSON_PRECISION_MULTIPLIER","pow","float","parseFloat","range","min","max","modulo","round","int","parseInt","vector","string","String","bool","enum","values","isArray","PropertyOwner","_propertyTypes","_properties","initWithPropertyValues","propName","_propertyTypesByName","propChildren","otherChildren","invalidPropertiesCount","prop","isInvalid","nameToProp","componentName","defineProperties","propertyTypes","ALIVE_ERROR","Entity","components","sleeping","localMaster","getComponent","getComponents","getListOfAllComponents","entity","addComponents","_name","initComponents","_preInit","_init","makeComponentsSleep","_sleep","deleteComponents","sleep","wakeUp","deleteComponent","component","compArray","comp","proto","position","ComponentData","componentClassName","predefinedComponentId","componentClass","componentClasses","allowMultiple","componentId","cid","getInheritedProperties","_depth","properties","parentComponentData","getParentComponentData","parentPrototype","getParentPrototype","componentData","getPropertyOrCreate","property","prp","getProperty","setValue","getValue","createComponent","Component","create","_componentId","Prop","Prototype","arguments","previouslyCreatedEntity","cda","getInheritedComponentDatas","getDataFromPrototype","data","ownComponentData","propertyHash","generatedForPrototype","originalPrototype","inheritedComponentData","localeCompare","createAndAddPropertyForComponentData","propertyValue","componentDataIsNew","findComponentDataByComponentId","alsoFindFromParents","getOwnComponentDataOrInherit","findOwnProperty","createEntity","inheritedComponentDatas","createWithInheritedComponentData","countEntityPrototypes","findParents","count","levels","entityPrototypes","j","prt","_game","lvl","items","isClient","Game","warn","scene","Scene","canvas","document","querySelector","context","getContext","level","animationFrameId","playing","time","draw","win","reset","animFrame","playCalled","t","performance","dt","_prevUpdate","requestAnimFrame","requestAnimationFrame","clearRect","width","height","isInInitialState","pause","createScene","cancelAnimationFrame","play","addComponent","Set","removeComponent","_listenRemoveFunctions","requirements","r","funcName","preInit","init","createComponentData","pt","reservedPropertyNames","reservedPrototypeMembers","register","has","constructorFunction","deleteFunction","Com","parentClass","category","icon","num","reduce","prev","curr","charCodeAt","color","EntityPrototype","getTransform","transform","scale","Transform","childArrays","floatToJSON","handleProperty","w","h","spawnEntityToScene","createFromPrototype","componentDatas","entityPrototype","nameId","transformId","positionId","scaleId","rotationId","transformData","transformClass","Level","predefinedSceneObject","entities","epr","PI","vari","left","right","up","down","ctrl","appleLeft","appleRight","alt","shift","space","z","0","1","9","backspace","enter","esc","keyDownListeners","keyUpListeners","onkeydown","keyCode","which","activeElement","nodeName","toLowerCase","onkeyup","onUpdate","userControlled","speed","rotationSpeed","randomStyle","style","onDraw","save","fillStyle","translate","fillRect","restore","onStart","spawn","onDrawHelper","strokeStyle","lineWidth","font","textAlign","fillText","strokeText","typeName","storeProp","trigger","componentSet","distSq","radius","pos","launchTrigger","action"],"mappings":"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"}