{"version":3,"file":null,"sources":["../src/core/serializable.js","../src/core/serializableManager.js","../src/util/assert.js","../src/core/propertyType.js","../src/core/dataTypes.js","../src/feature/physicsP2.js","../src/util/input.js","../src/util/net.js","../src/main.js","../src/util/environment.js","../src/core/property.js","../src/util/vector.js","../src/core/propertyOwner.js","../src/core/entity.js","../src/core/componentData.js","../src/core/prototype.js","../src/core/game.js","../src/core/scene.js","../src/core/component.js","../src/core/entityPrototype.js","../src/core/level.js","../src/components/Transform.js","../src/components/TransformVariance.js","../src/components/Test.js","../src/components/Mover.js","../src/components/Rect.js","../src/components/Spawner.js","../src/components/Trigger.js","../src/components/PhysicsP2.js"],"sourcesContent":["import assert from '../util/assert';\nimport * as serializableManager from './serializableManager';\nimport { isClient } from '../util/environment';\n\nconst CHARACTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'; // 62 chars\nconst CHAR_COUNT = CHARACTERS.length;\n\nexport function createStringId(threeLetterPrefix = '???', characters = 16) {\n\tlet id = threeLetterPrefix;\n\tfor (let i = characters - 1; i >= 0; --i)\n\t\tid += CHARACTERS[Math.random() * CHAR_COUNT | 0];\n\treturn id;\n}\n\nlet serializableClasses = new Map();\n\nexport default class Serializable {\n\tconstructor(predefinedId = false, skipSerializableRegistering = false) {\n\t\tassert(this.threeLetterType, 'Forgot to Serializable.registerSerializable your class?');\n\t\tthis._children = new Map(); // threeLetterType -> array\n\t\tthis._listeners = [];\n\t\tthis._isInTree = this.isRoot;\n\t\tthis._state |= Serializable.STATE_CONSTRUCTOR;\n\t\tif (skipSerializableRegistering)\n\t\t\treturn;\n\t\tif (predefinedId) {\n\t\t\tthis._state |= Serializable.STATE_PREDEFINEDID;\n\t\t\tthis.id = predefinedId;\n\t\t} else {\n\t\t\tthis.id = createStringId(this.threeLetterType);\n\t\t}\n\t\tif (this.id.startsWith('?'))\n\t\t\tthrow new Error('?');\n\t\tserializableManager.addSerializable(this);\n\t}\n\tdelete() {\n\t\tif (this._parent) {\n\t\t\tthis._parent.deleteChild(this);\n\t\t\treturn false;\n\t\t}\n\t\tthis.deleteChildren();\n\t\tthis._alive = false;\n\t\tthis._isInTree = false;\n\t\tthis._listeners.length = 0;\n\t\tserializableManager.removeSerializable(this.id);\n\t\tthis._state |= Serializable.STATE_DESTROY;\n\t\treturn true;\n\t}\n\tdeleteChildren() {\n\t\tif (this._children.size) {\n\t\t\tthis._children.forEach(array => {\n\t\t\t\tarray.forEach(child => {\n\t\t\t\t\tchild._parent = null;\n\t\t\t\t\tchild.delete();\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis._children.clear();\n\n\t\t\tif (this._parent) {\n\t\t\t\tserializableManager.addChange(serializableManager.changeType.deleteAllChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\t// this is called right after constructor\n\tinitWithChildren(children = []) {\n\t\tassert(!(this._state & Serializable.STATE_INIT), 'init already done');\n\t\tthis._state |= Serializable.STATE_INIT;\n\t\tif (children.length > 0)\n\t\t\tthis.addChildren(children);\n\t\treturn this;\n\t}\n\taddChildren(children) {\n\t\tfor (let i = 0; i < children.length; i++)\n\t\t\tthis.addChild(children[i]);\n\t\treturn this;\n\t}\n\taddChild(child) {\n\t\t\n\t\tthis._addChild(child);\n\t\t\n\t\t\n\t\tthis._state |= Serializable.STATE_ADDCHILD;\n\t\t\n\t\tif (this._isInTree)\n\t\t\tserializableManager.addChange(serializableManager.changeType.addSerializableToTree, child);\n\t\treturn this;\n\t}\n\t_addChild(child) {\n\t\tassert(child._parent === null);\n\t\t\n\t\tlet array = this._children.get(child.threeLetterType);\n\t\tif (array === undefined) {\n\t\t\tarray = [];\n\t\t\tthis._children.set(child.threeLetterType, array);\n\t\t}\n\t\tarray.push(child);\n\t\tchild._parent = this;\n\t\tchild._state |= Serializable.STATE_ADDPARENT;\n\t\tchild.setInTreeStatus(this._isInTree);\n\t\t\n\t\treturn this;\n\t}\n\tfindChild(threeLetterType, filterFunction) {\n\t\tlet array = this._children.get(threeLetterType);\n\t\tif (!array) return null;\n\t\tif (filterFunction)\n\t\t\treturn array.find(filterFunction) || null;\n\t\telse\n\t\t\treturn array[0];\n\t}\n\tfindParent(threeLetterType, filterFunction = null) {\n\t\tlet parent = this;\n\t\twhile (parent) {\n\t\t\tif (parent.threeLetterType === threeLetterType && (!filterFunction || filterFunction(parent)))\n\t\t\t\treturn parent;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn null;\n\t}\n\tgetRoot() {\n\t\tlet element = this;\n\t\twhile (element._parent)\n\t\t\telement = element._parent;\n\t\treturn element;\n\t}\n\t// idx is optional\n\tdeleteChild(child, idx) {\n\t\tserializableManager.addChange(serializableManager.changeType.deleteSerializable, child);\n\t\tthis._detachChild(child, idx);\n\t\tchild.delete();\n\t\treturn this;\n\t}\n\t// idx is optional\n\t_detachChild(child, idx = 0) {\n\t\tlet array = this._children.get(child.threeLetterType);\n\t\tassert(array, 'child not found');\n\t\tif (array[idx] !== child)\n\t\t\tidx = array.indexOf(child);\n\t\tassert(idx >= 0, 'child not found');\n\t\tarray.splice(idx, 1);\n\t\tif (array.length === 0)\n\t\t\tthis._children.delete(child.threeLetterType);\n\t\tchild._parent = null;\n\t\tchild.setInTreeStatus(false);\n\t\t\n\t\treturn this;\n\t}\n\tforEachChild(threeLetterType = null, callback, deep = false) {\n\t\tfunction processArray(array) {\n\t\t\tarray.forEach(child => {\n\t\t\t\tcallback(child);\n\t\t\t\tdeep && child.forEachChild(threeLetterType, callback, true);\n\t\t\t});\n\t\t}\n\t\tif (threeLetterType) {\n\t\t\tprocessArray(this._children.get(threeLetterType) || []);\n\t\t} else {\n\t\t\tthis._children.forEach(processArray);\n\t\t}\n\t\treturn this;\n\t}\n\tmove(newParent) {\n\t\t\n\t\tnewParent._addChild(this._detach());\n\n\t\tserializableManager.addChange(serializableManager.changeType.move, this);\n\t\t\n\t\treturn this;\n\t}\n\t_detach() {\n\t\tthis._parent && this._parent._detachChild(this);\n\t\treturn this;\n\t}\n\tgetParent() {\n\t\treturn this._parent || null;\n\t}\n\tgetChildren(threeLetterType) {\n\t\treturn this._children.get(threeLetterType) || [];\n\t}\n\ttoJSON() {\n\t\tlet json = {\n\t\t\tid: this.id\n\t\t};\n\t\tif (this._children.size > 0) {\n\t\t\tlet arrays = [];\n\t\t\t// prototypes must come before a level\n\t\t\tArray.from(this._children.keys()).sort((a, b) => a === 'prt' ? -1 : 1)\n\t\t\t\t.forEach(key => arrays.push(this._children.get(key)));\n\t\t\tjson.c = [].concat(...arrays).map(child => child.toJSON());\n\t\t}\n\t\treturn json;\n\t}\n\ttoString() {\n\t\treturn JSON.stringify(this.toJSON(), null, 4);\n\t}\n\tclone() {\n\t\tlet obj = new this.constructor();\n\t\tlet children = [];\n\t\tthis.forEachChild(null, child => {\n\t\t\tchildren.push(child.clone());\n\t\t});\n\t\tobj.initWithChildren(children);\n\t\tthis._state |= Serializable.STATE_CLONE;\n\t\treturn obj;\n\t}\n\tlisten(event, callback) {\n\t\tif (!this._listeners.hasOwnProperty(event)) {\n\t\t\tthis._listeners[event] = [];\n\t\t}\n\t\tthis._listeners[event].unshift(callback);\n\t\treturn () => {\n\t\t\tvar index = this._listeners[event].indexOf(callback);\n\t\t\tthis._listeners[event].splice(index, 1);\n\t\t};\n\t}\n\tdispatch(event, ...args) {\n\t\tif (this._listeners.hasOwnProperty(event)) {\n\t\t\tfor (var i = this._listeners[event].length - 1; i >= 0; --i) {\n\t\t\t\ttry {\n\t\t\t\t\tthis._listeners[event][i].apply(null, args);\n\t\t\t\t} catch(e) {\n\t\t\t\t\tconsole.error(`Event ${event} listener crashed.`, this._listeners[event][i], e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\thasDescendant(child) {\n\t\tif (!child) return false;\n\t\tlet parent = child._parent;\n\t\twhile (parent) {\n\t\t\tif (parent === this) return true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t}\n\tsetInTreeStatus(isInTree) {\n\t\tif (this._isInTree === isInTree)\n\t\t\treturn;\n\t\t\n\t\tthis._isInTree = isInTree;\n\t\tthis._children.forEach(array => {\n\t\t\tarray.forEach(child => child.setInTreeStatus(isInTree));\n\t\t});\n\t}\n\tstatic fromJSON(json) {\n\t\tassert(typeof json.id === 'string' && json.id.length > 5, 'Invalid id.');\n\t\tlet fromJSON = serializableClasses.get(json.id.substring(0, 3));\n\t\tassert(fromJSON);\n\t\tlet obj;\n\t\ttry {\n\t\t\tobj = fromJSON(json);\n\t\t} catch(e) {\n\t\t\tif (isClient) {\n\t\t\t\tif (!window.force)\n\t\t\t\t\tdebugger; // Type 'force = true' in console to ignore failed imports.\n\n\t\t\t\tif (!window.force)\n\t\t\t\t\tthrow new Error();\n\t\t\t} else {\n\t\t\t\tconsole.log('Error fromJSON', e);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tlet children = json.c ? json.c.map(child => Serializable.fromJSON(child)).filter(Boolean) : [];\n\t\tif (obj._state & Serializable.STATE_INIT)\n\t\t\tobj.addChildren(children);\n\t\telse\n\t\t\tobj.initWithChildren(children);\n\t\tobj._state |= Serializable.STATE_FROMJSON;\n\t\treturn obj;\n\t}\n\tstatic registerSerializable(Class, threeLetterType, fromJSON = null) {\n\t\tClass.prototype.threeLetterType = threeLetterType;\n\t\tassert(typeof threeLetterType === 'string' && threeLetterType.length === 3);\n\t\tif (!fromJSON)\n\t\t\tfromJSON = json => new Class(json.id);\n\t\tserializableClasses.set(threeLetterType, fromJSON);\n\t}\n}\n\nSerializable.prototype._parent = null;\nSerializable.prototype._alive = true;\nSerializable.prototype._state = 0;\n\nSerializable.STATE_CONSTRUCTOR = 1;\nSerializable.STATE_INIT = 2;\nSerializable.STATE_ADDCHILD = 4;\nSerializable.STATE_ADDPARENT = 8;\nSerializable.STATE_CLONE = 16;\nSerializable.STATE_DESTROY = 32;\nSerializable.STATE_FROMJSON = 64;\nSerializable.STATE_PREDEFINEDID = 128;\n\nSerializable.prototype.isRoot = false; // If this should be a root node\nObject.defineProperty(Serializable.prototype, 'debug', {\n\tget() {\n\t\tlet info = this.threeLetterType;\n\n\t\tthis._children.forEach((value, key) => {\n\t\t\tinfo += '|';\n\t\t\tif (key === 'prp')\n\t\t\t\tinfo += this.getChildren('prp').map(p => `${p.name}=${p._value}`).join(', ');\n\t\t\telse\n\t\t\t\tinfo += `${key}(${value.length})`;\n\t\t});\n\t\t\n\t\tinfo += '|state: ';\n\t\t\n\t\tlet states = [];\n\t\tlet logState = (state, stateString) => {\n\t\t\tif (this._state & state)\n\t\t\t\tstates.push(stateString);\n\t\t};\n\t\t\n\t\tlogState(Serializable.STATE_CONSTRUCTOR, 'constructor');\n\t\tlogState(Serializable.STATE_INIT, 'init');\n\t\tlogState(Serializable.STATE_ADDCHILD, 'add child');\n\t\tlogState(Serializable.STATE_ADDPARENT, 'add parent');\n\t\tlogState(Serializable.STATE_CLONE, 'clone');\n\t\tlogState(Serializable.STATE_DESTROY, 'destroy');\n\t\tlogState(Serializable.STATE_FROMJSON, 'from json');\n\t\tlogState(Serializable.STATE_PREDEFINEDID, 'predefined id');\n\t\t\n\t\tinfo += states.join(', ');\n\t\t\n\t\treturn info;\n\t}\n});\nObject.defineProperty(Serializable.prototype, 'debugChildren', {\n\tget() {\n\t\tlet c = [];\n\t\tthis._children.forEach((value, key) => {\n\t\t\tc = c.concat(value);\n\t\t});\n\t\t\n\t\tlet children = [];\n\t\t\n\t\tfunction createDebugObject(type) {\n\t\t\tif (type === 'gam') return new function Game(){};\n\t\t\tif (type === 'sce') return new function Scene(){};\n\t\t\tif (type === 'prt') return new function Prototype(){};\n\t\t\tif (type === 'prp') return new function Property(){};\n\t\t\tif (type === 'cda') return new function ComponentData(){};\n\t\t\tif (type === 'com') return new function Component(){};\n\t\t\tif (type === 'epr') return new function EntityPrototype(){};\n\t\t\tif (type === 'ent') return new function Entity(){};\n\t\t\tif (type === 'lvl') return new function Level(){};\n\t\t\treturn new function Other(){};\n\t\t}\n\n\t\tc.forEach(child => {\n\t\t\tlet obj = createDebugObject(child.threeLetterType);\n\t\t\t\n\t\t\tobj.debug = child.debug;\n\t\t\tobj.ref = child;\n\t\t\tlet c = child.debugChildArray;\n\t\t\tif (c && c.length > 0)\n\t\t\t\tobj.children = c;\n\t\t\tchildren.push(obj);\n\t\t});\n\n\t\treturn children;\n\t}\n});\n","import assert from '../util/assert';\nimport Serializable from './serializable';\n\nexport let serializables = {};\n\nlet DEBUG_CHANGES = 0;\nlet CHECK_FOR_INVALID_ORIGINS = 0;\n\nexport function addSerializable(serializable) {\n\tassert(serializables[serializable.id] === undefined, `Serializable id clash ${serializable.id}`);\n\tserializables[serializable.id] = serializable;\n}\n\nexport function getSerializable(id) {\n\treturn serializables[id] || null;\n}\n\nexport function hasSerializable(id) {\n\treturn Boolean(serializables[id]);\n}\n\nexport function removeSerializable(id) {\n\tif (serializables[id])\n\t\tdelete serializables[id];\n\telse\n\t\tthrow new Error('Serializable not found!');\n}\n\n// reference parameters are not sent over net. they are helpers in local game instance\nexport let changeType = {\n\taddSerializableToTree: 'a', // parentId, reference\n\tsetPropertyValue: 's', // id, value\n\tdeleteSerializable: 'd', // id\n\tmove: 'm', // id, parentId\n\tdeleteAllChildren: 'c', // id\n};\nlet keyToShortKey = {\n\tid: 'i', // obj.id\n\ttype: 't', // changeType.*\n\tvalue: 'v', // value after toJSON\n\tparentId: 'p' // obj._parent.id\n};\nlet shortKeyToKey = {};\nObject.keys(keyToShortKey).forEach(k => {\n\tshortKeyToKey[keyToShortKey[k]] = k;\n});\n\nlet origin;\nlet previousVisualOrigin;\nfunction resetOrigin() {\n\torigin = null;\n}\nexport function getChangeOrigin() {\n\treturn origin;\n}\nexport function setChangeOrigin(_origin) {\n\tif (_origin !== origin) {\n\t\torigin = _origin;\n\t\tif (DEBUG_CHANGES && _origin && _origin !== previousVisualOrigin) {\n\t\t\tconsole.log('origin', previousVisualOrigin);\n\t\t\tpreviousVisualOrigin = _origin;\n\t\t}\n\t\t\n\t\tif (CHECK_FOR_INVALID_ORIGINS)\n\t\t\tsetTimeout(resetOrigin);\n\t}\n}\n\nlet externalChange = false;\nexport function addChange(type, reference) {\n\tassert(origin, 'Change without origin!');\n\tif (!reference.id) return;\n\t\n\tlet change = {\n\t\ttype,\n\t\treference,\n\t\tid: reference.id,\n\t\texternal: externalChange,\n\t\torigin\n\t};\n\tif (type === changeType.setPropertyValue) {\n\t\tchange.value = reference._value;\n\t} else if (type === changeType.move) {\n\t\tchange.parent = reference._parent;\n\t} else if (type === changeType.addSerializableToTree) {\n\t\tchange.parent = reference._parent;\n\t\tdelete change.id;\n\t}\n\t\n\tif (DEBUG_CHANGES)\n\t\tconsole.log('change', change);\n\t\n\tlet previousOrigin = origin;\n\tlisteners.forEach(l => l(change));\n\tif (origin !== previousOrigin) {\n\t\tif (DEBUG_CHANGES)\n\t\t\tconsole.log('origin changed from', previousOrigin, 'to', origin && origin.constructor || origin);\n\t\torigin = previousOrigin;\n\t}\n}\n\nexport function executeExternal(callback) {\n\tsetChangeOrigin('external');\n\tif (externalChange) return callback();\n\texternalChange = true;\n\tcallback();\n\texternalChange = false;\n}\n\nlet listeners = [];\n\nexport function addChangeListener(callback) {\n\tassert(typeof callback === 'function');\n\tlisteners.push(callback);\n}\n\nexport function packChange(change) {\n\tif (change.packedChange)\n\t\treturn change.packedChange; // optimization\n\t\n\tlet packed = {};\n\ttry {\n\t\tif (change.parent)\n\t\t\tchange.parentId = change.parent.id;\n\t\t\n\t\tif (change.type === changeType.addSerializableToTree) {\n\t\t\tif (change.reference) {\n\t\t\t\tchange.value = change.reference.toJSON();\n\t\t\t} else if (change.value) {\n\t\t\t\t// change.value = change.value; // no changes\n\t\t\t} else {\n\t\t\t\tassert(false, 'invalid change of type addSerializableToTree', change);\n\t\t\t}\n\t\t} else if (change.value) {\n\t\t\tchange.value = change.reference.propertyType.type.toJSON(change.value);\n\t\t}\n\n\t\tObject.keys(keyToShortKey).forEach(key => {\n\t\t\tif (change[key]) {\n\t\t\t\tif (key === 'type' && change[key] === changeType.setPropertyValue) return; // optimize most common type\n\t\t\t\tpacked[keyToShortKey[key]] = change[key];\n\t\t\t}\n\t\t});\n\t} catch(e) {\n\t\tconsole.log('PACK ERROR', e);\n\t}\n\treturn packed;\n}\n\nexport function unpackChange(packedChange) {\n\tlet change = {\n\t\tpackedChange // optimization\n\t};\n\tObject.keys(packedChange).forEach(shortKey => {\n\t\tlet key = shortKeyToKey[shortKey];\n\t\tchange[key] = packedChange[shortKey];\n\t});\n\tif (!change.type)\n\t\tchange.type = changeType.setPropertyValue;\n\t\n\tif (change.type === changeType.addSerializableToTree) {\n\t\t// reference does not exist because it has not been created yet\n\t\tchange.id = change.value.id;\n\t} else {\n\t\tchange.reference = getSerializable(change.id);\n\t\tif (change.reference) {\n\t\t\tchange.id = change.reference.id;\n\t\t} else {\n\t\t\tconsole.error('received a change with unknown id', change, 'packed:', packedChange);\n\t\t\treturn null;\n\t\t}\n\t}\n\t\n\tif (change.parentId)\n\t\tchange.parent = getSerializable(change.parentId);\n\treturn change;\n}\n\nexport function executeChange(change) {\n\tlet newScene;\n\t\n\texecuteExternal(() => {\n\t\tconsole.log('execute change', change.type, change.id || change.value);\n\t\tif (change.type === changeType.setPropertyValue) {\n\t\t\tchange.reference.value = change.reference.propertyType.type.fromJSON(change.value);\n\t\t} else if (change.type === changeType.addSerializableToTree) {\n\t\t\tif (change.parent) {\n\t\t\t\tlet obj = Serializable.fromJSON(change.value);\n\t\t\t\tchange.parent.addChild(obj);\n\t\t\t\tif (obj.threeLetterType === 'ent') {\n\t\t\t\t\tobj.localMaster = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet obj = Serializable.fromJSON(change.value); // Scene does not need a parent\n\t\t\t\tif (obj.threeLetterType === 'sce')\n\t\t\t\t\tnewScene = obj;\n\t\t\t}\n\t\t} else if (change.type === changeType.deleteAllChildren) {\n\t\t\tchange.reference.deleteChildren();\n\t\t} else if (change.type === changeType.deleteSerializable) {\n\t\t\tchange.reference.delete();\n\t\t} else if (change.type === changeType.move) {\n\t\t\tchange.reference.move(change.parent);\n\t\t}\n\t});\n\t\n\tif (newScene)\n\t\tnewScene.play();\n}\n","import { getChangeOrigin } from '../core/serializableManager';\nexport default function assert(condition, message) {\n\tif (!condition) {\n\t\tconsole.log('Assert', message, new Error().stack, '\\norigin', getChangeOrigin());\n\t\tdebugger;\n\t\tthrow new Error(message);\n\t}\n}\n","import assert from '../util/assert';\nimport Property from './property';\n\n// info about type, validator, validatorParameters, initialValue\n\n\n\nclass PropertyType {\n\tconstructor(name, type, validator, initialValue, description, flags = [], visibleIf) {\n\t\tassert(typeof name === 'string');\n\t\tassert(name[0] >= 'a' && name[0] <= 'z', 'Name of a property must start with lower case letter.');\n\t\tassert(type && typeof type.name === 'string');\n\t\tassert(validator && typeof validator.validate === 'function');\n\t\t\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.validator = validator;\n\t\tthis.initialValue = initialValue;\n\t\tthis.description = description;\n\t\tthis.visibleIf = visibleIf;\n\t\tthis.flags = {};\n\t\tflags.forEach(f => this.flags[f.type] = f);\n\t}\n\tgetFlag(flag) {\n\t\treturn this.flags[flag.type];\n\t}\n\tcreateProperty({ value, predefinedId, skipSerializableRegistering = false } = {}) {\n\t\treturn new Property({\n\t\t\tpropertyType: this,\n\t\t\tvalue,\n\t\t\tpredefinedId,\n\t\t\tname: this.name,\n\t\t\tskipSerializableRegistering\n\t\t});\n\t}\n}\n\n/*\n\tBeautiful way of creating property types\n\t\n\toptionalParameters:\n\t\tdescription: 'Example',\n\t\tvalidator: PropertyType.\n */\nexport default function createPropertyType(propertyName, defaultValue, type, ...optionalParameters) {\n\ttype = type();\n\tlet validator = type.validators.default();\n\tlet description = '';\n\tlet flags = [];\n\tlet visibleIf = null;\n\toptionalParameters.forEach((p, idx) => {\n\t\tif (typeof p === 'string')\n\t\t\tdescription = p;\n\t\telse if (p && p.validate)\n\t\t\tvalidator = p;\n\t\telse if (p && p.isFlag)\n\t\t\tflags.push(p);\n\t\telse if (p && p.visibleIf)\n\t\t\tvisibleIf = p;\n\t\telse\n\t\t\tassert(false, 'invalid parameter ' + p + ' idx ' + idx);\n\t});\n\treturn new PropertyType(propertyName, type, validator, defaultValue, description, flags, visibleIf);\n};\n\nexport let dataType = createPropertyType;\n\ndataType.visibleIf = function(propertyName, value) {\n\tassert(typeof propertyName === 'string' && propertyName.length);\n\tassert(typeof value !== 'undefined');\n\treturn {\n\t\tvisibleIf: true,\n\t\tpropertyName,\n\t\tvalue\n\t};\n};\n\nfunction createFlag(type, func = {}) {\n\tfunc.isFlag = true;\n\tfunc.type = type;\n\treturn func;\n}\n\ncreatePropertyType.flagDegreesInEditor = createFlag('degreesInEditor');\n\nexport function createDataType({\n\tname = '',\n\tvalidators = { default: x => x }, // default must exist. if value is a reference(object), validator should copy the value.\n\ttoJSON = x => x,\n\tfromJSON = x => x,\n\tclone = x => x\n}) {\n\tassert(name, 'name missing from property type');\n\tassert(typeof validators.default === 'function','default validator missing from property type: ' + name);\n\tassert(typeof toJSON === 'function', 'invalid toJSON for property type: ' + name);\n\tassert(typeof fromJSON === 'function', 'invalid fromJSON for property type: ' + name);\n\n\tlet type = {\n\t\tname,\n\t\tvalidators,\n\t\ttoJSON,\n\t\tfromJSON,\n\t\tclone\n\t};\n\tlet createType = () => type;\n\n\tObject.keys(validators).forEach(validatorName => {\n\t\tcreateType[validatorName] = createValidator(validatorName, validators[validatorName]);\n\t\tvalidators[validatorName] = createType[validatorName];\n\t});\n\treturn createType;\n}\n\nfunction createValidator(name, validatorFunction) {\n\tlet validator = function() {\n\t\tlet parameters = [...arguments];\n\t\treturn {\n\t\t\tvalidatorName: name,\n\t\t\tvalidatorParameters: parameters,\n\t\t\tvalidate: x => validatorFunction(x, ...parameters),\n\t\t\tparameters\n\t\t};\n\t};\n\tvalidator.validatorName = name;\n\tvalidator.validate = validatorFunction;\n\treturn validator;\n}\n","import assert from '../util/assert';\nimport { createDataType, dataType } from './propertyType';\nimport Vector from '../util/vector';\n\nfunction validateFloat(val) {\n\tif (isNaN(val) || val === Infinity || val === -Infinity)\n\t\tthrow new Error('Invalid float: ' + val);\n}\n\nconst FLOAT_JSON_PRECISION = 4;\nconst FLOAT_JSON_PRECISION_MULTIPLIER = Math.pow(10, FLOAT_JSON_PRECISION);\nconst FLOAT_DELTA = 0.0000001;\n\ndataType.float = createDataType({\n\tname: 'float',\n\tvalidators: {\n\t\tdefault(x) {\n\t\t\tx = parseFloat(x);\n\t\t\tvalidateFloat(x);\n\t\t\treturn x;\n\t\t},\n\t\t// PropertyType.float.range(min, max)\n\t\trange(x, min, max) {\n\t\t\tx = parseFloat(x);\n\t\t\tvalidateFloat(x);\n\t\t\treturn Math.min(max, Math.max(min, x));\n\t\t},\n\t\tmodulo(x, min, max) {\n\t\t\tx = parseFloat(x);\n\t\t\tvalidateFloat(x);\n\t\t\t\n\t\t\tlet range = max - min;\n\t\t\t\n\t\t\tif (x < min) {\n\t\t\t\tx += (((min - x) / range | 0) + 1) * range;\n\t\t\t} else if (x > max - FLOAT_DELTA) {\n\t\t\t\tx -= (((x - max) / range | 0) + 1) * range;\n\t\t\t}\n\t\t\t\n\t\t\treturn x;\n\t\t}\n\t},\n\ttoJSON: x => Math.round(x*FLOAT_JSON_PRECISION_MULTIPLIER)/FLOAT_JSON_PRECISION_MULTIPLIER,\n\tfromJSON: x => x\n});\ndataType.int = createDataType({\n\tname: 'int',\n\tvalidators: {\n\t\tdefault(x) {\n\t\t\tx = parseInt(x);\n\t\t\tvalidateFloat(x);\n\t\t\treturn x;\n\t\t},\n\t\t// PropertyType.float.range(min, max)\n\t\trange(x, min, max) {\n\t\t\tx = parseInt(x);\n\t\t\tvalidateFloat(x);\n\t\t\treturn Math.min(max, Math.max(min, x));\n\t\t}\n\t},\n\ttoJSON: x => x,\n\tfromJSON: x => x\n});\n\ndataType.vector = createDataType({\n\tname: 'vector',\n\tvalidators: {\n\t\tdefault(vec) {\n\t\t\tif (!(vec instanceof Vector))\n\t\t\t\tthrow new Error();\n\t\t\tvec = vec.clone();\n\t\t\tvec.x = parseFloat(vec.x);\n\t\t\tvec.y = parseFloat(vec.y);\n\t\t\tvalidateFloat(vec.x);\n\t\t\tvalidateFloat(vec.y);\n\t\t\treturn vec;\n\t\t}\n\t},\n\ttoJSON: vec => ({\n\t\tx: Math.round(vec.x*FLOAT_JSON_PRECISION_MULTIPLIER)/FLOAT_JSON_PRECISION_MULTIPLIER,\n\t\ty: Math.round(vec.y*FLOAT_JSON_PRECISION_MULTIPLIER)/FLOAT_JSON_PRECISION_MULTIPLIER\n\t}),\n\tfromJSON: vec => Vector.fromObject(vec),\n\tclone: vec => vec.clone()\n});\n\ndataType.string = createDataType({\n\tname: 'string',\n\tvalidators: {\n\t\tdefault: x => x ? String(x) : ''\n\t},\n\ttoJSON: x => x,\n\tfromJSON: x => x\n});\n\ndataType.bool = createDataType({\n\tname: 'bool',\n\tvalidators: {\n\t\tdefault(x) {\n\t\t\tif (typeof x !== 'boolean')\n\t\t\t\tthrow new Error();\n\t\t\treturn x;\n\t\t}\n\t},\n\ttoJSON: x => x ? 1 : 0,\n\tfromJSON: x => !!x\n});\n\ndataType.enum = createDataType({\n\tname: 'enum',\n\tvalidators: {\n\t\tdefault() {\n\t\t\tassert(false, `also specify enum values with Prop.enum.values('value1', 'value2', ...)`);\n\t\t},\n\t\tvalues(x, ...values) {\n\t\t\tif (!Array.isArray(values))\n\t\t\t\tthrow new Error();\n\t\t\tif (typeof x !== 'string')\n\t\t\t\tthrow new Error('val should be string');\n\t\t\tif (values.indexOf(x) < 0)\n\t\t\t\tthrow new Error(`value ${x} not in enum: [${values}]`);\n\t\t\treturn x;\n\t\t}\n\t},\n\ttoJSON: x => x,\n\tfromJSON: x => x\n});\n","import assert from '../util/assert';\nimport { isClient } from '../util/environment';\n\nlet p2;\nif (isClient)\n\tp2 = window.p2;\nelse\n\tp2 = require('../src/external/p2'); // from dist folder\n\nexport default p2;\n\nexport function createWorld(owner, options) {\n\tassert(!owner._p2World);\n\towner._p2World = new p2.World({\n\t\tgravity: [0, 9.81]\n\t});\n\n\t// Stress test says that Body sleeping performs better than Island sleeping when idling.\n\towner._p2World.sleepMode = p2.World.BODY_SLEEPING;\n}\n// const MAX_PHYSICS_DT = 0.2;\nconst PHYSICS_DT = 1 / 60;\nexport function updateWorld(owner, dt) {\n\towner._p2World.step(PHYSICS_DT, dt, 10);\n}\nexport function deleteWorld(owner) {\n\tif (owner._p2World)\n\t\towner._p2World.clear()\n\towner._p2World = null;\n}\nexport function addBody(owner, body) {\n\towner._p2World.addBody(body);\n}\nexport function deleteBody(owner, body) {\n\towner._p2World.removeBody(body);\n}\n\nexport function addContactMaterial(owner, A, B, options) {\n\towner._p2World.addContactMaterial(new p2.ContactMaterial(A, B, options));\n}\n","import Vector from '../util/vector';\n\nexport function keyPressed(key) {\n\treturn keys[key] || false;\n}\n\nexport function listenKeyDown(handler) {\n\tkeyDownListeners.push(handler);\n\treturn () => keyDownListeners.splice(keyDownListeners.indexOf(handler), 1);\n}\nexport function listenKeyUp(handler) {\n\tkeyUpListeners.push(handler);\n\treturn () => keyUpListeners.splice(keyUpListeners.indexOf(handler), 1);\n}\n\nexport const key = {\n\tleft: 37,\n\tright: 39,\n\tup: 38,\n\tdown: 40,\n\tctrl: 17,\n\tappleLeft: 91,\n\tappleRight: 93,\n\talt: 18,\n\tshift: 16,\n\tspace: 32,\n\ta: 65,\n\tb: 66,\n\tc: 67,\n\td: 68,\n\te: 69,\n\tf: 70,\n\tg: 71,\n\th: 72,\n\ti: 73,\n\tj: 74,\n\tk: 75,\n\tl: 76,\n\tm: 77,\n\tn: 78,\n\to: 79,\n\tp: 80,\n\tq: 81,\n\tr: 82,\n\ts: 83,\n\tt: 84,\n\tu: 85,\n\tv: 86,\n\tw: 87,\n\tx: 88,\n\ty: 89,\n\tz: 90,\n\t'0': 48,\n\t'1': 49,\n\t'9': 57,\n\tbackspace: 8,\n\tenter: 13,\n\tesc: 27\n};\n\nexport function listenMouseMove(element, handler) {\n\telement.addEventListener('mousemove', event => {\n\t\tlet x = event.pageX;\n\t\tlet y = event.pageY;\n\t\tlet el = element;\n\t\twhile( el != null ) {\n\t\t\tx -= el.offsetLeft;\n\t\t\ty -= el.offsetTop;\n\t\t\tel = el.offsetParent;\n\t\t}\n\t\t\n\t\telement._mx = x;\n\t\telement._my = y;\n\t\thandler(new Vector(x, y));\n\t});\n}\n\nexport function listenMouseDown(element, handler) {\n\telement.addEventListener('mousedown', event => {\n\t\tif (typeof element._mx === 'number')\n\t\t\thandler(new Vector(element._mx, element._my));\n\t\telse\n\t\t\thandler();\n\t});\n}\nexport function listenMouseUp(element, handler) {\n\telement.addEventListener('mouseup', event => {\n\t\tif (typeof element._mx === 'number')\n\t\t\thandler(new Vector(element._mx, element._my));\n\t\telse\n\t\t\thandler();\n\t});\n}\n\n////////////////////////////////////\n\n\nlet keys = {};\nlet keyDownListeners = [];\nlet keyUpListeners = [];\n\n\nif (typeof window !== 'undefined') {\n\n\twindow.onkeydown = event => {\n\t\tlet keyCode = event.which || event.keyCode;\n\n\t\tif (document.activeElement.nodeName.toLowerCase() == \"input\" && keyCode !== key.esc)\n\t\t\treturn;\n\n\t\tkeys[keyCode] = true;\n\t\tkeyDownListeners.forEach(l => l(keyCode));\n\t};\n\twindow.onkeyup = event => {\n\t\tlet key = event.which || event.keyCode;\n\t\tkeys[key] = false;\n\t\tkeyUpListeners.forEach(l => l(key));\n\t};\n}\n","import { addChangeListener, packChange, unpackChange, executeChange, executeExternal, changeType } from '../core/serializableManager'\nimport Serializable from '../core/serializable';\nimport { game } from '../core/game';\nimport { isClient } from './environment';\n\nimport { lzw_decode, lzw_encode } from './compression';\n\nlet networkEnabled = false;\nexport function setNetworkEnabled(enabled = true) {\n\tnetworkEnabled = enabled;\n}\n\nlet shouldStartSceneWhenGameLoaded = false;\nexport function startSceneWhenGameLoaded() {\n\tshouldStartSceneWhenGameLoaded = true;\n}\n\nlet socket;\n\nfunction isInSceneTree(change) {\n\treturn change.reference.getRoot().threeLetterType === 'sce';\n}\n\nfunction getQueryVariable(variable) {\n\tvar query = window.location.search.substring(1);\n\tvar vars = query.split('&');\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=');\n\t\tif (decodeURIComponent(pair[0]) == variable) {\n\t\t\treturn decodeURIComponent(pair[1]);\n\t\t}\n\t}\n\tconsole.log('Query variable %s not found', variable);\n}\n\nfunction tryToLoad() {\n\tif (!window.io) return setTimeout(tryToLoad, 10);\n\t\n\tsocket = io();\n\t\n\tlet changes = [];\n\tlet valueChanges = {}; // id => change\n\n\taddChangeListener(change => {\n\t\tif (change.origin === 'external' || !networkEnabled)\n\t\t\treturn; // Don't send a change that you have received.\n\t\t\n\t\tif (isInSceneTree(change)) // Don't sync scene\n\t\t\treturn;\n\t\t\n\t\tif (change.type === changeType.setPropertyValue) {\n\t\t\tlet duplicateChange = valueChanges[change.id];\n\t\t\tif (duplicateChange) {\n\t\t\t\tchanges.splice(changes.indexOf(duplicateChange), 1);\n\t\t\t}\n\t\t\tvalueChanges[change.id] = change;\n\t\t}\n\t\tchanges.push(change);\n\t});\n\t\n\tsetInterval(() => {\n\t\tif (changes.length === 0)\n\t\t\treturn;\n\t\tlet packedChanges = changes.map(packChange);\n\t\tchanges.length = 0;\n\t\tvalueChanges = {};\n\t\tconsole.log('sending', packedChanges);\n\t\tsocket.emit('c', packedChanges);\n\t}, 100);\n\n\tsocket.on('c', packedChanges => {\n\t\tconsole.log('RECEIVE,', networkEnabled);\n\t\tif (!networkEnabled)\n\t\t\treturn;\n\t\t\n\t\tconsole.log('received', packedChanges);\n\t\tpackedChanges.forEach(change => {\n\t\t\tchange = unpackChange(change);\n\t\t\tif (change) {\n\t\t\t\texecuteChange(change);\n\t\t\t}\n\t\t});\n\t});\n\t\n\tsocket.on('requestGameId', serverStartTime => {\n\t\tif (game)\n\t\t\tsocket.emit('gameId', game.id);\n\t});\n\n\tlet clientStartTime = Date.now();\n\tsocket.on('refreshIfOlderThan', requiredClientTime => {\n\t\tif (clientStartTime < requiredClientTime)\n\t\t\tlocation.reload();\n\t});\n\t\n\tsocket.on('gameData', gameData => {\n\t\tconsole.log('gameData', gameData);\n\t\texecuteExternal(() => {\n\t\t\tSerializable.fromJSON(gameData);\n\t\t});\n\t\tlocalStorage.anotherGameId = gameData.id;\n\t\t// location.replace(`${location.origin}${location.pathname}?gameId=${gameData.id}`);\n\t\thistory.replaceState({}, null, `?gameId=${gameData.id}`);\n\t\tconsole.log('replaced with', `${location.origin}${location.pathname}?gameId=${gameData.id}`);\n\t\t\n\t\tif (shouldStartSceneWhenGameLoaded) {\n\t\t\tlet scene = game.getChildren('lvl')[0].createScene();\n\t\t\tscene.play();\n\t\t\t\n\t\t\tgame.listen('levelCompleted', () => {\n\t\t\t\tscene.play();\n\t\t\t});\n\t\t}\n\t});\n\t\n\tsetTimeout(() => {\n\t\tlet gameId = getQueryVariable('gameId') || localStorage.anotherGameId;\n\t\tconsole.log('requestGameData', gameId);\n\t\tsocket.emit('requestGameData', gameId);\n\t}, 100);\n}\n\nif (isClient)\n\ttryToLoad();\n","import './core'\nimport './components'\nimport { startSceneWhenGameLoaded, setNetworkEnabled } from './util/net'\n\nstartSceneWhenGameLoaded();\nsetNetworkEnabled(true);\n\nlet canvas;\nwindow.addEventListener('load', () => {\n\tcanvas = document.querySelector('canvas.anotherCanvas');\n\tresizeCanvas();\n});\nwindow.addEventListener('resize', resizeCanvas);\n\nfunction resizeCanvas() {\n\tif (!canvas)\n\t\treturn;\n\tcanvas.width = window.innerWidth;\n\tcanvas.height = window.innerHeight;\n}\n","let isClient = typeof window !== 'undefined';\nlet isServer = typeof module !== 'undefined';\n\nif (isClient && isServer)\n\tthrow new Error('Can not be client and server at the same time.');\n\nexport { isClient, isServer };\n","import Serializable from './serializable';\nimport { addChange, changeType, setChangeOrigin } from './serializableManager'; \nimport assert from '../util/assert';\n\n// Instance of a property\nexport default class Property extends Serializable {\n\t// set skipSerializableRegistering=true if you are not planning to add this property to the hierarchy\n\t// if you give propertyType, value in real value form\n\t// if you don't give propertyType (give it later), value as JSON form\n\tconstructor({ value, predefinedId, name, propertyType, skipSerializableRegistering = false }) {\n\t\tassert(name, 'Property without a name can not exist');\n\t\tsuper(predefinedId, skipSerializableRegistering);\n\t\tthis._initialValue = value;\n\t\tif (propertyType)\n\t\t\tthis.setPropertyType(propertyType);\n\t\telse {\n\t\t\tthis.name = name;\n\t\t\tthis._initialValueIsJSON = true;\n\t\t}\n\t}\n\tsetPropertyType(propertyType) {\n\t\tthis.propertyType = propertyType;\n\t\ttry {\n\t\t\tif (this._initialValue !== undefined)\n\t\t\t\tthis.value = this._initialValueIsJSON ? propertyType.type.fromJSON(this._initialValue) : this._initialValue;\n\t\t\telse\n\t\t\t\tthis.value = propertyType.initialValue;\n\t\t} catch(e) {\n\t\t\tconsole.log('Invalid value', e, propertyType, this);\n\t\t\tthis.value = propertyType.initialValue;\n\t\t}\n\t\tthis.name = propertyType.name;\n\t}\n\tclone(skipSerializableRegistering = false) {\n\t\treturn new Property({\n\t\t\tvalue: this.propertyType.type.clone(this.value),\n\t\t\tname: this.name,\n\t\t\tpropertyType: this.propertyType,\n\t\t\tskipSerializableRegistering\n\t\t});\n\t}\n\ttoJSON() {\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tv: this.type.toJSON(this.value),\n\t\t\tn: this.propertyType.name\n\t\t});\n\t}\n}\nProperty.prototype.propertyType = null;\nObject.defineProperty(Property.prototype, 'type', {\n\tget() {\n\t\treturn this.propertyType.type;\n\t}\n});\nObject.defineProperty(Property.prototype, 'value', {\n\tset(newValue) {\n\t\tthis._value = this.propertyType.validator.validate(newValue);\n\t\tthis.dispatch('change', this._value);\n\t\tif (this._isInTree)\n\t\t\taddChange(changeType.setPropertyValue, this);\n\t},\n\tget() {\n\t\treturn this._value;\n\t}\n});\n\nSerializable.registerSerializable(Property, 'prp', json => {\n\treturn new Property({\n\t\tvalue: json.v,\n\t\tpredefinedId: json.id,\n\t\tname: json.n\n\t});\n});\n\nObject.defineProperty(Property.prototype, 'debug', {\n\tget() {\n\t\treturn `prp ${this.name}=${this.value}`;\n\t}\n});\n","export default class Vector {\n\tconstructor(x, y) {\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t}\n\tadd(vec) {\n\t\tthis.x += vec.x;\n\t\tthis.y += vec.y;\n\t\treturn this;\n\t}\n\tsubtract(vec) {\n\t\tthis.x -= vec.x;\n\t\tthis.y -= vec.y;\n\t\treturn this;\n\t}\n\tmultiply(vec) {\n\t\tthis.x *= vec.x;\n\t\tthis.y *= vec.y;\n\t\treturn this;\n\t}\n\tmultiplyScalar(scalar) {\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\treturn this;\n\t}\n\tdivide(vec) {\n\t\tthis.x /= vec.x;\n\t\tthis.y /= vec.y;\n\t\treturn this;\n\t}\n\tdivideScalar(scalar) {\n\t\tthis.x /= scalar;\n\t\tthis.y /= scalar;\n\t\treturn this;\n\t}\n\tdot(vec) {\n\t\treturn this.x * vec.x + this.y * vec.y;\n\t}\n\tlength() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t}\n\tlengthSq() {\n\t\treturn this.x * this.x + this.y * this.y;\n\t}\n\tsetLength(newLength) {\n\t\tlet oldLength = this.length();\n\n\t\tif (oldLength === 0) {\n\t\t\tthis.x = newLength;\n\t\t\tthis.y = 0;\n\t\t} else {\n\t\t\tthis.multiplyScalar(newLength / oldLength);\n\t\t}\n\t\treturn this;\n\t}\n\tgetProjectionOn(vec) {\n\t\tlet length = vec.length();\n\t\tif (length === 0)\n\t\t\treturn this.clone();\n\t\telse\n\t\t\treturn vec.clone().multiplyScalar(this.dot(vec) / (length * length));\n\t}\n\tdistance(vec) {\n\t\tlet dx = this.x - vec.x,\n\t\t\tdy = this.y - vec.y;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t}\n\tdistanceSq(vec) {\n\t\tlet dx = this.x - vec.x,\n\t\t\tdy = this.y - vec.y;\n\t\treturn dx * dx + dy * dy;\n\t}\n\tnormalize() {\n\t\treturn this.setLength(1);\n\t}\n\thorizontalAngle() {\n\t\treturn Math.atan2(this.y, this.x);\n\t}\n\tverticalAngle() {\n\t\treturn Math.atan2(this.x, this.y);\n\t}\n\trotate(angle) {\n\t\tlet x = this.x * Math.cos(angle) - this.y * Math.sin(angle);\n\t\tthis.y = this.x * Math.sin(angle) + this.y * Math.cos(angle);\n\t\tthis.x = x;\n\n\t\treturn this;\n\t}\n\trotateTo(rotation) {\n\t\treturn this.rotate(rotation-this.verticalAngle());\n\t}\n\tisEqualTo(vec) {\n\t\treturn this.x === vec.x && this.y === vec.y;\n\t}\n\tisZero() {\n\t\treturn !this.x && !this.y;\n\t}\n\tclone() {\n\t\treturn new Vector(this.x, this.y);\n\t}\n\tset(vec) {\n\t\tthis.x = vec.x;\n\t\tthis.y = vec.y;\n\t\treturn this;\n\t}\n\ttoString() {\n\t\treturn `[${this.x}, ${this.y}]`;\n\t}\n}\nVector.fromObject = function(obj) {\n\treturn new Vector(obj.x, obj.y);\n};\nVector.fromArray = function(obj) {\n\treturn new Vector(obj[0], obj[1]);\n};\n","import Serializable from './serializable';\nimport assert from '../util/assert';\nimport { getSerializable } from './serializableManager';\nexport { default as Prop } from './propertyType';\n\nexport default class PropertyOwner extends Serializable {\n\tconstructor(predefinedId = false) {\n\t\tassert(Array.isArray(this.constructor._propertyTypes), 'call PropertyOwner.defineProperties after class definition');\n\t\tsuper(predefinedId);\n\t\tthis._properties = {};\n\t}\n\t// Just a helper\n\tinitWithPropertyValues(values = {}) {\n\t\tlet children = [];\n\t\t\n\t\tObject.keys(values).forEach(propName => {\n\t\t\tlet propertyType = this.constructor._propertyTypesByName[propName];\n\t\t\tassert(propertyType, 'Invalid property ' + propName);\n\t\t\tchildren.push(propertyType.createProperty({\n\t\t\t\tvalue: values[propName]\n\t\t\t}));\n\t\t});\n\t\tthis.initWithChildren(children);\n\t\treturn this;\n\t}\n\tinitWithChildren(children = []) {\n\t\tassert(!(this._state & Serializable.STATE_INIT), 'init already done');\n\t\tthis._state |= Serializable.STATE_INIT;\n\t\t\n\t\tlet propChildren = [];\n\t\tlet otherChildren = [];\n\t\t// Separate Property children and other children\n\t\tchildren.forEach(child => {\n\t\t\tif (child.threeLetterType === 'prp') {\n\t\t\t\tpropChildren.push(child);\n\t\t\t} else {\n\t\t\t\totherChildren.push(child);\n\t\t\t}\n\t\t});\n\t\tsuper.addChildren(otherChildren);\n\t\t\n\t\tlet invalidPropertiesCount = 0;\n\t\t\n\t\t// Make sure Properties have a PropertyType. They don't work without it.\n\t\tpropChildren.filter(prop => !prop.propertyType).forEach(prop => {\n\t\t\tif (!this.constructor._propertyTypesByName[prop.name]) {\n\t\t\t\tconsole.log('Property of that name not defined', this.id, prop.name, this);\n\t\t\t\tinvalidPropertiesCount++;\n\t\t\t\tprop.isInvalid = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tprop.setPropertyType(this.constructor._propertyTypesByName[prop.name]);\n\t\t});\n\t\tif (invalidPropertiesCount)\n\t\t\tpropChildren = propChildren.filter(p => !p.isInvalid);\n\t\t\n\t\t// Make sure all PropertyTypes have a matching Property\n\t\tlet nameToProp = {};\n\t\tpropChildren.forEach(c => nameToProp[c.name] = c);\n\t\tthis.constructor._propertyTypes.forEach(propertyType => {\n\t\t\tif (!nameToProp[propertyType.name])\n\t\t\t\tpropChildren.push(propertyType.createProperty());\n\t\t});\n\t\t\n\t\tsuper.addChildren(propChildren);\n\t};\n\taddChild(child) {\n\t\tassert(this._state & Serializable.STATE_INIT, this.constructor.componentName || this.constructor + ' requires that initWithChildren will be called before addChild');\n\t\tsuper.addChild(child);\n\t\tif (child.threeLetterType === 'prp') {\n\t\t\tif (!child.propertyType) {\n\t\t\t\tif (!this.constructor._propertyTypesByName[child.name]) {\n\t\t\t\t\tconsole.log('Property of that name not defined', this.id, child, this);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchild.setPropertyType(this.constructor._propertyTypesByName[child.name]);\n\t\t\t}\n\t\t\tassert(this._properties[child.propertyType.name] === undefined, 'Property already added');\n\t\t\tthis._properties[child.propertyType.name] = child;\n\t\t}\n\t};\n\tdelete() {\n\t\tif (!super.delete()) return false;\n\t\tthis._properties = {};\n\t\treturn true;\n\t}\n\t// idx is optional\n\tdeleteChild(child, idx) {\n\t\tassert(child.threeLetterType !== 'prp', 'Can not delete just one Property child.');\n\t\tsuper.deleteChild(child, idx);\n\t}\n}\n\nPropertyOwner.defineProperties = function(Class, propertyTypes) {\n\tClass._propertyTypes = propertyTypes;\n\tClass._propertyTypesByName = {};\n\tpropertyTypes.forEach(propertyType => {\n\t\tassert(Class.prototype[propertyType.name] === undefined, 'Property name ' + propertyType.name + ' clashes');\n\t\tClass._propertyTypesByName[propertyType.name] = propertyType;\n\t\tObject.defineProperty(Class.prototype, propertyType.name, {\n\t\t\tget() {\n\t\t\t\treturn this._properties[propertyType.name].value;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis._properties[propertyType.name].value = value;\n\t\t\t}\n\t\t});\n\t});\n};\n","import Serializable from './serializable';\nimport assert from '../util/assert';\n\nconst ALIVE_ERROR = 'entity is already dead';\n\nexport default class Entity extends Serializable {\n\tconstructor(predefinedId = false) {\n\t\tsuper(predefinedId);\n\t\tthis.components = new Map(); // name -> array\n\t\tthis.sleeping = false;\n\t\tthis.prototype = null; // should be set immediately after constructor\n\t\tthis.localMaster = true; // set false if entity is controlled over the net\n\t}\n\n\t// Get the first component of given name\n\tgetComponent(name) {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tlet components = this.components.get(name);\n\t\tif (components !== undefined)\n\t\t\treturn components[0];\n\t\telse\n\t\t\treturn null;\n\t}\n\n\t// Get all components with given name\n\tgetComponents(name) {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\treturn this.components.get(name) || [];\n\t}\n\t\n\tgetListOfAllComponents() {\n\t\tlet components = [];\n\t\tthis.components.forEach((value, key) => {\n\t\t\tcomponents.push(...value);\n\t\t});\n\t\treturn components;\n\t}\n\t\n\tclone() {\n\t\tlet entity = new Entity();\n\t\tentity.prototype = this.prototype;\n\t\tentity.sleeping = this.sleeping;\n\t\tlet components = [];\n\t\tthis.components.forEach((value, key) => {\n\t\t\tcomponents.push(...value.map(c => c.clone()));\n\t\t});\n\t\tentity.addComponents(components);\n\t\treturn entity;\n\t}\n\n\t/*\n\tAdds multiple components as an array to this Entity.\n\tUses addComponent internally.\n\tInitializes components after all components are added.\n\t*/\n\taddComponents(components) {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tassert(Array.isArray(components), 'Parameter is not an array.');\n\n\t\tfor (let i = 0; i < components.length; i++) {\n\t\t\tlet componentList = this.components.get(components[i]._name) || this.components.set(components[i]._name, []).get(components[i]._name);\n\t\t\tcomponentList.push(components[i]);\n\t\t\tcomponents[i].entity = this;\n\t\t\tcomponents[i]._parent = this;\n\t\t}\n\t\t\n\t\tif (!this.sleeping)\n\t\t\tEntity.initComponents(components);\n\t\treturn this;\n\t}\n\tstatic initComponents(components) {\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i]._preInit();\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i]._init();\n\t}\n\tstatic makeComponentsSleep(components) {\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i]._sleep();\n\t}\n\tstatic deleteComponents(components) {\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i].delete();\n\t}\n\tsleep() {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tif (this.sleeping) return false;\n\t\t\n\t\tthis.components.forEach((value, key) => Entity.makeComponentsSleep(value));\n\t\t\n\t\tthis.sleeping = true;\n\t\treturn true;\n\t}\n\twakeUp() {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tif (!this.sleeping) return false;\n\n\t\tthis.components.forEach((value, key) => Entity.initComponents(value));\n\n\t\tthis.sleeping = false;\n\t\treturn true;\n\t}\n\tdelete() {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tthis.sleep();\n\t\tif (!super.delete()) return false;\n\t\t\n\t\tthis.components.forEach((value, key) => Entity.deleteComponents(value));\n\t\tthis.components.clear();\n\t\t\n\t\treturn true;\n\t}\n\tdeleteComponent(component) {\n\t\tlet array = this.getComponents(component.constructor.componentName);\n\t\tlet idx = array.indexOf(component);\n\t\tassert(idx >= 0);\n\t\tif (!this.sleeping)\n\t\t\tcomponent._sleep();\n\t\tcomponent.delete();\n\t\tarray.splice(idx, 1);\n\t\treturn this;\n\t}\n\tsetInTreeStatus(isInTree) {\n\t\tif (this._isInTree === isInTree)\n\t\t\treturn;\n\n\t\tthis._isInTree = isInTree;\n\t\tthis.components.forEach((value, key) => {\n\t\t\tvalue.forEach(component => component.setInTreeStatus(isInTree));\n\t\t});\n\t}\n\ttoJSON() {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\t\n\t\tlet components = [];\n\t\tthis.components.forEach(compArray => {\n\t\t\tcompArray.forEach(comp => {\n\t\t\t\tcomponents.push(comp.toJSON());\n\t\t\t});\n\t\t});\n\t\t\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tcomp: components,\n\t\t\tproto: this.prototype.id\n\t\t});\n\t}\n}\nObject.defineProperty(Entity.prototype, 'position', {\n\tget() {\n\t\treturn this.getComponent('Transform').position;\n\t},\n\tset(position) {\n\t\tthis.getComponent('Transform').position = position;\n\t}\n});\n\nSerializable.registerSerializable(Entity, 'ent', json => {\n\tconsole.log('creating entity from json', json);\n\tlet entity = new Entity(json.id);\n\tentity.prototype = getSerializable(json.proto);\n\tconsole.log('created entity from json', entity);\n\tif (json.comp) {\n\t\tentity.addComponents(json.comp.map(Serializable.fromJSON));\n\t}\n\treturn entity;\n});\n","import Serializable, { createStringId } from './serializable';\nimport assert from '../util/assert';\nimport { componentClasses, Component } from './component';\nimport { isClient } from '../util/environment';\n\nexport default class ComponentData extends Serializable {\n\tconstructor(componentClassName, predefinedId = false, predefinedComponentId = false) {\n\t\tthis.name = componentClassName;\n\t\tthis.componentClass = componentClasses.get(this.name);\n\t\tassert(this.componentClass, 'Component class not defined: ' + componentClassName);\n\t\tsuper(predefinedId);\n\t\tif (!this.componentClass.allowMultiple)\n\t\t\tpredefinedComponentId = '_' + componentClassName;\n\t\tthis.componentId = predefinedComponentId || createStringId('cid', 10); // what will be the id of component created from this componentData\n\t}\n\taddChild(child) {\n\t\tif (child.threeLetterType === 'prp') {\n\t\t\tif (!child.propertyType) {\n\t\t\t\tif (!this.componentClass._propertyTypesByName[child.name]) {\n\t\t\t\t\tif (isClient)\n\t\t\t\t\t\tconsole.log('Property of that name not defined', this.id, child, this);\n\t\t\t\t\telse\n\t\t\t\t\t\tconsole.log('Property of that name not defined', this.id, this.name, child.name);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchild.setPropertyType(this.componentClass._propertyTypesByName[child.name]);\n\t\t\t}\n\t\t}\n\t\tsuper.addChild(child);\n\t\treturn this;\n\t};\n\tclone(options) {\n\t\tlet newComponentId = (options && options.cloneComponentId) ? this.componentId : false;\n\t\tlet obj = new ComponentData(this.name, false, newComponentId);\n\t\tlet children = [];\n\t\tthis.forEachChild(null, child => {\n\t\t\tchildren.push(child.clone());\n\t\t});\n\t\tobj.initWithChildren(children);\n\t\tthis._state |= Serializable.STATE_CLONE;\n\t\treturn obj;\n\t}\n\ttoJSON() {\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tcid: this.componentId,\n\t\t\tn: this.name\n\t\t});\n\t}\n\t/*\n\tReturns a list of Properties.\n\tThose which don't have an id are temporary properties generated from parents.\n\tDon't set _depth.\n\t */\n\tgetInheritedProperties(_depth = 0) {\n\t\tlet properties = {};\n\n\t\t// properties from parent\n\t\tlet parentComponentData = this.getParentComponentData();\n\t\tif (parentComponentData)\n\t\t\tparentComponentData.getInheritedProperties(_depth + 1).forEach(prop => properties[prop.name] = prop);\n\t\t\n\t\t// properties from this. override properties of parents\n\t\tthis.getChildren('prp').forEach(prop => {\n\t\t\tif (_depth === 0)\n\t\t\t\tproperties[prop.name] = prop;\n\t\t\telse\n\t\t\t\tproperties[prop.name] = prop.clone(true);\n\t\t});\n\t\t\n\t\t// fill from propertyType\n\t\tif (_depth === 0) {\n\t\t\treturn this.componentClass._propertyTypes.map(propertyType => {\n\t\t\t\treturn properties[propertyType.name] || propertyType.createProperty({\n\t\t\t\t\tskipSerializableRegistering: true\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn Object.keys(properties).map(key => properties[key]);\n\t\t}\n\t}\n\tgetParentComponentData() {\n\t\tif (!this._parent) return null;\n\t\tlet parentPrototype = this._parent.getParentPrototype();\n\t\twhile (parentPrototype) {\n\t\t\tlet parentComponentData = parentPrototype.findChild('cda', componentData => componentData.componentId === this.componentId);\n\t\t\tif (parentComponentData)\n\t\t\t\treturn parentComponentData;\n\t\t\telse\n\t\t\t\tparentPrototype = parentPrototype.getParentPrototype();\n\t\t}\n\t\treturn null;\n\t}\n\tgetPropertyOrCreate(name) {\n\t\tlet property = this.findChild('prp', prp => prp.name === name);\n\t\tif (!property) {\n\t\t\tproperty = this.componentClass._propertyTypesByName[name].createProperty();\n\t\t\tthis.addChild(property);\n\t\t}\n\t\treturn property;\n\t}\n\tgetProperty(name) {\n\t\treturn this.findChild('prp', prp => prp.name === name);\n\t}\n\tsetValue(propertyName, value) {\n\t\tthis.getPropertyOrCreate(propertyName).value = value;\n\t\treturn this;\n\t}\n\tgetValue(name) {\n\t\tlet property = this.getProperty(name);\n\t\tif (property)\n\t\t\treturn property.value;\n\t\tlet parent = this.getParentComponentData();\n\t\t\n\t\tif (parent)\n\t\t\treturn parent.getValue(name);\n\t\t\n\t\treturn this.componentClass._propertyTypesByName[name].initialValue;\n\t}\n\tcreateComponent() {\n\t\tlet properties = this.getInheritedProperties();\n\t\tlet values = {};\n\t\tproperties.forEach(prop => {\n\t\t\tvalues[prop.name] = prop.value;\n\t\t});\n\t\tlet component = Component.create(this.name, values);\n\t\tcomponent._componentId = this.componentId;\n\t\treturn component;\n\t}\n}\nSerializable.registerSerializable(ComponentData, 'cda', json => {\n\treturn new ComponentData(json.n, json.id, json.cid);\n});\n","import Serializable from './serializable';\nimport assert from '../util/assert';\nimport { getSerializable } from './serializableManager';\nimport Prop from './propertyType';\nimport PropertyOwner from './propertyOwner';\nimport ComponentData from './componentData';\nimport Entity from './entity';\nimport { game } from './game';\nimport { Component } from './component';\n\nlet propertyTypes = [\n\tProp('name', 'No name', Prop.string)\n];\n\nexport default class Prototype extends PropertyOwner {\n\tconstructor() {\n\t\tsuper(...arguments);\n\t\t\n\t\tthis.previouslyCreatedEntity = null;\n\t}\n\t\n\taddChild(child) {\n\t\tif (child.threeLetterType === 'cda' && !child.componentClass.allowMultiple)\n\t\t\tassert(this.findChild('cda', cda => cda.componentId === child.componentId) === null, `Can't have multiple ${child.name} components. See Component.allowMultiple`);\n\t\tsuper.addChild(child);\n\t}\n\tgetParentPrototype() {\n\t\treturn this._parent && this._parent.threeLetterType === 'prt' ? this._parent : null;\n\t}\n\t\n\t/*\n\tReturns JSON:\n\t[\n\t\t{\n\t\t\townComponent: false, // component of a parent prototype\n\t\t\tcomponentClass: [object Object],\n\t\t\tcomponentId: <componentId>,\n\t\t\tthreeLetterType: 'icd',\n\t \t\tgeneratedForPrototype: <this>,\n\t\t\tproperties: [\n\t\t\t\t{ id missing }\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t ownComponentData: <ComponentData> || null, // null if this prototype has 0 properties defined\n\t\t\t componentClass: [object Object],\n\t\t\t componentId: <componentId>,\n\t\t\t threeLetterType: 'icd',\n\t\t\t generatedForPrototype: <this>,\n\t\t\t properties: [\n\t\t\t \t{ id found if own property } // some properties might be from parent prototypes and thus missing id\n\t\t\t ]\n\t\t }\n\t]\n\t */\n\tgetInheritedComponentDatas(filter = null) {\n\t\tlet originalPrototype = this;\n\t\t\n\t\tfunction getDataFromPrototype(prototype, _depth = 0) {\n\t\t\tlet data;\n\t\t\t\n\t\t\tlet parentPrototype = prototype.getParentPrototype();\n\t\t\tif (parentPrototype)\n\t\t\t\tdata = getDataFromPrototype(parentPrototype, _depth + 1);\n\t\t\telse\n\t\t\t\tdata = {}; // Top level\n\t\t\t\n\t\t\tlet componentDatas = prototype.getChildren('cda');\n\t\t\tcomponentDatas.forEach(componentData => {\n\t\t\t\tif (filter && !filter(componentData))\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\tif (!data[componentData.componentId]) {\n\t\t\t\t\t// Most parent version of this componentId\n\t\t\t\t\tdata[componentData.componentId] = {\n\t\t\t\t\t\t// ownComponent = true if the original prototype is the first one introducing this componentId\n\t\t\t\t\t\townComponentData: null, // will be given value if original prototype has this componentId\n\t\t\t\t\t\tcomponentClass: componentData.componentClass,\n\t\t\t\t\t\tcomponentId: componentData.componentId,\n\t\t\t\t\t\tpropertyHash: {},\n\t\t\t\t\t\tthreeLetterType: 'icd',\n\t\t\t\t\t\tgeneratedForPrototype: originalPrototype\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (_depth === 0) {\n\t\t\t\t\tdata[componentData.componentId].ownComponentData = componentData;\n\t\t\t\t}\n\n\t\t\t\tcomponentData.getChildren('prp').forEach(property => {\n\t\t\t\t\t// Newest version of a property always overrides old property\n\t\t\t\t\tdata[componentData.componentId].propertyHash[property.name] = _depth === 0 ? property : property.clone(true);\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\treturn data;\n\t\t}\n\n\t\tlet data = getDataFromPrototype(this);\n\t\tlet array = Object.keys(data).map(key => data[key]);\n\t\tarray.forEach(inheritedComponentData => {\n\t\t\tinheritedComponentData.properties = inheritedComponentData.componentClass._propertyTypes.map(propertyType => {\n\t\t\t\tif (inheritedComponentData.propertyHash[propertyType.name])\n\t\t\t\t\treturn inheritedComponentData.propertyHash[propertyType.name];\n\t\t\t\telse\n\t\t\t\t\treturn propertyType.createProperty({ skipSerializableRegistering: true });\n\t\t\t});\n\t\t\tdelete inheritedComponentData.propertyHash;\n\t\t});\n\t\t\n\t\tarray.forEach(inheritedComponentData => {\n\t\t\tlet cid = inheritedComponentData.componentId;\n\t\t});\n\n\t\treturn array.sort((a, b) => a.componentClass.componentName.localeCompare(b.componentClass.componentName));\n\t}\n\t\n\tcreateAndAddPropertyForComponentData(inheritedComponentData, propertyName, propertyValue) {\n\t\tlet propertyType = inheritedComponentData.componentClass._propertyTypesByName[propertyName];\n\t\tassert(propertyType, 'Invalid propertyName', propertyName, inheritedComponentData);\n\t\tlet componentData = this.findChild('cda', componentData => componentData.componentId === inheritedComponentData.componentId);\n\t\tlet componentDataIsNew = false;\n\t\tif (!componentData) {\n\t\t\tconsole.log('no component data. create one', this, inheritedComponentData);\n\t\t\tcomponentData = new ComponentData(inheritedComponentData.componentClass.componentName, false, inheritedComponentData.componentId);\n\t\t\tcomponentDataIsNew = true;\n\t\t}\n\t\tlet property = componentData.findChild('prp', property => property.name === propertyName);\n\t\tif (property) {\n\t\t\tproperty.value = propertyValue;\n\t\t\treturn property;\n\t\t}\n\n\t\tproperty = propertyType.createProperty({\n\t\t\tvalue: propertyValue,\n\t\t});\n\t\tcomponentData.addChild(property);\n\t\t\n\t\tif (componentDataIsNew)\n\t\t\tthis.addChild(componentData);\n\t\t\n\t\treturn property;\n\t}\n\t\n\tfindComponentDataByComponentId(componentId, alsoFindFromParents = false) {\n\t\tlet child = this.findChild('cda', componentData => componentData.componentId === componentId);\n\t\tif (child)\n\t\t\treturn child;\n\t\tif (alsoFindFromParents) {\n\t\t\tlet parent = this.getParentPrototype();\n\t\t\tif (parent)\n\t\t\t\treturn parent.findComponentDataByComponentId(componentId, alsoFindFromParents);\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tgetOwnComponentDataOrInherit(componentId) {\n\t\tlet componentData = this.findComponentDataByComponentId(componentId, false);\n\t\tif (!componentData) {\n\t\t\tlet inheritedComponentData = this.findComponentDataByComponentId(componentId, true);\n\t\t\tif (!inheritedComponentData)\n\t\t\t\treturn null;\n\t\t\t\n\t\t\tcomponentData = new ComponentData(inheritedComponentData.name, false, componentId);\n\t\t\tthis.addChild(componentData);\n\t\t}\n\t\treturn componentData\n\t}\n\t\n\tfindOwnProperty(componentId, propertyName) {\n\t\tlet componentData = this.findComponentDataByComponentId(componentId);\n\t\tif (componentData) {\n\t\t\treturn componentData.getProperty(propertyName);\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tcreateEntity() {\n\t\tlet entity = new Entity();\n\t\tlet inheritedComponentDatas = this.getInheritedComponentDatas();\n\t\tlet components = inheritedComponentDatas.map(Component.createWithInheritedComponentData);\n\t\tentity.addComponents(components);\n\t\tentity.prototype = this;\n\t\t\n\t\tthis.previouslyCreatedEntity = entity;\n\t\treturn entity;\n\t}\n\t\n\tgetValue(componentId, propertyName) {\n\t\tlet componentData = this.findComponentDataByComponentId(componentId, true);\n\t\tif (componentData)\n\t\t\treturn componentData.getValue(propertyName);\n\t\telse\n\t\t\treturn undefined;\n\t}\n\t\n\tcountEntityPrototypes(findParents = false) {\n\t\tif (this.threeLetterType !== 'prt')\n\t\t\treturn 0;\n\t\t\n\t\tlet count = 0;\n\t\tlet levels = game.getChildren('lvl');\n\t\tfor (let i = levels.length-1; i >= 0; i--) {\n\t\t\tlet entityPrototypes = levels[i].getChildren('epr');\n\t\t\tfor (let j = entityPrototypes.length-1; j >= 0; j--) {\n\t\t\t\tif (entityPrototypes[j].prototype === this)\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (findParents)\n\t\t\tthis.forEachChild('prt', prt => count += prt.countEntityPrototypes(true));\n\t\t\n\t\treturn count;\n\t}\n\t\n\tdelete() {\n\t\tthis._game = this._game || this.getRoot();\n\t\tif (!super.delete()) return false;\n\t\tif (this.threeLetterType === 'prt') {\n\t\t\tthis._game.forEachChild('lvl', lvl => {\n\t\t\t\tlet items = lvl.getChildren('epr');\n\t\t\t\tfor (let i = items.length-1; i >= 0; i--) {\n\t\t\t\t\tif (items[i].prototype === this) {\n\t\t\t\t\t\tlvl.deleteChild(items[i], i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.previouslyCreatedEntity = null;\n\t\treturn true;\n\t}\n}\nPropertyOwner.defineProperties(Prototype, propertyTypes);\n\nPrototype.create = function(name) {\n\treturn new Prototype().initWithPropertyValues({ name: name });\n};\n\nSerializable.registerSerializable(Prototype, 'prt');\n","import Serializable from './serializable'\nimport { addChange, changeType, setChangeOrigin } from './serializableManager';\nimport Prototype from '../core/prototype'\nimport assert from '../util/assert'\nimport PropertyOwner, { Prop } from '../core/propertyOwner';\n\nlet propertyTypes = [\n\tProp('name', 'No name', Prop.string)\n];\n\nlet game = null; // only one game at the time\nexport { game };\n\nlet isClient = typeof window !== 'undefined';\n\nexport default class Game extends PropertyOwner {\n\tconstructor(predefinedId) {\n\t\tif (isClient) {\n\t\t\tif (game) {\n\t\t\t\ttry {\n\t\t\t\t\tgame.delete();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Deleting old game failed', e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tgame = this;\n\t\t}\n\t\t\n\t\tif (predefinedId)\n\t\t\tconsole.log('game import');\n\t\telse\n\t\t\tconsole.log('game created');\n\t\t\n\t\tsuper(...arguments);\n\t}\n\tinitWithChildren() {\n\t\tsuper.initWithChildren(...arguments);\n\t\taddChange(changeType.addSerializableToTree, this);\n\t}\n\tdelete() {\n\t\tif (!super.delete()) return false;\n\t\t\n\t\tif (game === this)\n\t\t\tgame = null;\n\t\tconsole.log('game.delete');\n\t\t\n\t\treturn true;\n\t}\n}\nPropertyOwner.defineProperties(Game, propertyTypes);\n\nGame.prototype.isRoot = true;\n\nSerializable.registerSerializable(Game, 'gam');\n","import Serializable from './serializable';\nimport Entity from './entity';\nimport assert from '../util/assert';\nimport { game } from './game';\nimport { addChange, changeType, setChangeOrigin } from './serializableManager';\nimport { isClient } from '../util/environment';\n\n// import { createWorld, deleteWorld, updateWorld } from '../feature/physicsMatter';\n// import { createWorld, deleteWorld, updateWorld } from '../feature/physicsJs';\nimport { createWorld, deleteWorld, updateWorld } from '../feature/physicsP2';\n\nlet scene = null;\nexport { scene };\n\nconst physicsOptions = {\n\tenableSleeping: true\n};\n\nexport default class Scene extends Serializable {\n\tconstructor(predefinedId = false) {\n\t\tif (isClient) {\n\t\t\tif (scene) {\n\t\t\t\ttry {\n\t\t\t\t\tscene.delete();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Deleting old scene failed', e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tscene = this;\n\t\t\t\n\t\t\tthis.canvas = document.querySelector('canvas.anotherCanvas');\n\t\t\tthis.context = this.canvas.getContext('2d');\n\t\t}\n\t\tthis.level = null;\n\t\t\n\t\t// To make component based entity search fast:\n\t\tthis.components = new Map(); // componentName -> Set of components\n\t\t\n\t\tthis.animationFrameId = null;\n\t\tthis.playing = false;\n\t\tthis.time = 0;\n\t\t\n\t\tsuper(predefinedId);\n\t\taddChange(changeType.addSerializableToTree, this);\n\n\t\tif (predefinedId)\n\t\t\tconsole.log('scene import');\n\t\telse\n\t\t\tconsole.log('scene created');\n\n\t\tcreateWorld(this, physicsOptions);\n\t\t\n\t\tthis.draw();\n\t}\n\twin() {\n\t\tsetTimeout(() => {\n\t\t\tsetChangeOrigin(this);\n\t\t\tthis.reset();\n\t\t\tgame.dispatch('levelCompleted');\n\t\t})\n\t}\n\tanimFrame(playCalled) {\n\t\tthis.animationFrameId = null;\n\t\tif (!this._alive || !this.playing) return;\n\t\t\n\t\tlet timeInMilliseconds = performance.now();\n\t\tlet t = 0.001*timeInMilliseconds;\n\t\tlet dt = t-this._prevUpdate;\n\t\tif (dt > 0.05)\n\t\t\tdt = 0.05;\n\t\tthis._prevUpdate = t;\n\t\tthis.time += dt;\n\n\t\tsetChangeOrigin(this);\n\t\t\n\t\tthis.dispatch('onUpdate', dt, this.time);\n\t\tupdateWorld(this, dt, timeInMilliseconds);\n\t\tthis.draw();\n\t\t\n\t\tthis.requestAnimFrame();\n\t}\n\trequestAnimFrame() {\n\t\tthis.animationFrameId = window.requestAnimationFrame(() => this.animFrame());\n\t}\n\tdraw() {\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\tthis.dispatch('onDraw', this.context);\n\t}\n\tisInInitialState() {\n\t\treturn !this.playing && this.time === 0;\n\t}\n\treset() {\n\t\tthis.pause();\n\t\tthis.deleteChildren();\n\n\t\tdeleteWorld(this);\n\t\tcreateWorld(this, physicsOptions);\n\t\t\n\t\tif (this.level)\n\t\t\tthis.level.createScene(this);\n\t\tthis.time = 0;\n\t\tthis.draw();\n\t}\n\tpause() {\n\t\tif (!this.playing) return;\n\t\t\n\t\tthis.playing = false;\n\t\tif (this.animationFrameId)\n\t\t\twindow.cancelAnimationFrame(this.animationFrameId);\n\t\tthis.animationFrameId = null;\n\t}\n\tplay() {\n\t\tif (this.playing) return;\n\t\t\n\t\tthis._prevUpdate = 0.001*performance.now();\n\t\tthis.playing = true;\n\t\t\n\t\tthis.requestAnimFrame();\n\t\t\n\t\t\n\t\tif (this.time === 0)\n\t\t\tthis.dispatch('onStart');\n\t\t\n\t\t/*\n\t\tlet player = game.findChild('prt', p => p.name === 'Player', true);\n\t\tif (player) {\n\t\t\tconsole.log('Spawning player!', player);\n\t\t\tthis.spawn(player);\n\t\t}\n\t\t*/\n\t}\n\tdelete() {\n\t\tif (!super.delete()) return false;\n\n\t\tdeleteWorld(this);\n\t\t\n\t\tif (scene === this)\n\t\t\tscene = null;\n\t\t\n\t\tconsole.log('scene.delete');\n\t\treturn true;\n\t}\n\n\t// To make component based entity search fast:\n\taddComponent(component) {\n\t\tlet set = this.components.get(component.constructor.componentName);\n\t\tif (!set) {\n\t\t\tset = new Set();\n\t\t\tthis.components.set(component.constructor.componentName, set);\n\t\t}\n\t\tset.add(component);\n\t}\n\tremoveComponent(component) {\n\t\tlet set = this.components.get(component.constructor.componentName);\n\t\tassert(set);\n\t\tassert(set.delete(component));\n\t}\n\tgetComponents(componentName) {\n\t\treturn this.components.get(componentName) || new Set;\n\t}\n}\nScene.prototype.isRoot = true;\n\nSerializable.registerSerializable(Scene, 'sce');\n","import Serializable from './serializable';\nimport assert from '../util/assert';\nimport Property from './property';\nimport PropertyOwner from './propertyOwner';\nimport { scene } from './scene';\nimport { game } from './game';\nexport { default as Prop } from './propertyType';\nexport let componentClasses = new Map();\nimport ComponentData from './componentData';\n\n// Instance of a component, see componentExample.js\nexport class Component extends PropertyOwner {\n\tconstructor(predefinedId = false) {\n\t\tsuper(predefinedId);\n\t\tthis._componentId = null; // Creator will fill this\n\t\tthis.scene = scene;\n\t\tthis.game = game;\n\t\tthis._listenRemoveFunctions = [];\n\t\tthis.entity = null;\n\t}\n\tdelete() {\n\t\t// Component.delete never returns false because entity doesn't have components as children\n\t\tthis._parent = null;\n\t\tthis.entity = null;\n\t\tsuper.delete();\n\t\treturn true;\n\t}\n\t_preInit() {\n\t\tthis.constructor.requirements.forEach(r => {\n\t\t\tthis[r] = this.entity.getComponent(r);\n\t\t\tassert(this[r], `${this.constructor.componentName} requires component ${r} but it is not found`);\n\t\t});\n\n\t\tthis.forEachChild('com', c => c._preInit());\n\t\t\n\t\t['onUpdate', 'onDraw', 'onDrawHelper', 'onStart'].forEach(funcName => {\n\t\t\tif (typeof this[funcName] === 'function') {\n\t\t\t\t// console.log('listen ' + funcName);\n\t\t\t\tthis._listenRemoveFunctions.push(this.scene.listen(funcName, (...args) => this[funcName](...args)));\n\t\t\t}\n\t\t});\n\n\t\tif (this.constructor.componentName !== 'Transform')\n\t\t\tthis.scene.addComponent(this);\n\t\t\n\t\ttry {\n\t\t\tif (typeof this.preInit === 'function')\n\t\t\t\tthis.preInit();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.componentName, 'preInit', e);\n\t\t}\n\t}\n\t_init() {\n\t\tthis.forEachChild('com', c => c._init());\n\t\ttry {\n\t\t\tif (typeof this.init === 'function')\n\t\t\t\tthis.init();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.componentName, 'init', e);\n\t\t}\n\t}\n\t_sleep() {\n\t\ttry {\n\t\t\tif (typeof this.sleep === 'function')\n\t\t\t\tthis.sleep();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.componentName, 'sleep', e);\n\t\t}\n\n\t\tif (this.constructor.componentName !== 'Transform')\n\t\t\tthis.scene.removeComponent(this);\n\t\t\n\t\tthis.forEachChild('com', c => c._sleep());\n\t\t// console.log(`remove ${this._listenRemoveFunctions.length} listeners`);\n\t\tthis._listenRemoveFunctions.forEach(f => f());\n\t\tthis._listenRemoveFunctions.length = 0;\n\t}\n\tlistenProperty(component, propertyName, callback) {\n\t\tthis._listenRemoveFunctions.push(component._properties[propertyName].listen('change', callback));\n\t}\n\tcreateComponentData() {\n\t\tlet componentName = this.constructor.componentName;\n\t\tlet propertyTypes = this.constructor._propertyTypes;\n\t\tlet componentData = new ComponentData(componentName);\n\t\tlet children = [];\n\t\tpropertyTypes.forEach(pt => {\n\t\t\tchildren.push(pt.createProperty({\n\t\t\t\tvalue: this[pt.name]\n\t\t\t}));\n\t\t});\n\t\tcomponentData.initWithChildren(children);\n\t\treturn componentData;\n\t}\n\ttoJSON() {\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tn: this.constructor.componentName,\n\t\t\tcid: this._componentId\n\t\t});\n\t}\n}\nComponent.create = function(name, values = {}) {\n\tlet componentClass = componentClasses.get(name);\n\tassert(componentClass);\n\tlet component = new componentClass();\n\tcomponent.initWithPropertyValues(values);\n\treturn component;\n};\nComponent.createWithInheritedComponentData = function(inheritedComponentData) {\n\tlet component = new inheritedComponentData.componentClass;\n\tcomponent._componentId = inheritedComponentData.componentId;\n\tlet properties = inheritedComponentData.properties.map(p => p.clone());\n\tcomponent.initWithChildren(properties);\n\treturn component;\n};\n\nComponent.reservedPropertyNames = new Set(['id', 'constructor', 'delete', 'children', 'entity', 'env', 'init', 'preInit', 'sleep', 'toJSON', 'fromJSON']);\nComponent.reservedPrototypeMembers = new Set(['id', 'children', 'entity', 'env', '_preInit', '_init', '_sleep', '_forEachChildComponent', '_properties', '_componentData', 'toJSON', 'fromJSON']);\nComponent.register = function({\n\tname = '', // required\n\tdescription = '',\n\tcategory = 'Other',\n\ticon = 'fa-puzzle-piece', // in editor\n\tcolor = '', // in editor\n\tproperties = [],\n\trequirements = ['Transform'],\n\tchildren = [],\n\tparentClass = Component,\n\tprototype = {},\n\tallowMultiple = true,\n\trequiesInitWhenEntityIsEdited = false\n}) {\n\tassert(name, 'Component must have a name.');\n\tassert(name[0] >= 'A' && name[0] <= 'Z', 'Component name must start with capital letter.');\n\tassert(!componentClasses.has(name), 'Duplicate component class ' + name);\n\tObject.keys(prototype).forEach(k => {\n\t\tif (Component.reservedPrototypeMembers.has(k))\n\t\t\tassert(false, 'Component prototype can not have a reserved member: ' + k);\n\t});\n\t\n\tlet constructorFunction = prototype.constructor;\n\tlet deleteFunction = prototype.delete;\n\tdelete prototype.constructor;\n\tdelete prototype.delete;\n\tclass Com extends parentClass {\n\t\tconstructor() {\n\t\t\tsuper(...arguments);\n\t\t\tif (constructorFunction)\n\t\t\t\tconstructorFunction();\n\t\t}\n\t\tdelete() {\n\t\t\tif (!super.delete()) return false;\n\t\t\t\n\t\t\tif (deleteFunction)\n\t\t\t\tdeleteFunction();\n\t\t\t\n\t\t\treturn true;\n\t\t}\n\t}\n\tproperties.forEach(p => {\n\t\tassert(!Component.reservedPropertyNames.has(p.name), 'Can not have property called ' + p.name);\n\t});\n\tPropertyOwner.defineProperties(Com, properties); // properties means propertyTypes here\n\tCom.componentName = name;\n\tCom.category = category;\n\tif (requirements.indexOf('Transform') < 0) requirements.push('Transform');\n\tCom.requirements = requirements;\n\tCom.children = children;\n\tCom.description = description;\n\tCom.allowMultiple = allowMultiple;\n\tCom.icon = icon;\n\t\n\tlet num = name.split('').reduce((prev, curr) => prev + curr.charCodeAt(0), 0);\n\tCom.color = color || `hsla(${ num % 360 }, 40%, 60%, 1)`;\n\n\tprototype._name = name;\n\tObject.assign(Com.prototype, prototype);\n\tcomponentClasses.set(Com.componentName, Com);\n\treturn Com;\n};\n\nSerializable.registerSerializable(Component, 'com', json => {\n\tlet component = new (componentClasses.get(json.n))(json.id);\n\tcomponent._componentId = json.cid || null;\n\treturn component;\n});\n","import Prototype from './prototype';\nimport Property from './property';\nimport Serializable from './serializable';\nimport { getSerializable } from './serializableManager';\nimport { Prop, componentClasses } from './component';\nimport ComponentData from './componentData';\nimport { scene } from './scene';\nimport assert from '../util/assert';\nimport Vector from '../util/vector';\n\n// EntityPrototype is a prototype that always has one Transform ComponentData and optionally other ComponentDatas also.\n// Entities are created based on EntityPrototypes\nexport default class EntityPrototype extends Prototype {\n\tconstructor(predefinedId = false) {\n\t\tsuper(...arguments);\n\t\t// this._parent is level, not prototype. We need a link to parent-prototype.\n\t\tthis.prototype = null;\n\t}\n\tgetTransform() {\n\t\treturn this.findChild('cda', cda => cda.name === 'Transform');\n\t}\n\tgetParentPrototype() {\n\t\treturn this.prototype;\n\t}\n\tclone() {\n\t\tlet obj = new EntityPrototype();\n\t\tobj.prototype = this.prototype;\n\t\tlet id = obj.id;\n\t\tlet children = [];\n\t\tthis.forEachChild(null, child => {\n\t\t\tif (child.threeLetterType === 'prp' && child.name === 'name') {\n\t\t\t\tlet property = new Property({\n\t\t\t\t\tvalue: child.propertyType.type.clone(child.value),\n\t\t\t\t\tname: child.name,\n\t\t\t\t\tpropertyType: this.propertyType,\n\t\t\t\t\tpredefinedId: id + '_n'\n\t\t\t\t});\n\t\t\t\tchildren.push(property);\n\t\t\t} else if (child.threeLetterType === 'cda' && child.name === 'Transform') {\n\t\t\t\tlet transform = new ComponentData('Transform', id + '_t');\n\n\t\t\t\tlet position = transform.componentClass._propertyTypesByName.position.createProperty({\n\t\t\t\t\tvalue: child.findChild('prp', prp => prp.name === 'position').value,\n\t\t\t\t\tpredefinedId: id + '_p'\n\t\t\t\t});\n\t\t\t\ttransform.addChild(position);\n\n\t\t\t\tlet scale = transform.componentClass._propertyTypesByName.scale.createProperty({\n\t\t\t\t\tvalue: child.findChild('prp', prp => prp.name === 'scale').value,\n\t\t\t\t\tpredefinedId: id + '_s'\n\t\t\t\t});\n\t\t\t\ttransform.addChild(scale);\n\n\t\t\t\tlet rotation = transform.componentClass._propertyTypesByName.rotation.createProperty({\n\t\t\t\t\tvalue: child.findChild('prp', prp => prp.name === 'rotation').value,\n\t\t\t\t\tpredefinedId: id + '_r'\n\t\t\t\t});\n\t\t\t\ttransform.addChild(rotation);\n\t\t\t\t\n\t\t\t\tchildren.push(transform);\n\t\t\t} else if (child.threeLetterType === 'cda') {\n\t\t\t\tchildren.push(child.clone({ cloneComponentId: true }));\n\t\t\t} else {\n\t\t\t\tchildren.push(child.clone());\n\t\t\t}\n\t\t});\n\t\tobj.initWithChildren(children);\n\t\tthis._state |= Serializable.STATE_CLONE;\n\t\treturn obj;\n\t}\n\ttoJSON() {\n\t\t// return super.toJSON();\n\t\t\n\t\t// Below optimization reduces size 88%. id's have to be generated based on this.id\n\t\t\n\t\tlet Transform = this.getTransform();\n\t\tlet json = {\n\t\t\tid: this.id,\n\t\t\tp: this.prototype.id\n\t\t};\n\t\t\n\t\tlet childArrays = [];\n\t\tthis._children.forEach(child => {\n\t\t\tchildArrays.push(child);\n\t\t});\n\t\tlet children = [].concat(...childArrays).filter(child => {\n\t\t\treturn child !== Transform && child !== this._properties.name;\n\t\t});\n\t\tif (children.length > 0)\n\t\t\tjson.c = children.map(child => child.toJSON());\n\t\t\n\t\tlet prototype = this.prototype;\n\t\t\n\t\tlet floatToJSON = Prop.float().toJSON;\n\t\tlet handleProperty = prp => {\n\t\t\tif (prp.name === 'name') {\n\t\t\t\tif (!prototype || prp.value !== prototype.name)\n\t\t\t\t\tjson.n = prp.value;\n\t\t\t} else if (prp.name === 'position') {\n\t\t\t\tjson.x = floatToJSON(prp.value.x);\n\t\t\t\tjson.y = floatToJSON(prp.value.y);\n\t\t\t} else if (prp.name === 'scale') {\n\t\t\t\tif (!prp.value.isEqualTo(new Vector(1, 1))) {\n\t\t\t\t\tjson.w = floatToJSON(prp.value.x);\n\t\t\t\t\tjson.h = floatToJSON(prp.value.y);\n\t\t\t\t}\n\t\t\t} else if (prp.name === 'rotation') {\n\t\t\t\tif (prp.value !== 0)\n\t\t\t\t\tjson.a = floatToJSON(prp.value);\n\t\t\t}\n\t\t};\n\t\thandleProperty(this._properties.name);\n\n\t\tTransform.getChildren('prp').forEach(handleProperty);\n\t\treturn json;\n\t}\n\tspawnEntityToScene(position) {\n\t\tif (!scene)\n\t\t\treturn;\n\t\t\n\t\tif (position) {\n\t\t\tthis.getTransform().getPropertyOrCreate('position').value = position;\n\t\t}\n\t\t\n\t\tlet entity = this.createEntity();\n\t\tscene.addChild(entity);\n\t}\n}\nObject.defineProperty(EntityPrototype.prototype, 'position', {\n\tget() {\n\t\treturn this.getTransform().findChild('prp', prp => prp.name === 'position').value;\n\t},\n\tset(position) {\n\t\treturn this.getTransform().findChild('prp', prp => prp.name === 'position').value = position;\n\t}\n});\n\n// If Transform or Transform.position is missing, they are added.\nEntityPrototype.createFromPrototype = function(prototype, componentDatas = []) {\n\n\tlet entityPrototype = new EntityPrototype();\n\tentityPrototype.prototype = prototype;\n\tlet id = entityPrototype.id;\n\t\n\tassert(!componentDatas.find(cda => cda.name === 'Transform'), 'Prototype (prt) can not have a Transform component');\n\t\n\tlet transform = new ComponentData('Transform', id + '_t');\n\tcomponentDatas.push(transform);\n\t\n\tlet position = transform.componentClass._propertyTypesByName.position.createProperty({\n\t\tvalue: new Vector(0, 0),\n\t\tpredefinedId: id + '_p'\n\t});\n\ttransform.addChild(position);\n\n\tlet scale = transform.componentClass._propertyTypesByName.scale.createProperty({\n\t\tvalue: new Vector(1, 1),\n\t\tpredefinedId: id + '_s'\n\t});\n\ttransform.addChild(scale);\n\n\tlet rotation = transform.componentClass._propertyTypesByName.rotation.createProperty({\n\t\tvalue: 0,\n\t\tpredefinedId: id + '_r'\n\t});\n\ttransform.addChild(rotation);\n\n\tlet name = EntityPrototype._propertyTypesByName.name.createProperty({\n\t\tvalue: prototype.name,\n\t\tpredefinedId: id + '_n'\n\t});\n\t\n\tentityPrototype.initWithChildren([name, ...componentDatas])\n\n\treturn entityPrototype;\n};\n\nSerializable.registerSerializable(EntityPrototype, 'epr', json => {\n\tlet entityPrototype = new EntityPrototype(json.id);\n\tentityPrototype.prototype = getSerializable(json.p);\n\tassert(entityPrototype.prototype, `Prototype ${json.p} not found`);\n\t\n\tlet nameId = json.id + '_n';\n\tlet transformId = json.id + '_t';\n\tlet positionId = json.id + '_p';\n\tlet scaleId = json.id + '_s';\n\tlet rotationId = json.id + '_r';\n\t\n\tlet name = Prototype._propertyTypesByName.name.createProperty({ \n\t\tvalue: json.n === undefined ? entityPrototype.prototype.name : json.n, \n\t\tpredefinedId: nameId \n\t});\n\t\n\tlet transformData = new ComponentData('Transform', transformId);\n\tlet transformClass = componentClasses.get('Transform');\n\t\n\tlet position = transformClass._propertyTypesByName.position.createProperty({\n\t\tvalue: new Vector(json.x, json.y),\n\t\tpredefinedId: positionId\n\t});\n\ttransformData.addChild(position);\n\n\tlet scale = transformClass._propertyTypesByName.scale.createProperty({\n\t\tvalue: new Vector(json.w === undefined ? 1 : json.w, json.h === undefined ? 1 : json.h),\n\t\tpredefinedId: scaleId\n\t});\n\ttransformData.addChild(scale);\n\n\tlet rotation = transformClass._propertyTypesByName.rotation.createProperty({\n\t\tvalue: json.a || 0,\n\t\tpredefinedId: rotationId\n\t});\n\ttransformData.addChild(rotation);\n\t\n\t\n\tentityPrototype.initWithChildren([name, transformData]);\n\treturn entityPrototype;\n});\n","import Serializable from './serializable';\nimport PropertyOwner, { Prop } from '../core/propertyOwner';\nimport Scene, { scene } from './scene';\n\nlet propertyTypes = [\n\tProp('name', 'No name', Prop.string)\n];\n\nexport default class Level extends PropertyOwner {\n\tconstructor(predefinedId) {\n\t\tsuper(...arguments);\n\n\t\tif (predefinedId)\n\t\t\tconsole.log('level import');\n\t\telse\n\t\t\tconsole.log('level created');\n\t}\n\tcreateScene(predefinedSceneObject = false) {\n\t\tif (!predefinedSceneObject)\n\t\t\tnew Scene();\n\t\tlet entities = this.getChildren('epr').map(epr => epr.createEntity());\n\t\tscene.addChildren(entities);\n\t\tscene.level = this;\n\t\treturn scene;\n\t}\n\t\n\t\n\t/*\n\tOPTIMIZATION DOES NOT WORK, YET\n\ttoJSON() {\n\t\tlet json = super.toJSON();\n\t\tconsole.log('before', json);\n\t\tif (json.c) {\n\t\t\tlet prototypeIds = new Set();\n\t\t\tjson.c.forEach(child => {\n\t\t\t\tconsole.log('child', child);\n\t\t\t\tprototypeIds.add(child.p);\n\t\t\t});\n\t\t\t\n\t\t\tlet prototypeIdToNum = {};\n\t\t\tlet prototypeIdArray = [];\n\t\t\tlet num = 0;\n\t\t\tprototypeIds.forEach(key => {\n\t\t\t\tprototypeIdArray[num] = key;\n\t\t\t\tprototypeIdToNum[key] = num++;\n\t\t\t});\n\n\t\t\tjson.c.forEach(child => {\n\t\t\t\tchild.p = prototypeIdToNum[child.p] || child.p;\n\t\t\t});\n\t\t\t\n\t\t\tjson.p = prototypeIdArray;\n\n\t\t\tconsole.log(json, prototypeIds, prototypeIdToNum, prototypeIdArray);\n\t\t}\n\t\treturn json;\n\t}\n\t*/\n}\nPropertyOwner.defineProperties(Level, propertyTypes);\n\nSerializable.registerSerializable(Level, 'lvl');\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\n\nComponent.register({\n\tname: 'Transform',\n\tcategory: 'Core',\n\ticon: 'fa-dot-circle-o',\n\tallowMultiple: false,\n\tproperties: [\n\t\tProp('position', new Vector(0, 0), Prop.vector),\n\t\tProp('scale', new Vector(1, 1), Prop.vector),\n\t\tProp('rotation', 0, Prop.float, Prop.float.modulo(0, Math.PI * 2), Prop.flagDegreesInEditor)\n\t]\n});\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\n\nComponent.register({\n\tname: 'TransformVariance',\n\tcategory: 'Core',\n\ticon: 'fa-dot-circle-o',\n\tallowMultiple: false,\n\tproperties: [\n\t\tProp('positionVariance', new Vector(0, 0), Prop.vector),\n\t\tProp('scaleVariance', new Vector(0, 0), Prop.vector),\n\t\tProp('rotationVariance', 0, Prop.float, Prop.float.range(0, Math.PI), Prop.flagDegreesInEditor)\n\t],\n\tprototype: {\n\t\tonStart() {\n\t\t\tif (!this.positionVariance.isZero())\n\t\t\t\tthis.Transform.position = this.Transform.position.add(this.positionVariance.clone().multiplyScalar(-1 + 2 * Math.random()));\n\n\t\t\tif (!this.scaleVariance.isZero())\n\t\t\t\tthis.Transform.scale = this.Transform.scale.add(this.scaleVariance.clone().multiplyScalar(-1 + 2 * Math.random()));\n\t\t\t\n\t\t\tif (this.rotationVariance)\n\t\t\t\tthis.Transform.rotation += this.rotationVariance * (-1 + 2 * Math.random());\n\t\t}\n\t}\n});\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\n\nlet vari = 0;\n\nComponent.register({\n\tname: 'Test',\n\tcategory: 'Core',\n\tproperties: [\n\t\tProp('name', 'Oh right', Prop.string),\n\t\tProp('enum', 'yksi', Prop.enum, Prop.enum.values('yksi', 'kaksi', 'kolme', 'neljä')),\n\t\tProp('topBarHelper', new Vector(0, 1), Prop.vector),\n\t\tProp('test' + ++vari, vari, Prop.int),\n\t\tProp('test' + ++vari, false, Prop.bool),\n\t\tProp('test' + ++vari, true, Prop.bool)\n\t]\n});\n","import { Component, Prop } from '../core/component';\nimport { key, keyPressed } from '../util/input';\nimport Vector from '../util/vector';\n\nComponent.register({\n\tname: 'Mover',\n\tproperties: [\n\t\tProp('change', new Vector(10, 10), Prop.vector),\n\t\tProp('userControlled', false, Prop.bool),\n\t\tProp('speed', 1, Prop.float),\n\t\tProp('rotationSpeed', 0, Prop.float, 'Degrees per second', Prop.flagDegreesInEditor)\n\t],\n\tprototype: {\n\t\tonUpdate(dt, t) {\n\t\t\tif (this.userControlled) {\n\t\t\t\tif (!this.entity.localMaster) return;\n\t\t\t\t\n\t\t\t\tlet dx = 0;\n\t\t\t\tlet dy = 0;\n\t\t\t\t\n\t\t\t\tif (keyPressed(key.left)) dx -= 1;\n\t\t\t\tif (keyPressed(key.right)) dx += 1;\n\t\t\t\tif (keyPressed(key.up)) dy -= 1;\n\t\t\t\tif (keyPressed(key.down)) dy += 1;\n\t\t\t\tif (dx) this.Transform.position.x += dx * this.speed * dt;\n\t\t\t\tif (dy) this.Transform.position.y += dy * this.speed * dt;\n\t\t\t\tif (dx || dy) {\n\t\t\t\t\tthis.Transform.position = this.Transform.position;\n\t\t\t\t}\n\t\t\t\tif (dx && this.rotationSpeed) {\n\t\t\t\t\tthis.Transform.rotation += dt * dx * this.rotationSpeed;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet change = new Vector(dt, 0).rotate(t * this.speed).multiply(this.change);\n\t\t\t\tthis.Transform.position.set(this.Transform.position).add(change);\n\t\t\t\t\n\t\t\t\tif (this.rotationSpeed)\n\t\t\t\t\tthis.Transform.rotation += dt * this.rotationSpeed;\n\t\t\t}\n\t\t}\n\t}\n});\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\n\nComponent.register({\n\tname: 'Rect',\n\ticon: 'fa-stop',\n\tallowMultiple: true,\n\tproperties: [\n\t\tProp('size', new Vector(10, 10), Prop.vector),\n\t\tProp('style', 'red', Prop.string),\n\t\tProp('randomStyle', false, Prop.bool)\n\t],\n\tprototype: {\n\t\tinit() {\n\t\t\tif (this.randomStyle)\n\t\t\t\tthis.style = `hsl(${Math.random()*360 | 0}, 100%, 40%)`;\n\t\t},\n\t\tonDraw(context) {\n\t\t\tlet\n\t\t\t\tx = this.Transform.position.x - this.size.x/2 * this.Transform.scale.x,\n\t\t\t\ty = this.Transform.position.y - this.size.y/2 * this.Transform.scale.y,\n\t\t\t\tw = this.size.x * this.Transform.scale.x,\n\t\t\t\th = this.size.y * this.Transform.scale.y;\n\t\t\tcontext.save();\n\t\t\tcontext.fillStyle = this.style;\n\t\t\tcontext.translate(x+w/2, y+h/2);\n\t\t\tcontext.rotate(this.Transform.rotation);\n\t\t\tcontext.fillRect(-w/2, -h/2, w, h);\n\t\t\tcontext.restore();\n\t\t}\n\t}\n});\n","import { Component, Prop } from '../core/component';\nimport EntityPrototype from '../core/entityPrototype';\n\nComponent.register({\n\tname: 'Spawner',\n\tproperties: [\n\t\tProp('typeName', '', Prop.string)\n\t],\n\tprototype: {\n\t\tonStart() {\n\t\t\tthis.spawn();\n\t\t},\n\t\tonDrawHelper(context) {\n\t\t\tlet size = 30;\n\t\t\tlet\n\t\t\t\tx = this.Transform.position.x - size * this.Transform.scale.x/2,\n\t\t\t\ty = this.Transform.position.y - size * this.Transform.scale.y/2,\n\t\t\t\tw = size * this.Transform.scale.x,\n\t\t\t\th = size * this.Transform.scale.y;\n\t\t\tcontext.save();\n\t\t\tcontext.fillStyle = 'blue';\n\t\t\tcontext.strokeStyle = 'white';\n\t\t\tcontext.lineWidth = 1;\n\t\t\tcontext.font = '40px FontAwesome';\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.fillText('\\uf21d', this.Transform.position.x + 2, this.Transform.position.y);\n\t\t\tcontext.strokeText('\\uf21d', this.Transform.position.x + 2, this.Transform.position.y);\n\t\t\t\n\t\t\tcontext.restore();\n\t\t},\n\t\tspawn() {\n\t\t\tlet prototype = this.game.findChild('prt', prt => prt.name === this.typeName);\n\t\t\tif (!prototype)\n\t\t\t\treturn;\n\n\t\t\tEntityPrototype.createFromPrototype(prototype).spawnEntityToScene(this.Transform.position);\n\t\t}\n\t}\n});\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\n\nComponent.register({\n\tname: 'Trigger',\n\tallowMultiple: true,\n\tproperties: [\n\t\tProp('trigger', 'playerComesNear', Prop.enum, Prop.enum.values('playerComesNear')),\n\t\tProp('radius', 40, Prop.float, Prop.float.range(0, 1000), Prop.visibleIf('trigger', 'playerComesNear')),\n\t\tProp('action', 'win', Prop.enum, Prop.enum.values('win'))\n\t],\n\tprototype: {\n\t\tonDrawHelper(context) {\n\t\t\tlet size = 30;\n\t\t\tlet\n\t\t\t\tx = this.Transform.position.x - size * this.Transform.scale.x/2,\n\t\t\t\ty = this.Transform.position.y - size * this.Transform.scale.y/2,\n\t\t\t\tw = size * this.Transform.scale.x,\n\t\t\t\th = size * this.Transform.scale.y;\n\t\t\tcontext.save();\n\t\t\tcontext.fillStyle = 'blue';\n\t\t\tcontext.strokeStyle = 'white';\n\t\t\tcontext.lineWidth = 1;\n\t\t\tcontext.font = '40px FontAwesome';\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.fillText('\\uf085', this.Transform.position.x, this.Transform.position.y + 15);\n\t\t\tcontext.strokeText('\\uf085', this.Transform.position.x, this.Transform.position.y + 15);\n\t\t\t\n\t\t\tcontext.restore();\n\t\t},\n\t\tpreInit() {\n\t\t\tthis.storeProp = `__Trigger_${this._componentId}`;\n\t\t},\n\t\tonUpdate() {\n\t\t\tif (this.trigger === 'playerComesNear') {\n\t\t\t\tlet componentSet = this.scene.getComponents('Mover');\n\t\t\t\tlet entities = [];\n\t\t\t\tcomponentSet.forEach(c => entities.push(c.entity));\n\t\t\t\tlet distSq = this.radius * this.radius;\n\t\t\t\tlet pos = this.Transform.position;\n\t\t\t\tfor (let i = 0; i < entities.length; ++i) {\n\t\t\t\t\tif (entities[i].position.distanceSq(pos) < distSq) {\n\t\t\t\t\t\tif (!entities[i][this.storeProp] && this.launchTrigger(entities[i]) === false)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tentities[i][this.storeProp] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tentities[i][this.storeProp] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\t// Return false if other triggers should not be checked\n\t\tlaunchTrigger(entity) {\n\t\t\tif (this.action === 'win') {\n\t\t\t\tthis.scene.win();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n});\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\nimport p2, { addBody, deleteBody, addContactMaterial } from '../feature/physicsP2';\nimport { getChangeOrigin } from '../core/serializableManager';\n\nconst PHYSICS_SCALE = 1/50;\n\nlet dynamicMaterial = new p2.Material();\nlet staticMaterial = new p2.Material();\n\nComponent.register({\n\tname: 'Physics',\n\ticon: 'fa-stop',\n\tallowMultiple: false,\n\tproperties: [\n\t\tProp('bounciness', 0, Prop.float, Prop.float.range(0, 1)),\n\t\tProp('density', 0.001, Prop.float, Prop.float.range(0, 100)),\n\t\tProp('friction', 0.1, Prop.float, Prop.float.range(0, 1)),\n\t\tProp('frictionAir', 0.01, Prop.float, Prop.float.range(0, 1)),\n\t\tProp('frictionStatic', 0.5, Prop.float, Prop.float.range(0, 10)),\n\t\tProp('isStatic', false, Prop.bool),\n\t\tProp('startStill', false, Prop.bool)\n\t],\n\trequirements: [\n\t\t'Rect'\n\t],\n\trequiesInitWhenEntityIsEdited: true,\n\tprototype: {\n\t\tinit() {\n\t\t\tif (!this.scene._p2World._materialInited) {\n\t\t\t\tlet settings = {\n\t\t\t\t\trestitution: 1,\n\t\t\t\t\tstiffness: Number.MAX_VALUE,\n\t\t\t\t\tfriction: 1\n\t\t\t\t};\n\t\t\t\taddContactMaterial(this.scene, dynamicMaterial, staticMaterial, settings);\n\t\t\t\taddContactMaterial(this.scene, dynamicMaterial, dynamicMaterial, settings);\n\t\t\t\tthis.scene._p2World._materialInited = true;\n\t\t\t}\n\t\t\t/*\n\t\t\t let update = callback => {\n\t\t\t return value => {\n\t\t\t if (!this.updatingOthers && this.body) {\n\t\t\t callback(value);\n\t\t\t Matter.Sleeping.set(this.body, false);\n\t\t\t }\n\t\t\t }\n\t\t\t };\n\n\t\t\t this.listenProperty(this.Transform, 'position', update(position => Matter.Body.setPosition(this.body, position)));\n\t\t\t this.listenProperty(this.Transform, 'rotation', update(rotation => Matter.Body.setAngle(this.body, rotation)));\n\t\t\t this.listenProperty(this, 'density', update(density => {\n\t\t\t // let oldMass = this.body.mass;\n\t\t\t Matter.Body.setDensity(this.body, density);\n\n\t\t\t // Remove this when Matter.js will fix setDensity\n\n\t\t\t // if (this.body.inertia !== undefined && this.body.inertia !== Infinity)\n\t\t\t // \tMatter.Body.setInertia(this.body, this.body.inertia * this.body.mass / oldMass);\n\n\t\t\t // Matter.Body.setVertices(this.body, this.body.vertices);\n\t\t\t }));\n\t\t\t this.listenProperty(this, 'friction', update(friction => this.body.friction = friction));\n\t\t\t this.listenProperty(this, 'frictionAir', update(frictionAir => this.body.frictionAir = frictionAir));\n\t\t\t this.listenProperty(this, 'frictionStatic', update(frictionStatic => this.body.frictionStatic = frictionStatic));\n\t\t\t this.listenProperty(this, 'isStatic', update(isStatic => Matter.Body.setStatic(this.body, isStatic)));\n\t\t\t this.listenProperty(this, 'bounciness', update(bounciness => this.body.restitution = bounciness));\n\t\t\t */\n\t\t},\n\t\tcreateBody() {\n\t\t\t/*\n\t\t\tthis.body = Physics.body('rectangle', {\n\t\t\t\tx: this.Transform.position.x,\n\t\t\t\ty: this.Transform.position.y,\n\t\t\t\tangle: this.Transform.rotation,\n\t\t\t\tradius: this.Rect.size.x,\n\t\t\t\twidth: this.Rect.size.x,\n\t\t\t\theight: this.Rect.size.y,\n\t\t\t\ttreatment: this.isStatic ? 'static' : 'dynamic',\n\t\t\t\trestitution: this.bounciness,\n\t\t\t\tcof: this.friction\n\t\t\t});\n\t\t\t*/\n\n\t\t\tthis.body = new p2.Body({\n\t\t\t\tmass: this.isStatic ? 0 : 1,\n\t\t\t\tposition: [this.Transform.position.x * PHYSICS_SCALE, this.Transform.position.y * PHYSICS_SCALE],\n\t\t\t\tangle: this.Transform.rotation,\n\t\t\t\tvelocity: [0, 0],\n\t\t\t\tangularVelocity: 0,\n\t\t\t\tallowSleep: true\n\t\t\t});\n\t\t\tlet shape = new p2.Box({\n\t\t\t\twidth: this.Rect.size.x * PHYSICS_SCALE,\n\t\t\t\theight: this.Rect.size.y * PHYSICS_SCALE\n\t\t\t});\n\t\t\tshape.material = this.isStatic ? staticMaterial : dynamicMaterial;\n\t\t\tthis.body.addShape(shape);\n\t\t\t// if (!this.isStatic)\n\t\t\t// \tthis.body.setDensity(this.density);\n\t\t\taddBody(this.scene, this.body);\n\t\t},\n\t\tonStart() {\n\t\t\t// Sleeping must be set in onStart because editing sleeping body does not work\n\t\t\t\n\t\t\t/*\n\t\t\tif (this.startStill)\n\t\t\t\tthis.body.sleep(true);\n\t\t\t\t*/\n\t\t},\n\t\tsetInTreeStatus(inTree) {\n\t\t\tif (inTree)\n\t\t\t\tthis.createBody();\n\t\t\treturn Component.prototype.setInTreeStatus.call(this, ...arguments);\n\t\t},\n\t\tonUpdate() {\n\t\t\tif (!this.body || this.body.sleepState === p2.Body.SLEEPING)\n\t\t\t\treturn;\n\n\t\t\tthis.updatingOthers = true;\n\t\t\tthis.Transform.position = Vector.fromArray(this.body.position).divideScalar(PHYSICS_SCALE);\n\t\t\tthis.Transform.rotation = this.body.angle;\n\t\t\tthis.updatingOthers = false;\n\t\t},\n\t\tsleep() {\n\t\t\tif (this.body) {\n\t\t\t\tdeleteBody(this.scene, this.body);\n\t\t\t\tthis.body = null;\n\t\t\t}\n\t\t}\n\t}\n});\n"],"names":["createStringId","threeLetterPrefix","characters","let","id","i","CHARACTERS","Math","random","CHAR_COUNT","addSerializable","serializable","assert","undefined","serializables","getSerializable","removeSerializable","Error","getChangeOrigin","origin","setChangeOrigin","_origin","addChange","type","reference","change","external","externalChange","changeType","setPropertyValue","value","_value","move","parent","_parent","addSerializableToTree","previousOrigin","listeners","forEach","l","executeExternal","callback","addChangeListener","push","packChange","packedChange","packed","parentId","toJSON","propertyType","Object","keys","keyToShortKey","key","e","console","log","unpackChange","shortKey","shortKeyToKey","error","executeChange","newScene","fromJSON","obj","Serializable","addChild","threeLetterType","localMaster","deleteAllChildren","deleteChildren","deleteSerializable","delete","play","condition","message","stack","createPropertyType","propertyName","defaultValue","validator","validators","default","description","flags","visibleIf","optionalParameters","p","idx","validate","isFlag","PropertyType","createFlag","func","createDataType","ref","x","name","clone","createType","validatorName","createValidator","validatorFunction","parameters","validatorParameters","validateFloat","val","isNaN","Infinity","createWorld","owner","options","_p2World","p2","World","gravity","sleepMode","BODY_SLEEPING","updateWorld","dt","step","deleteWorld","clear","addBody","body","deleteBody","removeBody","addContactMaterial","A","B","ContactMaterial","keyPressed","setNetworkEnabled","enabled","networkEnabled","startSceneWhenGameLoaded","shouldStartSceneWhenGameLoaded","isInSceneTree","getRoot","getQueryVariable","variable","query","window","location","search","substring","vars","split","length","pair","decodeURIComponent","tryToLoad","io","setTimeout","socket","changes","valueChanges","duplicateChange","splice","indexOf","setInterval","packedChanges","map","emit","on","serverStartTime","game","clientStartTime","Date","now","requiredClientTime","reload","gameData","localStorage","anotherGameId","history","replaceState","scene","getChildren","createScene","listen","gameId","resizeCanvas","canvas","width","innerWidth","height","innerHeight","isClient","isServer","module","const","serializableClasses","Map","predefinedId","skipSerializableRegistering","this","_children","_listeners","_isInTree","isRoot","_state","STATE_CONSTRUCTOR","STATE_PREDEFINEDID","startsWith","serializableManager.addSerializable","deleteChild","_alive","serializableManager.removeSerializable","STATE_DESTROY","size","array","child","serializableManager.addChange","serializableManager.changeType","initWithChildren","children","STATE_INIT","addChildren","_addChild","STATE_ADDCHILD","get","set","STATE_ADDPARENT","setInTreeStatus","findChild","filterFunction","find","findParent","element","_detachChild","forEachChild","deep","processArray","newParent","_detach","getParent","json","arrays","Array","from","sort","a","b","c","concat","toString","JSON","stringify","constructor","STATE_CLONE","event","hasOwnProperty","unshift","index","this$1","dispatch","apply","args","hasDescendant","isInTree","force","filter","Boolean","STATE_FROMJSON","registerSerializable","Class","prototype","defineProperty","info","join","states","logState","state","stateString","createDebugObject","debug","debugChildArray","k","Property","super","_initialValue","setPropertyType","_initialValueIsJSON","initialValue","assign","v","n","newValue","f","getFlag","flag","createProperty","dataType","flagDegreesInEditor","Vector","y","add","vec","subtract","multiply","multiplyScalar","scalar","divide","divideScalar","dot","sqrt","lengthSq","setLength","newLength","oldLength","getProjectionOn","distance","dx","dy","distanceSq","normalize","horizontalAngle","atan2","verticalAngle","rotate","angle","cos","sin","rotateTo","rotation","isEqualTo","isZero","fromObject","fromArray","FLOAT_JSON_PRECISION_MULTIPLIER","pow","float","parseFloat","range","min","max","modulo","round","int","parseInt","vector","string","String","bool","enum","values","isArray","PropertyOwner","_propertyTypes","_properties","initWithPropertyValues","propName","_propertyTypesByName","propChildren","otherChildren","invalidPropertiesCount","prop","isInvalid","nameToProp","componentName","defineProperties","propertyTypes","ALIVE_ERROR","Entity","components","sleeping","getComponent","getComponents","getListOfAllComponents","entity","addComponents","_name","initComponents","_preInit","_init","makeComponentsSleep","_sleep","deleteComponents","sleep","wakeUp","deleteComponent","component","compArray","comp","proto","position","ComponentData","componentClassName","predefinedComponentId","componentClass","componentClasses","allowMultiple","componentId","newComponentId","cloneComponentId","cid","getInheritedProperties","_depth","properties","parentComponentData","getParentComponentData","parentPrototype","getParentPrototype","componentData","getPropertyOrCreate","property","prp","getProperty","setValue","getValue","createComponent","Component","create","_componentId","Prop","Prototype","arguments","previouslyCreatedEntity","cda","getInheritedComponentDatas","getDataFromPrototype","data","ownComponentData","propertyHash","generatedForPrototype","originalPrototype","inheritedComponentData","localeCompare","createAndAddPropertyForComponentData","propertyValue","componentDataIsNew","findComponentDataByComponentId","alsoFindFromParents","getOwnComponentDataOrInherit","findOwnProperty","createEntity","inheritedComponentDatas","createWithInheritedComponentData","countEntityPrototypes","findParents","count","levels","entityPrototypes","j","prt","_game","lvl","items","Game","warn","require","physicsOptions","enableSleeping","Scene","document","querySelector","context","getContext","level","animationFrameId","playing","time","draw","win","reset","animFrame","playCalled","timeInMilliseconds","performance","t","_prevUpdate","requestAnimFrame","requestAnimationFrame","clearRect","isInInitialState","pause","cancelAnimationFrame","addComponent","Set","removeComponent","_listenRemoveFunctions","requirements","r","funcName","preInit","init","listenProperty","createComponentData","pt","reservedPropertyNames","reservedPrototypeMembers","register","has","constructorFunction","deleteFunction","Com","parentClass","category","icon","num","reduce","prev","curr","charCodeAt","color","EntityPrototype","getTransform","transform","scale","Transform","childArrays","floatToJSON","handleProperty","w","h","spawnEntityToScene","createFromPrototype","componentDatas","entityPrototype","nameId","transformId","positionId","scaleId","rotationId","transformData","transformClass","Level","predefinedSceneObject","entities","epr","PI","onStart","positionVariance","scaleVariance","rotationVariance","vari","left","right","up","down","ctrl","appleLeft","appleRight","alt","shift","space","d","g","m","o","q","s","u","z","0","1","9","backspace","enter","esc","keyDownListeners","keyUpListeners","onkeydown","keyCode","which","activeElement","nodeName","toLowerCase","onkeyup","onUpdate","userControlled","speed","rotationSpeed","randomStyle","style","onDraw","save","fillStyle","translate","fillRect","restore","spawn","onDrawHelper","strokeStyle","lineWidth","font","textAlign","fillText","strokeText","typeName","storeProp","trigger","componentSet","distSq","radius","pos","launchTrigger","action","dynamicMaterial","Material","staticMaterial","requiesInitWhenEntityIsEdited","_materialInited","settings","restitution","stiffness","Number","MAX_VALUE","friction","createBody","Body","mass","isStatic","velocity","angularVelocity","allowSleep","shape","Box","Rect","material","addShape","inTree","call","argsArray","sleepState","SLEEPING","updatingOthers","addEventListener"],"mappings":"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"}