{"version":3,"file":null,"sources":["../src/assert.js","../src/core/serializableManager.js","../src/core/serializable.js","../src/core/propertyType.js","../node_modules/redom/dist/redom.es.js","../src/core/entity.js","../src/core/propertyModel.js","../src/core/test.js","../src/editor/layout.js","../src/core/property.js","../src/core/component.js","../src/components/Position.js","../src/mainDev.js"],"sourcesContent":["export default function assert(condition, message) {\n\tif (!condition)\n\t\tthrow new Error(message);\n}\n","let serializables = new Map();\n\nexport function addSerializable(serializable) {\n\tif (serializables.has(serializable.id)) throw new Error('Serializable id clash!');\n\tserializables.set(serializable.id, serializable);\n}\n\nexport function getSerializable(id) {\n\treturn serializables.get(id);\n}\n\nexport function hasSerializable(id) {\n\treturn serializables.has(id);\n}\n\nexport function removeSerializable(id) {\n\tif (!serializables.delete(id))\n\t\tthrow new Error('Serializable not found!');\n}\n","import assert from '../assert';\nimport * as serializableManager from './serializableManager';\n\nconst BASE_64_CHARACTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst CHAR_COUNT = BASE_64_CHARACTERS.length;\nfunction char() {\n\treturn BASE_64_CHARACTERS[Math.random() * CHAR_COUNT | 0];\n}\nfunction createStringId(threeLetterPrefix = '???', characters = 16) {\n\tlet id = threeLetterPrefix;\n\tfor (let i = characters - 1; i !== 0; --i)\n\t\tid += char();\n\treturn id;\n}\n\nexport default class Serializable {\n\tconstructor(threeLetterType, predefinedId = false) {\n\t\tif (predefinedId)\n\t\t\tthis.id = predefinedId;\n\t\telse\n\t\t\tthis.id = createStringId(threeLetterType);\n\n\t\tserializableManager.addSerializable(this);\n\t}\n\tdelete() {\n\t\tserializableManager.removeSerializable(this.id);\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tid: this.id\n\t\t};\n\t}\n\ttoString() {\n\t\treturn JSON.stringify(this.toJSON(), null, 4);\n\t}\n\tstatic fromJSON(json) {\n\t\tassert(typeof json.id === 'string');\n\t\treturn new Serializable(null, json.id);\n\t}\n}\n","import assert from '../assert';\nimport PropertyModel from './propertyModel';\n\nexport default function PropertyType(propertyName, defaultValue, type, ...optionalParameters) {\n\ttype = type();\n\tlet validator = type.validators.default();\n\tlet description = '';\n\toptionalParameters.forEach(p => {\n\t\tif (typeof p === 'string')\n\t\t\tdescription = p;\n\t\telse if (p && p.validate)\n\t\t\tvalidator = p;\n\t\telse\n\t\t\tassert(false, 'invalid parameter ' + p);\n\t});\n\treturn new PropertyModel(propertyName, type, validator, defaultValue);\n};\n\nexport function addType({\n\tname = '',\n\tvalidators = { default: x => x }, // default must exist\n\ttoJSON = x => x,\n\tfromJSON = x => x\n}) {\n\tassert(name, 'name missing from property type');\n\tassert(typeof validators.default === 'function','default validator missing from property type: ' + name);\n\tassert(typeof toJSON === 'function', 'invalid toJSON for property type: ' + name);\n\tassert(typeof fromJSON === 'function', 'invalid fromJSON for property type: ' + name);\n\n\tlet type = {\n\t\tname,\n\t\tvalidators,\n\t\ttoJSON,\n\t\tfromJSON\n\t};\n\tlet createType = () => type;\n\t\n\tObject.keys(validators).forEach(validatorName => {\n\t\tcreateType[validatorName] = createValidator(validatorName, validators[validatorName]);\n\t\tvalidators[validatorName] = createType[validatorName];\n\t});\n\tPropertyType[name] = createType;\n}\n\nexport function createValidator(name, validatorFunction) {\n\tlet validator = function() {\n\t\tlet parameters = [...arguments];\n\t\treturn {\n\t\t\tvalidatorName: name,\n\t\t\tvalidatorParameters: parameters,\n\t\t\tvalidate: x => validatorFunction(x, ...parameters)\n\t\t};\n\t};\n\tvalidator.validatorName = name;\n\tvalidator.validate = validatorFunction;\n\treturn validator;\n}\n\naddType({\n\tname: 'float',\n\tvalidators: {\n\t\tdefault(x) {\n\t\t\tx = parseFloat(x);\n\t\t\tassert(!isNaN(x), 'invalid float: ' + x);\n\t\t\treturn x;\n\t\t},\n\t\t// PropertyType.float.range(min, max)\n\t\trange(x, min, max) {\n\t\t\tx = parseFloat(x);\n\t\t\tassert(!isNaN(x), 'invalid float: ' + x);\n\t\t\treturn Math.min(max, Math.max(min, x));\n\t\t}\n\t},\n\ttoJSON: x => x,\n\tfromJSON: x => x\n});\n\naddType({\n\tname: 'string',\n\tvalidators: {\n\t\tdefault: x => String(x)\n\t},\n\ttoJSON: x => x,\n\tfromJSON: x => x\n});\n","var HASH = '#'.charCodeAt(0);\nvar DOT = '.'.charCodeAt(0);\n\nfunction createElement (query, ns) {\n  var tag;\n  var id;\n  var className;\n\n  var mode = 0;\n  var start = 0;\n\n  for (var i = 0; i <= query.length; i++) {\n    var char = query.charCodeAt(i);\n\n    if (char === HASH || char === DOT || !char) {\n      if (mode === 0) {\n        if (i === 0) {\n          tag = 'div';\n        } else if (!char) {\n          tag = query;\n        } else {\n          tag = query.substring(start, i);\n        }\n      } else {\n        var slice = query.substring(start, i);\n\n        if (mode === 1) {\n          id = slice;\n        } else if (className) {\n          className += ' ' + slice;\n        } else {\n          className = slice;\n        }\n      }\n\n      start = i + 1;\n\n      if (char === HASH) {\n        mode = 1;\n      } else {\n        mode = 2;\n      }\n    }\n  }\n\n  var element = ns ? document.createElementNS(ns, tag) : document.createElement(tag);\n\n  if (id) {\n    element.id = id;\n  }\n\n  if (className) {\n    element.className = className;\n  }\n\n  return element;\n}\n\nfunction text (content) {\n  return document.createTextNode(content);\n}\n\nfunction mount (parent, child, before) {\n  var parentEl = parent.el || parent;\n  var childEl = child.el || child;\n\n  if (childEl.__redom_list) {\n    childEl = childEl.el;\n  }\n\n  if (child === childEl && childEl.__redom_view) {\n    // try to look up the view if not provided\n    child = childEl.__redom_view;\n  }\n\n  if (child !== childEl) {\n    childEl.__redom_view = child;\n  }\n  if (child.isMounted) {\n    child.remount && child.remount();\n  } else {\n    child.mount && child.mount();\n  }\n  if (before) {\n    parentEl.insertBefore(childEl, before.el || before);\n  } else {\n    parentEl.appendChild(childEl);\n  }\n  if (child.isMounted) {\n    child.remounted && child.remounted();\n  } else {\n    child.isMounted = true;\n    child.mounted && child.mounted();\n  }\n}\n\nfunction unmount (parent, child) {\n  var parentEl = parent.el || parent;\n  var childEl = child.el || child;\n\n  if (child === childEl && childEl.__redom_view) {\n    // try to look up the view if not provided\n    child = childEl.__redom_view;\n  }\n\n  child.unmount && child.unmount();\n\n  parentEl.removeChild(childEl);\n\n  child.isMounted = false;\n  child.unmounted && child.unmounted();\n}\n\nvar elcache = {};\n\nfunction el (query) {\n  var arguments$1 = arguments;\n\n  var element;\n\n  if (typeof query === 'string') {\n    element = (elcache[query] || (elcache[query] = createElement(query))).cloneNode(false);\n  } else if (query && query.nodeType) {\n    element = query.cloneNode(false);\n  } else {\n    throw new Error('At least one argument required');\n  }\n\n  var empty = true;\n\n  for (var i = 1; i < arguments.length; i++) {\n    var arg = arguments$1[i];\n\n    if (!arg) {\n      continue;\n    }\n\n    // support middleware\n    if (typeof arg === 'function') {\n      arg(element);\n    } else if (typeof arg === 'string' || typeof arg === 'number') {\n      if (empty) {\n        empty = false;\n        element.textContent = arg;\n      } else {\n        element.appendChild(text(arg));\n      }\n    } else if (arg.nodeType || (arg.el && arg.el.nodeType)) {\n      empty = false;\n      mount(element, arg);\n    } else if (arg.length) {\n      empty = false;\n      for (var j = 0; j < arg.length; j++) {\n        mount(element, arg[j]);\n      }\n    } else if (typeof arg === 'object') {\n      for (var key in arg) {\n        var value = arg[key];\n\n        if (key === 'style') {\n          if (typeof value === 'string') {\n            element.setAttribute(key, value);\n          } else {\n            for (var cssKey in value) {\n              element.style[cssKey] = value[cssKey];\n            }\n          }\n        } else if (key in element || typeof value === 'function') {\n          element[key] = value;\n        } else {\n          element.setAttribute(key, value);\n        }\n      }\n    }\n  }\n\n  return element;\n}\n\nel.extend = function (query) {\n  var clone = (elcache[query] || (elcache[query] = createElement(query)));\n\n  return el.bind(this, clone);\n};\n\nfunction setChildren (parent, children) {\n  var parentEl = parent.el || parent;\n  var traverse = parentEl.firstChild;\n\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n\n    if (!child) {\n      continue;\n    }\n\n    var childEl = child.el || child;\n\n    if (childEl === traverse) {\n      traverse = traverse.nextSibling;\n      continue;\n    }\n\n    mount(parent, child, traverse);\n  }\n\n  while (traverse) {\n    var next = traverse.nextSibling;\n\n    unmount(parent, traverse);\n\n    traverse = next;\n  }\n}\n\nfunction list (parent, View, key, initData) {\n  return new List(parent, View, key, initData);\n}\n\nfunction List (parent, View, key, initData) {\n  this.__redom_list = true;\n  this.View = View;\n  this.key = key;\n  this.initData = initData;\n  this.views = [];\n  this.el = typeof parent === 'string' ? el(parent) : parent;\n\n  if (key) {\n    this.lookup = {};\n  }\n}\n\nList.extend = function (parent, View, key, initData) {\n  return List.bind(List, parent, View, key, initData);\n};\n\nlist.extend = List.extend;\n\nList.prototype.update = function (data) {\n  if ( data === void 0 ) data = [];\n\n  var View = this.View;\n  var key = this.key;\n  var functionKey = typeof key === 'function';\n  var initData = this.initData;\n  var newViews = new Array(data.length);\n  var oldViews = this.views;\n  var newLookup = key && {};\n  var oldLookup = key && this.lookup;\n\n  for (var i = 0; i < data.length; i++) {\n    var item = data[i];\n    var view = (void 0);\n\n    if (key) {\n      var id = functionKey ? key(item) : item[key];\n      view = newViews[i] = oldLookup[id] || new View(initData, item, i, data);\n      newLookup[id] = view;\n      view.__id = id;\n    } else {\n      view = newViews[i] = oldViews[i] || new View(initData, item, i, data);\n    }\n    var el$$1 = view.el;\n    if (el$$1.__redom_list) {\n      el$$1 = el$$1.el;\n    }\n    el$$1.__redom_view = view;\n    view.update && view.update(item, i, data);\n  }\n\n  setChildren(this, newViews);\n\n  if (key) {\n    this.lookup = newLookup;\n  }\n  this.views = newViews;\n};\n\nfunction router (parent, Views) {\n  return new Router(parent, Views);\n}\n\nvar Router = function Router (parent, Views) {\n  this.el = typeof parent === 'string' ? el(parent) : parent;\n  this.Views = Views;\n};\nRouter.prototype.update = function update (route, data) {\n  if (route !== this.route) {\n    var Views = this.Views;\n    var View = Views[route];\n\n    this.view = View && new View();\n    this.route = route;\n\n    setChildren(this.el, [ this.view ]);\n  }\n  this.view && this.view.update && this.view.update(data);\n};\n\nvar SVG = 'http://www.w3.org/2000/svg';\n\nvar svgcache = {};\n\nfunction svg (query, a) {\n  var arguments$1 = arguments;\n\n  var element;\n\n  if (typeof query === 'string') {\n    element = (svgcache[query] || (svgcache[query] = createElement(query, SVG))).cloneNode(false);\n  } else if (query && query.nodeType) {\n    element = query.cloneNode(false);\n  } else {\n    throw new Error('At least one argument required');\n  }\n\n  var empty = true;\n\n  for (var i = 1; i < arguments.length; i++) {\n    var arg = arguments$1[i];\n\n    if (!arg) {\n      continue;\n    } else if (typeof arg === 'function') {\n      arg = arg(element);\n    } else if (typeof arg === 'string' || typeof arg === 'number') {\n      if (empty) {\n        empty = false;\n        element.textContent = arg;\n      } else {\n        element.appendChild(text(arg));\n      }\n    } else if (arg.nodeType || (arg.el && arg.el.nodeType)) {\n      empty = false;\n      mount(element, arg);\n    } else if (typeof arg === 'object') {\n      for (var key in arg) {\n        var value = arg[key];\n\n        if (key === 'style' && typeof value !== 'string') {\n          for (var cssKey in value) {\n            element.style[cssKey] = value[cssKey];\n          }\n        } else if (typeof value === 'function') {\n          element[key] = value;\n        } else {\n          element.setAttribute(key, value);\n        }\n      }\n    }\n  }\n\n  return element;\n}\n\nsvg.extend = function (query) {\n  var clone = (svgcache[query] || (svgcache[query] = createElement(query, SVG)));\n\n  return svg.bind(this, clone);\n};\n\nexport { el, list, List, mount, unmount, router, Router, setChildren, svg, text };\n","import Serializable from './serializable';\nimport assert from '../assert';\n\nconst ALIVE_ERROR = 'entity is already dead';\n\nexport default class Entity extends Serializable {\n\tconstructor() {\n\t\tsuper('ent');\n\t\tthis.components = new Map(); // name -> array\n\t\tthis.alive = true;\n\t\tthis.sleeping = false;\n\t\tthis.prototype = null;\n\t}\n\n\t// Get the first component of given name\n\tgetComponent(name) {\n\t\tassert(this.alive, ALIVE_ERROR);\n\t\tlet components = this.components.get(name);\n\t\tif (components !== undefined)\n\t\t\treturn components[0];\n\t\telse\n\t\t\treturn null;\n\t}\n\n\t// Get all components with given name\n\tgetComponents(name) {\n\t\tassert(this.alive, ALIVE_ERROR);\n\t\treturn this.components.get(name) || [];\n\t}\n\n\t/*\n\tAdds multiple components as an array to this Entity.\n\tUses addComponent internally.\n\tInitializes components after all components are added.\n\t*/\n\taddComponents(components) {\n\t\tassert(this.alive, ALIVE_ERROR);\n\t\tassert(Array.isArray(components), 'Parameter is not an array.');\n\n\t\tfor (let i = 0; i < components.length; i++) {\n\t\t\tlet componentList = this.components.get(components[i].name) || this.components.set(components[i].name, []).get(components[i].name);\n\t\t\tcomponentList.push(components[i]);\n\t\t}\n\t\t\n\t\tif (!this.sleeping)\n\t\t\tEntity.initComponents(components);\n\t\treturn this;\n\t}\n\tstatic initComponents(components) {\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i]._preInit();\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i]._init();\n\t}\n\tstatic makeComponentsSleep(components) {\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i]._sleep();\n\t}\n\tstatic deleteComponents(components) {\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i].delete();\n\t}\n\tsleep() {\n\t\tassert(this.alive, ALIVE_ERROR);\n\t\tif (this.sleeping) return false;\n\t\t\n\t\tfor (let componentArray of this.components)\n\t\t\tEntity.makeComponentsSleep(componentArray);\n\t\t\n\t\tthis.sleeping = true;\n\t\treturn true;\n\t}\n\twakeUp() {\n\t\tassert(this.alive, ALIVE_ERROR);\n\t\tif (!this.sleeping) return false;\n\n\t\tfor (let componentArray of this.components)\n\t\t\tEntity.initComponents(componentArray);\n\n\t\tthis.sleeping = false;\n\t\treturn true;\n\t}\n\tdelete() {\n\t\tassert(this.alive, ALIVE_ERROR);\n\t\tthis.sleep();\n\t\tsuper.delete();\n\t\tthis.alive = false;\n\t\tfor (let componentArray of this.components)\n\t\t\tEntity.deleteComponents(componentArray);\n\t\tthis.components.clear();\n\t}\n\ttoJSON() {\n\t\tassert(this.alive, ALIVE_ERROR);\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tcomponents: []\n\t\t});\n\t}\n}\n","import Serializable from './serializable';\nimport assert from '../assert';\n\n// info about type, validator, validatorParameters, initialValue\n\nexport default class PropertyModel extends Serializable {\n\tconstructor(name, type, validator, initialValue) {\n\t\tassert(typeof name === 'string');\n\t\tassert(typeof type.name === 'string');\n\t\tassert(typeof validator.validate === 'function');\n\t\t\n\t\tsuper('pmo');\n\t\t\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.validator = validator;\n\t\tthis.initialValue = initialValue;\n\t}\n\ttoJSON() {\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tname: this.name,\n\t\t\ttype: this.type.name,\n\t\t\tvalidatorName: this.validator.validatorName,\n\t\t\tvalidatorParameters: this.validator.validatorParameters,\n\t\t\tinitialValue: this.type.toJSON(this.initialValue)\n\t\t});\n\t}\n\tdelete() {\n\t\tsuper.delete();\n\t\tthis.type = null;\n\t\tthis.validator = null;\n\t}\n}\n","import assert from '../assert';\n\nimport Serializable from './serializable';\n(() => {\n\tlet s = new Serializable('tes');\n\tlet id = s.id;\n\tassert(typeof id === 'string' && id.length > 10);\n\tlet json = s.toJSON();\n\tassert(json && typeof json === 'object' && typeof json.id === 'string');\n\ts.delete();\n\ts = Serializable.fromJSON(json);\n\tassert(typeof s.id === 'string' && s.id.length > 10 && s.id === id);\n\tconsole.log('Serializable tests OK');\n})();\n\nimport Entity from './entity';\n(() => {\n\tlet i = new Entity();\n\tassert(i.components.size === 0);\n\tassert(i.getComponent('moi') === null);\n\tassert(i.getComponents('moi').length === 0);\n\tconsole.log('Entity tests OK');\n})();\n\nimport PropertyType from './propertyType';\n(() => {\n\tassert(PropertyType.float.default().validate('4') === 4);\n\tassert(PropertyType.float.range(0, 1).validate(3) === 1);\n\tconsole.log('PropertyType tests OK');\n})();\n","import { el, mount } from 'redom';\n\nclass Layout {\n\tconstructor() {\n\t\tthis.el = el('div.editorLayout',\n\t\t\tel('div.leftCenter',\n\t\t\t\tthis.top = new Top,\n\t\t\t\tel('div.middle',\n\t\t\t\t\tthis.left = new Left,\n\t\t\t\t\tthis.center = new Center\n\t\t\t\t),\n\t\t\t\tthis.bottom = new Bottom\n\t\t\t),\n\t\t\tthis.right = new Right\n\t\t);\n\t}\n\tupdate(state) {\n\t\tthis.top.update(state.top);\n\t\tthis.left.update(state.left);\n\t\tthis.center.update(state.center);\n\t\tthis.right.update(state.right);\n\t\tthis.bottom.update(state.bottom);\n\t}\n}\n\nclass Top {\n\tconstructor() {\n\t\tthis.el = el('div.top');\n\t}\n\tupdate(state) {\n\t}\n}\nclass Left {\n\tconstructor() {\n\t\tthis.el = el('div.left');\n\t}\n\tupdate(state) {\n\t}\n}\nclass Center {\n\tconstructor() {\n\t\tthis.el = el('div.center');\n\t}\n\tupdate(state) {\n\t}\n}\nclass Right {\n\tconstructor() {\n\t\tthis.el = el('div.right');\n\t}\n\tupdate(state) {\n\t}\n}\nclass Bottom {\n\tconstructor() {\n\t\tthis.el = el('div.bottom');\n\t}\n\tupdate(state) {\n\t}\n}\n\nlet layout = new Layout;\nmount(document.body, layout);\n\nconsole.log('joo');\n","import Serializable from './serializable';\nimport assert from '../assert';\n\n// Entity of a property\nexport default class Property extends Serializable {\n\tconstructor(propertyModel) {\n\t\tsuper('pro');\n\t\tthis.model = propertyModel;\n\t\tthis.value = propertyModel.initialValue;\n\t}\n\ttoJSON() {\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tvalue: this.type.toJSON(this.value),\n\t\t\tmodelId: this.model.id\n\t\t});\n\t}\n\tdelete() {\n\t\tsuper.delete();\n\t\tthis.model = null;\n\t}\n}\nObject.defineProperty(Property.prototype, 'type', {\n\tget() {\n\t\treturn this.model.type;\n\t}\n});\nObject.defineProperty(Property.prototype, 'value', {\n\tset(newValue) {\n\t\tthis._value = this.model.validator.validate(newValue);\n\t},\n\tget() {\n\t\treturn this._value;\n\t}\n});\nObject.defineProperty(Property.prototype, 'initialValue', {\n\tget() {\n\t\treturn this.model.initialValue;\n\t}\n});\n","import Serializable from './serializable';\nimport assert from '../assert';\nimport Property from './property';\nexport { default as Prop } from './propertyType';\n\nlet componentClasses = new Map();\n\n// Instance of a component, see componentExample.js\nexport class Component extends Serializable {\n\tconstructor(componentModel, entity, env) {\n\t\tsuper('com');\n\t\tthis.entity = entity;\n\t\tthis.env = env;\n\t\tthis.children = {}; // TODO: create children\n\t\tthis._properties = {};\n\t\tthis._componentModel = componentModel;\n\t\tthis.constructor.propertyModels.forEach(p => {\n\t\t\tthis._properties[p.name] = new Property(p);\n\t\t});\n\t}\n\tdelete() {\n\t\tassert(!this.env.entity.alive, 'Do not call Component.delete!');\n\t\tsuper.delete();\n\t}\n\t_preInit() {\n\t\tthis.constructor.requirements.forEach(r => {\n\t\t\tthis[r] = this.entity.getComponent(r);\n\t\t\tassert(this[r], 'required component not found');\n\t\t});\n\n\t\tthis._forEachChildComponent(c => c._preInit());\n\t\n\t\ttry {\n\t\t\tif (typeof this.preInit === 'function')\n\t\t\t\tthis.preInit();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.name, 'preInit', e);\n\t\t}\n\t}\n\t_init() {\n\t\tthis._forEachChildComponent(c => c._init());\n\t\ttry {\n\t\t\tif (typeof this.init === 'function')\n\t\t\t\tthis.init();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.name, 'init', e);\n\t\t}\n\t}\n\t_sleep() {\n\t\ttry {\n\t\t\tif (typeof this.sleep === 'function')\n\t\t\t\tthis.sleep();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.name, 'sleep', e);\n\t\t}\n\t\tthis._forEachChildComponent(c => c._sleep());\n\t}\n\t_forEachChildComponent(func) {\n\t\tObject.keys(this.children).forEach(key => {\n\t\t\tlet child = this.children[key];\n\t\t\tif (Array.isArray(child)) {\n\t\t\t\tchild.forEach(func);\n\t\t\t} else {\n\t\t\t\tfunc(child);\n\t\t\t}\n\t\t});\n\t}\n}\n\nComponent.reservedPropertyNames = new Set(['children', 'delete', 'entity', 'env', 'init', 'preInit', 'sleep']);\nComponent.register = function(componentClass, {\n\tproperties = [],\n\tcategory = 'Other',\n\trequirements = [],\n\tchildren = []\n} = {}) {\n\tassert(!componentClasses.has(componentClass.name), 'Duplicate component class ' + componentClass.name);\n\tcomponentClass.propertyModels = properties;\n\tcomponentClass.category = category;\n\tcomponentClass.requirements = requirements;\n\tcomponentClass.children = children;\n\n\tcomponentClass.propertyModels.forEach(p => {\n\t\tassert(!Component.reservedPropertyNames.has(p.name), 'Can not have property called ' + p.name);\n\t\tassert(componentClass.prototype[p.name] === undefined, 'Name ' + p.name + ' clashes ');\n\t\tObject.defineProperty(componentClass.prototype, p.name, {\n\t\t\tget() {\n\t\t\t\treturn this._properties[p.name].value;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis._properties[p.name].value = value;\n\t\t\t}\n\t\t});\n\t});\n\t\n\tcomponentClasses.set(componentClass.name, componentClass);\n};\n","import { Component, Prop } from '../core/component';\n\nconst properties = [\n\tProp('x', 0, Prop.float),\n\tProp('y', 0, Prop.float)\n];\n\nclass Position extends Component {\n}\n\nComponent.register(Position, {\n\tproperties,\n\tcategory: 'Core'\n});\n","// tests\nimport './core/test';\n\n\nimport './editor/layout';\n\n// main\nimport './main';\nimport './editor/layout';\n\n\nimport Property from './core/property';\nwindow.Property = Property;\n\nimport PropertyModel from './core/propertyModel';\nwindow.PropertyModel = PropertyModel;\n\nimport PropertyType from './core/propertyType';\nwindow.PropertyType = PropertyType;\n"],"names":["assert","condition","message","Error","addSerializable","serializable","serializables","has","id","set","removeSerializable","delete","char","BASE_64_CHARACTERS","Math","random","CHAR_COUNT","createStringId","threeLetterPrefix","characters","let","i","PropertyType","propertyName","defaultValue","type","validator","validators","default","description","optionalParameters","forEach","p","validate","PropertyModel","addType","ref","x","name","toJSON","fromJSON","createType","Object","keys","validatorName","createValidator","validatorFunction","parameters","validatorParameters","createElement","query","ns","tag","className","mode","start","length","charCodeAt","HASH","DOT","substring","slice","element","document","createElementNS","text","content","createTextNode","mount","parent","child","before","parentEl","el","childEl","__redom_list","__redom_view","isMounted","remount","insertBefore","appendChild","remounted","mounted","unmount","removeChild","unmounted","arguments$1","arguments","elcache","cloneNode","nodeType","empty","arg","textContent","j","key","value","setAttribute","cssKey","style","setChildren","children","traverse","firstChild","nextSibling","next","Map","Serializable","threeLetterType","predefinedId","this","serializableManager.addSerializable","serializableManager.removeSerializable","toString","JSON","stringify","json","const","ALIVE_ERROR","Entity","super","components","alive","sleeping","prototype","getComponent","get","undefined","getComponents","addComponents","Array","isArray","componentList","push","initComponents","_preInit","_init","makeComponentsSleep","_sleep","deleteComponents","sleep","componentArray","wakeUp","clear","assign","initialValue","parseFloat","isNaN","range","min","max","String","s","console","log","size","float","extend","clone","bind","Router","Views","update","route","data","View","view","Layout","top","Top","left","Left","center","Center","bottom","Bottom","right","Right","state","layout","body","Property","propertyModel","model","modelId","defineProperty","newValue","_value","componentClasses","Component","componentModel","entity","env","_properties","_componentModel","constructor","propertyModels","requirements","r","_forEachChildComponent","c","preInit","e","error","init","func","reservedPropertyNames","Set","register","componentClass","properties","category","Prop","Position","window"],"mappings":"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"}