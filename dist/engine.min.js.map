{"version":3,"file":null,"sources":["../src/assert.js","../src/core/serializableManager.js","../src/core/serializable.js","../src/core/propertyType.js","../src/core/property.js","../src/core/propertyModel.js","../src/core/component.js","../src/components/Position.js"],"sourcesContent":["export default function assert(condition, message) {\n\tif (!condition)\n\t\tthrow new Error(message);\n}\n","let serializables = new Map();\n\nexport function addSerializable(serializable) {\n\tif (serializables.has(serializable.id)) throw new Error('Serializable id clash!');\n\tserializables.set(serializable.id, serializable);\n}\n\nexport function getSerializable(id) {\n\treturn serializables.get(id);\n}\n\nexport function hasSerializable(id) {\n\treturn serializables.has(id);\n}\n\nexport function removeSerializable(id) {\n\tif (!serializables.delete(id))\n\t\tthrow new Error('Serializable not found!');\n}\n","import assert from '../assert';\nimport * as serializableManager from './serializableManager';\n\nconst BASE_64_CHARACTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst CHAR_COUNT = BASE_64_CHARACTERS.length;\nfunction char() {\n\treturn BASE_64_CHARACTERS[Math.random() * CHAR_COUNT | 0];\n}\nfunction createStringId(threeLetterPrefix = '???', characters = 16) {\n\tlet id = threeLetterPrefix;\n\tfor (let i = characters - 1; i !== 0; --i)\n\t\tid += char();\n\treturn id;\n}\n\nexport default class Serializable {\n\tconstructor(threeLetterType, predefinedId = false) {\n\t\tif (predefinedId)\n\t\t\tthis.id = predefinedId;\n\t\telse\n\t\t\tthis.id = createStringId(threeLetterType);\n\n\t\tserializableManager.addSerializable(this);\n\t}\n\tdelete() {\n\t\tserializableManager.removeSerializable(this.id);\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tid: this.id\n\t\t};\n\t}\n\ttoString() {\n\t\treturn JSON.stringify(this.toJSON(), null, 4);\n\t}\n\tstatic fromJSON(json) {\n\t\tassert(typeof json.id === 'string');\n\t\treturn new Serializable(null, json.id);\n\t}\n}\n","import assert from '../assert';\nimport PropertyModel from './propertyModel';\n\nexport default function PropertyType(propertyName, defaultValue, type, ...optionalParameters) {\n\ttype = type();\n\tlet validator = type.validators.default();\n\tlet description = '';\n\toptionalParameters.forEach(p => {\n\t\tif (typeof p === 'string')\n\t\t\tdescription = p;\n\t\telse if (p && p.validate)\n\t\t\tvalidator = p;\n\t\telse\n\t\t\tassert(false, 'invalid parameter ' + p);\n\t});\n\treturn new PropertyModel(propertyName, type, validator, defaultValue);\n};\n\nexport function addType({\n\tname = '',\n\tvalidators = { default: x => x }, // default must exist\n\ttoJSON = x => x,\n\tfromJSON = x => x\n}) {\n\tassert(name, 'name missing from property type');\n\tassert(typeof validators.default === 'function','default validator missing from property type: ' + name);\n\tassert(typeof toJSON === 'function', 'invalid toJSON for property type: ' + name);\n\tassert(typeof fromJSON === 'function', 'invalid fromJSON for property type: ' + name);\n\n\tlet type = {\n\t\tname,\n\t\tvalidators,\n\t\ttoJSON,\n\t\tfromJSON\n\t};\n\tlet createType = () => type;\n\t\n\tObject.keys(validators).forEach(validatorName => {\n\t\tcreateType[validatorName] = createValidator(validatorName, validators[validatorName]);\n\t\tvalidators[validatorName] = createType[validatorName];\n\t});\n\tPropertyType[name] = createType;\n}\n\nexport function createValidator(name, validatorFunction) {\n\tlet validator = function() {\n\t\tlet parameters = [...arguments];\n\t\treturn {\n\t\t\tvalidatorName: name,\n\t\t\tvalidatorParameters: parameters,\n\t\t\tvalidate: x => validatorFunction(x, ...parameters)\n\t\t};\n\t};\n\tvalidator.validatorName = name;\n\tvalidator.validate = validatorFunction;\n\treturn validator;\n}\n\naddType({\n\tname: 'float',\n\tvalidators: {\n\t\tdefault(x) {\n\t\t\tx = parseFloat(x);\n\t\t\tassert(!isNaN(x), 'invalid float: ' + x);\n\t\t\treturn x;\n\t\t},\n\t\t// PropertyType.float.range(min, max)\n\t\trange(x, min, max) {\n\t\t\tx = parseFloat(x);\n\t\t\tassert(!isNaN(x), 'invalid float: ' + x);\n\t\t\treturn Math.min(max, Math.max(min, x));\n\t\t}\n\t},\n\ttoJSON: x => x,\n\tfromJSON: x => x\n});\n\naddType({\n\tname: 'string',\n\tvalidators: {\n\t\tdefault: x => String(x)\n\t},\n\ttoJSON: x => x,\n\tfromJSON: x => x\n});\n","import Serializable from './serializable';\nimport assert from '../assert';\n\n// Entity of a property\nexport default class Property extends Serializable {\n\tconstructor(propertyModel) {\n\t\tsuper('prp');\n\t\tthis.model = propertyModel;\n\t\tthis.value = propertyModel.initialValue;\n\t}\n\ttoJSON() {\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tvalue: this.type.toJSON(this.value),\n\t\t\tmodelId: this.model.id\n\t\t});\n\t}\n\tdelete() {\n\t\tsuper.delete();\n\t\tthis.model = null;\n\t}\n}\nObject.defineProperty(Property.prototype, 'type', {\n\tget() {\n\t\treturn this.model.type;\n\t}\n});\nObject.defineProperty(Property.prototype, 'value', {\n\tset(newValue) {\n\t\tthis._value = this.model.validator.validate(newValue);\n\t},\n\tget() {\n\t\treturn this._value;\n\t}\n});\nObject.defineProperty(Property.prototype, 'initialValue', {\n\tget() {\n\t\treturn this.model.initialValue;\n\t}\n});\n","import Serializable from './serializable';\nimport assert from '../assert';\n\n// info about type, validator, validatorParameters, initialValue\n\nexport default class PropertyModel extends Serializable {\n\tconstructor(name, type, validator, initialValue) {\n\t\tassert(typeof name === 'string');\n\t\tassert(typeof type.name === 'string');\n\t\tassert(typeof validator.validate === 'function');\n\t\t\n\t\tsuper('pmo');\n\t\t\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.validator = validator;\n\t\tthis.initialValue = initialValue;\n\t}\n\ttoJSON() {\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tname: this.name,\n\t\t\ttype: this.type.name,\n\t\t\tvalidatorName: this.validator.validatorName,\n\t\t\tvalidatorParameters: this.validator.validatorParameters,\n\t\t\tinitialValue: this.type.toJSON(this.initialValue)\n\t\t});\n\t}\n\tdelete() {\n\t\tsuper.delete();\n\t\tthis.type = null;\n\t\tthis.validator = null;\n\t}\n}\n","import Serializable from './serializable';\nimport assert from '../assert';\nimport Property from './property';\nexport { default as Prop } from './propertyType';\n\nlet componentClasses = new Map();\n\n/*\nclass MyComponent extends Component {\n\tonPreInit() {\n\t\t// don't touch other components\n\t\tthis.myVariable = '\n\t}\n\tonInit() {\n\t\t// touch other components here\n\t}\n\tsleep() {\n\t\t// free your \n\t}\n}\n */\n\n// Instance of a component\nexport class Component extends Serializable {\n\tconstructor(componentModel, entity, env) {\n\t\tsuper('com');\n\t\tthis.entity = entity;\n\t\tthis.env = env;\n\t\tthis._properties = {};\n\t\tthis._componentModel = componentModel;\n\t\tthis.constructor.propertyModels.forEach(p => {\n\t\t\tthis._properties[p.name] = new Property(p);\n\t\t});\n\t}\n\tdelete() {\n\t\tassert(!this.env.entity.alive, 'Do not call Component.delete!');\n\t\tsuper.delete();\n\t}\n\t_privateInit() {\n\t\tthis.constructor.requirements.forEach(r => {\n\t\t\tthis[r] = this.entity.getComponent(r);\n\t\t\tassert(this[r], 'required component not found');\n\t\t});\n\t\n\t\ttry {\n\t\t\tif (typeof this.onPrivateInit === 'function')\n\t\t\t\tthis.onPrivateInit();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.name, 'onPrivateInit', e);\n\t\t}\n\t}\n\t_init() {\n\t\ttry {\n\t\t\tif (typeof this.onInit === 'function')\n\t\t\t\tthis.onInit();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.name, 'onInit', e);\n\t\t}\n\t}\n\t_sleep() {\n\t\ttry {\n\t\t\tif (typeof this.onSleep === 'function')\n\t\t\t\tthis.onSleep();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.name, 'onSleep', e);\n\t\t}\n\t}\n}\n\n/*\nReserved property names:\ndelete\nenv\nonPrivateInit\nonInit\nonSleep\n */\n\nComponent.register = function(componentClass, {\n\tproperties = [],\n\tcategory = 'Other',\n\trequirements = []\n} = {}) {\n\tassert(!componentClasses.has(componentClass.name), 'Duplicate component class ' + componentClass.name);\n\tcomponentClass.propertyModels = properties;\n\tcomponentClass.category = category;\n\tcomponentClass.requirements = requirements;\n\n\tpropertyModels.forEach(p => {\n\t\tObject.defineProperty(componentClass.prototype, p.name, {\n\t\t\tget() {\n\t\t\t\treturn this._properties[p.name].value;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis._properties[p.name].value = value;\n\t\t\t}\n\t\t});\n\t});\n\t\n\tcomponentClasses.set(componentClass.name, componentClass);\n};\n","import { Component, Prop } from '../core/component';\n\nconst properties = [\n\tProp('x', 0, Prop.float),\n\tProp('y', 0, Prop.float)\n];\n\nclass Position extends Component {\n\tconstructor() {\n\t\tsuper(...arguments);\n\t}\n}\n\nComponent.register(Position, {\n\tproperties,\n\tcategory: 'Core',\n\trequirements: []\n});\n"],"names":["assert","condition","message","Error","addSerializable","serializable","serializables","has","id","set","removeSerializable","delete","char","BASE_64_CHARACTERS","Math","random","CHAR_COUNT","createStringId","threeLetterPrefix","characters","let","i","PropertyType","propertyName","defaultValue","type","validator","validators","default","description","optionalParameters","forEach","p","validate","PropertyModel","addType","ref","x","name","toJSON","fromJSON","createType","Object","keys","validatorName","createValidator","validatorFunction","parameters","validatorParameters","Map","length","Serializable","threeLetterType","predefinedId","this","serializableManager.addSerializable","serializableManager.removeSerializable","toString","JSON","stringify","json","Property","propertyModel","super","model","value","initialValue","assign","modelId","defineProperty","prototype","get","newValue","_value","parseFloat","isNaN","range","min","max","String","componentClasses","Component","componentModel","entity","env","_properties","_componentModel","constructor","propertyModels","alive","_privateInit","requirements","r","getComponent","onPrivateInit","e","console","error","_init","onInit","_sleep","onSleep","register","componentClass","properties","category","const","Prop","float","Position","arguments"],"mappings":"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"}