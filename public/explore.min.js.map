{"version":3,"file":null,"sources":["../src/core/serializable.js","../src/core/serializableManager.js","../src/util/assert.js","../src/core/propertyType.js","../src/core/dataTypes.js","../src/feature/physics.js","../src/util/input.js","../src/util/net.js","../src/main.js","../src/core/property.js","../src/util/vector.js","../src/core/propertyOwner.js","../src/core/entity.js","../src/core/componentData.js","../src/core/prototype.js","../src/core/game.js","../src/util/environment.js","../src/core/scene.js","../src/core/component.js","../src/core/entityPrototype.js","../src/core/level.js","../src/components/Transform.js","../src/components/Test.js","../src/components/Mover.js","../src/components/Rect.js","../src/components/Spawner.js","../src/components/Trigger.js","../src/components/Physics.js"],"sourcesContent":["import assert from '../util/assert';\nimport * as serializableManager from './serializableManager';\n\nconst CHARACTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'; // 62 chars\nconst CHAR_COUNT = CHARACTERS.length;\n\nexport function createStringId(threeLetterPrefix = '???', characters = 16) {\n\tlet id = threeLetterPrefix;\n\tfor (let i = characters - 1; i >= 0; --i)\n\t\tid += CHARACTERS[Math.random() * CHAR_COUNT | 0];\n\treturn id;\n}\n\nlet serializableClasses = new Map();\n\nexport default class Serializable {\n\tconstructor(predefinedId = false, skipSerializableRegistering = false) {\n\t\tassert(this.threeLetterType, 'Forgot to Serializable.registerSerializable your class?');\n\t\tthis._children = new Map(); // threeLetterType -> array\n\t\tthis._listeners = [];\n\t\tthis._isInTree = this.isRoot;\n\t\tthis._state |= Serializable.STATE_CONSTRUCTOR;\n\t\tif (skipSerializableRegistering)\n\t\t\treturn;\n\t\tif (predefinedId) {\n\t\t\tthis._state |= Serializable.STATE_PREDEFINEDID;\n\t\t\tthis.id = predefinedId;\n\t\t} else {\n\t\t\tthis.id = createStringId(this.threeLetterType);\n\t\t}\n\t\tif (this.id.startsWith('?'))\n\t\t\tthrow new Error('?');\n\t\tserializableManager.addSerializable(this);\n\t}\n\tdelete() {\n\t\tif (this._parent) {\n\t\t\tthis._parent.deleteChild(this);\n\t\t\treturn false;\n\t\t}\n\t\tthis.deleteChildren();\n\t\tthis._alive = false;\n\t\tthis._isInTree = false;\n\t\tthis._listeners.length = 0;\n\t\tserializableManager.removeSerializable(this.id);\n\t\tthis._state |= Serializable.STATE_DESTROY;\n\t\treturn true;\n\t}\n\tdeleteChildren() {\n\t\tif (this._children.size) {\n\t\t\tthis._children.forEach(array => {\n\t\t\t\tarray.forEach(child => {\n\t\t\t\t\tchild._parent = null;\n\t\t\t\t\tchild.delete();\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis._children.clear();\n\n\t\t\tif (this._parent) {\n\t\t\t\tserializableManager.addChange(serializableManager.changeType.deleteAllChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\t// this is called right after constructor\n\tinitWithChildren(children = []) {\n\t\tassert(!(this._state & Serializable.STATE_INIT), 'init already done');\n\t\tthis._state |= Serializable.STATE_INIT;\n\t\tif (children.length > 0)\n\t\t\tthis.addChildren(children);\n\t\treturn this;\n\t}\n\taddChildren(children) {\n\t\tfor (let i = 0; i < children.length; i++)\n\t\t\tthis.addChild(children[i]);\n\t\treturn this;\n\t}\n\taddChild(child) {\n\t\t\n\t\tthis._addChild(child);\n\t\t\n\t\t\n\t\tthis._state |= Serializable.STATE_ADDCHILD;\n\t\t\n\t\tif (this._isInTree)\n\t\t\tserializableManager.addChange(serializableManager.changeType.addSerializableToTree, child);\n\t\treturn this;\n\t}\n\t_addChild(child) {\n\t\tassert(child._parent === null);\n\t\t\n\t\tlet array = this._children.get(child.threeLetterType);\n\t\tif (array === undefined) {\n\t\t\tarray = [];\n\t\t\tthis._children.set(child.threeLetterType, array);\n\t\t}\n\t\tarray.push(child);\n\t\tchild._parent = this;\n\t\tchild._state |= Serializable.STATE_ADDPARENT;\n\t\tchild.setInTreeStatus(this._isInTree);\n\t\t\n\t\treturn this;\n\t}\n\tfindChild(threeLetterType, filterFunction) {\n\t\tlet array = this._children.get(threeLetterType);\n\t\tif (!array) return null;\n\t\tif (filterFunction)\n\t\t\treturn array.find(filterFunction) || null;\n\t\telse\n\t\t\treturn array[0];\n\t}\n\tfindParent(threeLetterType, filterFunction = null) {\n\t\tlet parent = this;\n\t\twhile (parent) {\n\t\t\tif (parent.threeLetterType === threeLetterType && (!filterFunction || filterFunction(parent)))\n\t\t\t\treturn parent;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn null;\n\t}\n\tgetRoot() {\n\t\tlet element = this;\n\t\twhile (element._parent)\n\t\t\telement = element._parent;\n\t\treturn element;\n\t}\n\t// idx is optional\n\tdeleteChild(child, idx) {\n\t\tserializableManager.addChange(serializableManager.changeType.deleteSerializable, child);\n\t\tthis._detachChild(child, idx);\n\t\tchild.delete();\n\t\treturn this;\n\t}\n\t// idx is optional\n\t_detachChild(child, idx = 0) {\n\t\tlet array = this._children.get(child.threeLetterType);\n\t\tassert(array, 'child not found');\n\t\tif (array[idx] !== child)\n\t\t\tidx = array.indexOf(child);\n\t\tassert(idx >= 0, 'child not found');\n\t\tarray.splice(idx, 1);\n\t\tif (array.length === 0)\n\t\t\tthis._children.delete(child.threeLetterType);\n\t\tchild._parent = null;\n\t\tchild.setInTreeStatus(false);\n\t\t\n\t\treturn this;\n\t}\n\tforEachChild(threeLetterType = null, callback, deep = false) {\n\t\tfunction processArray(array) {\n\t\t\tarray.forEach(child => {\n\t\t\t\tcallback(child);\n\t\t\t\tdeep && child.forEachChild(threeLetterType, callback, true);\n\t\t\t});\n\t\t}\n\t\tif (threeLetterType) {\n\t\t\tprocessArray(this._children.get(threeLetterType) || []);\n\t\t} else {\n\t\t\tthis._children.forEach(processArray);\n\t\t}\n\t\treturn this;\n\t}\n\tmove(newParent) {\n\t\t\n\t\tnewParent._addChild(this._detach());\n\n\t\tserializableManager.addChange(serializableManager.changeType.move, this);\n\t\t\n\t\treturn this;\n\t}\n\t_detach() {\n\t\tthis._parent && this._parent._detachChild(this);\n\t\treturn this;\n\t}\n\tgetParent() {\n\t\treturn this._parent || null;\n\t}\n\tgetChildren(threeLetterType) {\n\t\treturn this._children.get(threeLetterType) || [];\n\t}\n\ttoJSON() {\n\t\tlet json = {\n\t\t\tid: this.id\n\t\t};\n\t\tif (this._children.size > 0) {\n\t\t\tlet arrays = [];\n\t\t\t// prototypes must come before a level\n\t\t\tArray.from(this._children.keys()).sort((a, b) => a === 'prt' ? -1 : 1)\n\t\t\t\t.forEach(key => arrays.push(this._children.get(key)));\n\t\t\tjson.c = [].concat(...arrays).map(child => child.toJSON());\n\t\t}\n\t\treturn json;\n\t}\n\ttoString() {\n\t\treturn JSON.stringify(this.toJSON(), null, 4);\n\t}\n\tclone() {\n\t\tlet obj = new this.constructor();\n\t\tlet children = [];\n\t\tthis.forEachChild(null, child => {\n\t\t\tchildren.push(child.clone());\n\t\t});\n\t\tobj.initWithChildren(children);\n\t\tthis._state |= Serializable.STATE_CLONE;\n\t\treturn obj;\n\t}\n\tlisten(event, callback) {\n\t\tif (!this._listeners.hasOwnProperty(event)) {\n\t\t\tthis._listeners[event] = [];\n\t\t}\n\t\tthis._listeners[event].unshift(callback);\n\t\treturn () => {\n\t\t\tvar index = this._listeners[event].indexOf(callback);\n\t\t\tthis._listeners[event].splice(index, 1);\n\t\t};\n\t}\n\tdispatch(event, ...args) {\n\t\tif (this._listeners.hasOwnProperty(event)) {\n\t\t\tfor (var i = this._listeners[event].length - 1; i >= 0; --i) {\n\t\t\t\ttry {\n\t\t\t\t\tthis._listeners[event][i].apply(null, args);\n\t\t\t\t} catch(e) {\n\t\t\t\t\tconsole.error(`Event ${event} listener crashed.`, this._listeners[event][i], e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\thasDescendant(child) {\n\t\tif (!child) return false;\n\t\tlet parent = child._parent;\n\t\twhile (parent) {\n\t\t\tif (parent === this) return true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t}\n\tsetInTreeStatus(isInTree) {\n\t\tif (this._isInTree === isInTree)\n\t\t\treturn;\n\t\t\n\t\tthis._isInTree = isInTree;\n\t\tthis._children.forEach(array => {\n\t\t\tarray.forEach(child => child.setInTreeStatus(isInTree));\n\t\t});\n\t}\n\tstatic fromJSON(json) {\n\t\tassert(typeof json.id === 'string' && json.id.length > 5, 'Invalid id.');\n\t\tlet fromJSON = serializableClasses.get(json.id.substring(0, 3));\n\t\tassert(fromJSON);\n\t\tlet obj;\n\t\ttry {\n\t\t\tobj = fromJSON(json);\n\t\t} catch(e) {\n\t\t\tif (!window.force)\n\t\t\t\tdebugger; // Type 'force = true' in console to ignore failed imports.\n\t\t\t\n\t\t\tif (!window.force)\n\t\t\t\tthrow new Error();\n\t\t\treturn null;\n\t\t}\n\t\tlet children = json.c ? json.c.map(child => Serializable.fromJSON(child)).filter(Boolean) : [];\n\t\tif (obj._state & Serializable.STATE_INIT)\n\t\t\tobj.addChildren(children);\n\t\telse\n\t\t\tobj.initWithChildren(children);\n\t\tobj._state |= Serializable.STATE_FROMJSON;\n\t\treturn obj;\n\t}\n\tstatic registerSerializable(Class, threeLetterType, fromJSON = null) {\n\t\tClass.prototype.threeLetterType = threeLetterType;\n\t\tassert(typeof threeLetterType === 'string' && threeLetterType.length === 3);\n\t\tif (!fromJSON)\n\t\t\tfromJSON = json => new Class(json.id);\n\t\tserializableClasses.set(threeLetterType, fromJSON);\n\t}\n}\n\nSerializable.prototype._parent = null;\nSerializable.prototype._alive = true;\nSerializable.prototype._state = 0;\n\nSerializable.STATE_CONSTRUCTOR = 1;\nSerializable.STATE_INIT = 2;\nSerializable.STATE_ADDCHILD = 4;\nSerializable.STATE_ADDPARENT = 8;\nSerializable.STATE_CLONE = 16;\nSerializable.STATE_DESTROY = 32;\nSerializable.STATE_FROMJSON = 64;\nSerializable.STATE_PREDEFINEDID = 128;\n\nSerializable.prototype.isRoot = false; // If this should be a root node\nObject.defineProperty(Serializable.prototype, 'debug', {\n\tget() {\n\t\tlet info = this.threeLetterType;\n\n\t\tthis._children.forEach((value, key) => {\n\t\t\tinfo += '|';\n\t\t\tif (key === 'prp')\n\t\t\t\tinfo += this.getChildren('prp').map(p => `${p.name}=${p._value}`).join(', ');\n\t\t\telse\n\t\t\t\tinfo += `${key}(${value.length})`;\n\t\t});\n\t\t\n\t\tinfo += '|state: ';\n\t\t\n\t\tlet states = [];\n\t\tlet logState = (state, stateString) => {\n\t\t\tif (this._state & state)\n\t\t\t\tstates.push(stateString);\n\t\t};\n\t\t\n\t\tlogState(Serializable.STATE_CONSTRUCTOR, 'constructor');\n\t\tlogState(Serializable.STATE_INIT, 'init');\n\t\tlogState(Serializable.STATE_ADDCHILD, 'add child');\n\t\tlogState(Serializable.STATE_ADDPARENT, 'add parent');\n\t\tlogState(Serializable.STATE_CLONE, 'clone');\n\t\tlogState(Serializable.STATE_DESTROY, 'destroy');\n\t\tlogState(Serializable.STATE_FROMJSON, 'from json');\n\t\tlogState(Serializable.STATE_PREDEFINEDID, 'predefined id');\n\t\t\n\t\tinfo += states.join(', ');\n\t\t\n\t\treturn info;\n\t}\n});\nObject.defineProperty(Serializable.prototype, 'debugChildren', {\n\tget() {\n\t\tlet c = [];\n\t\tthis._children.forEach((value, key) => {\n\t\t\tc = c.concat(value);\n\t\t});\n\t\t\n\t\tlet children = [];\n\t\t\n\t\tfunction createDebugObject(type) {\n\t\t\tif (type === 'gam') return new function Game(){};\n\t\t\tif (type === 'sce') return new function Scene(){};\n\t\t\tif (type === 'prt') return new function Prototype(){};\n\t\t\tif (type === 'prp') return new function Property(){};\n\t\t\tif (type === 'cda') return new function ComponentData(){};\n\t\t\tif (type === 'com') return new function Component(){};\n\t\t\tif (type === 'epr') return new function EntityPrototype(){};\n\t\t\tif (type === 'ent') return new function Entity(){};\n\t\t\tif (type === 'lvl') return new function Level(){};\n\t\t\treturn new function Other(){};\n\t\t}\n\n\t\tc.forEach(child => {\n\t\t\tlet obj = createDebugObject(child.threeLetterType);\n\t\t\t\n\t\t\tobj.debug = child.debug;\n\t\t\tobj.ref = child;\n\t\t\tlet c = child.debugChildArray;\n\t\t\tif (c && c.length > 0)\n\t\t\t\tobj.children = c;\n\t\t\tchildren.push(obj);\n\t\t});\n\n\t\treturn children;\n\t}\n});\n","import assert from '../util/assert';\nimport Serializable from './serializable';\n\nexport let serializables = {};\n\nlet DEBUG_CHANGES = 0;\n\nexport function addSerializable(serializable) {\n\tassert(serializables[serializable.id] === undefined, `Serializable id clash ${serializable.id}`);\n\tserializables[serializable.id] = serializable;\n}\n\nexport function getSerializable(id) {\n\treturn serializables[id] || null;\n}\n\nexport function hasSerializable(id) {\n\treturn Boolean(serializables[id]);\n}\n\nexport function removeSerializable(id) {\n\tif (serializables[id])\n\t\tdelete serializables[id];\n\telse\n\t\tthrow new Error('Serializable not found!');\n}\n\n// reference parameters are not sent over net. they are helpers in local game instance\nexport let changeType = {\n\taddSerializableToTree: 'a', // parentId, reference\n\tsetPropertyValue: 's', // id, value\n\tdeleteSerializable: 'd', // id\n\tmove: 'm', // id, parentId\n\tdeleteAllChildren: 'c', // id\n};\nlet keyToShortKey = {\n\tid: 'i', // obj.id\n\ttype: 't', // changeType.*\n\tvalue: 'v', // value after toJSON\n\tparentId: 'p' // obj._parent.id\n};\nlet shortKeyToKey = {};\nObject.keys(keyToShortKey).forEach(k => {\n\tshortKeyToKey[keyToShortKey[k]] = k;\n});\n\nlet origin;\nlet previousVisualOrigin;\nfunction resetOrigin() {\n\torigin = null;\n}\nexport function getChangeOrigin() {\n\treturn origin;\n}\nexport function setChangeOrigin(_origin) {\n\tif (_origin !== origin) {\n\t\torigin = _origin;\n\t\tif (DEBUG_CHANGES && _origin && _origin !== previousVisualOrigin) {\n\t\t\tconsole.log('origin', previousVisualOrigin);\n\t\t\tpreviousVisualOrigin = _origin;\n\t\t}\n\t\tsetTimeout(resetOrigin);\n\t}\n}\n\nlet externalChange = false;\nexport function addChange(type, reference) {\n\tassert(origin, 'Change without origin!');\n\tif (!reference.id) return;\n\t\n\tlet change = {\n\t\ttype,\n\t\treference,\n\t\tid: reference.id,\n\t\texternal: externalChange,\n\t\torigin\n\t};\n\tif (type === changeType.setPropertyValue) {\n\t\tchange.value = reference._value;\n\t} else if (type === changeType.move) {\n\t\tchange.parent = reference._parent;\n\t} else if (type === changeType.addSerializableToTree) {\n\t\tchange.parent = reference._parent;\n\t\tdelete change.id;\n\t}\n\t\n\tif (DEBUG_CHANGES)\n\t\tconsole.log('change', change);\n\t\n\tlet previousOrigin = origin;\n\tlisteners.forEach(l => l(change));\n\tif (origin !== previousOrigin) {\n\t\tif (DEBUG_CHANGES)\n\t\t\tconsole.log('origin changed from', previousOrigin, 'to', origin && origin.constructor || origin);\n\t\torigin = previousOrigin;\n\t}\n}\n\nexport function executeExternal(callback) {\n\tsetChangeOrigin('external');\n\tif (externalChange) return callback();\n\texternalChange = true;\n\tcallback();\n\texternalChange = false;\n}\n\nlet listeners = [];\n\nexport function addChangeListener(callback) {\n\tassert(typeof callback === 'function');\n\tlisteners.push(callback);\n}\n\nexport function packChange(change) {\n\tif (change.packedChange)\n\t\treturn change.packedChange; // optimization\n\t\n\tlet packed = {};\n\ttry {\n\t\tif (change.parent)\n\t\t\tchange.parentId = change.parent.id;\n\t\t\n\t\tif (change.type === changeType.addSerializableToTree) {\n\t\t\tif (change.reference) {\n\t\t\t\tchange.value = change.reference.toJSON();\n\t\t\t} else if (change.value) {\n\t\t\t\t// change.value = change.value; // no changes\n\t\t\t} else {\n\t\t\t\tassert(false, 'invalid change of type addSerializableToTree', change);\n\t\t\t}\n\t\t} else if (change.value) {\n\t\t\tchange.value = change.reference.propertyType.type.toJSON(change.value);\n\t\t}\n\n\t\tObject.keys(keyToShortKey).forEach(key => {\n\t\t\tif (change[key]) {\n\t\t\t\tif (key === 'type' && change[key] === changeType.setPropertyValue) return; // optimize most common type\n\t\t\t\tpacked[keyToShortKey[key]] = change[key];\n\t\t\t}\n\t\t});\n\t} catch(e) {\n\t\tconsole.log('PACK ERROR', e);\n\t}\n\treturn packed;\n}\n\nexport function unpackChange(packedChange) {\n\tlet change = {\n\t\tpackedChange // optimization\n\t};\n\tObject.keys(packedChange).forEach(shortKey => {\n\t\tlet key = shortKeyToKey[shortKey];\n\t\tchange[key] = packedChange[shortKey];\n\t});\n\tif (!change.type)\n\t\tchange.type = changeType.setPropertyValue;\n\t\n\tif (change.type === changeType.addSerializableToTree) {\n\t\t// reference does not exist because it has not been created yet\n\t\tchange.id = change.value.id;\n\t} else {\n\t\tchange.reference = getSerializable(change.id);\n\t\tif (change.reference) {\n\t\t\tchange.id = change.reference.id;\n\t\t} else {\n\t\t\tconsole.error('received a change with unknown id', change, 'packed:', packedChange);\n\t\t\treturn null;\n\t\t}\n\t}\n\t\n\tif (change.parentId)\n\t\tchange.parent = getSerializable(change.parentId);\n\treturn change;\n}\n\nexport function executeChange(change) {\n\tlet newScene;\n\t\n\texecuteExternal(() => {\n\t\tconsole.log('execute change', change.type, change.id || change.value);\n\t\tif (change.type === changeType.setPropertyValue) {\n\t\t\tchange.reference.value = change.reference.propertyType.type.fromJSON(change.value);\n\t\t} else if (change.type === changeType.addSerializableToTree) {\n\t\t\tif (change.parent) {\n\t\t\t\tlet obj = Serializable.fromJSON(change.value);\n\t\t\t\tchange.parent.addChild(obj);\n\t\t\t\tif (obj.threeLetterType === 'ent') {\n\t\t\t\t\tobj.localMaster = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet obj = Serializable.fromJSON(change.value); // Scene does not need a parent\n\t\t\t\tif (obj.threeLetterType === 'sce')\n\t\t\t\t\tnewScene = obj;\n\t\t\t}\n\t\t} else if (change.type === changeType.deleteAllChildren) {\n\t\t\tchange.reference.deleteChildren();\n\t\t} else if (change.type === changeType.deleteSerializable) {\n\t\t\tchange.reference.delete();\n\t\t} else if (change.type === changeType.move) {\n\t\t\tchange.reference.move(change.parent);\n\t\t}\n\t});\n\t\n\tif (newScene)\n\t\tnewScene.play();\n}\n","import { getChangeOrigin } from '../core/serializableManager';\nexport default function assert(condition, message) {\n\tif (!condition) {\n\t\tconsole.log('Assert', message, new Error().stack, '\\norigin', getChangeOrigin());\n\t\tdebugger;\n\t\tthrow new Error(message);\n\t}\n}\n","import assert from '../util/assert';\nimport Property from './property';\n\n// info about type, validator, validatorParameters, initialValue\n\n\n\nclass PropertyType {\n\tconstructor(name, type, validator, initialValue, description, flags = [], visibleIf) {\n\t\tassert(typeof name === 'string');\n\t\tassert(name[0] >= 'a' && name[0] <= 'z', 'Name of a property must start with lower case letter.');\n\t\tassert(type && typeof type.name === 'string');\n\t\tassert(validator && typeof validator.validate === 'function');\n\t\t\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.validator = validator;\n\t\tthis.initialValue = initialValue;\n\t\tthis.description = description;\n\t\tthis.visibleIf = visibleIf;\n\t\tthis.flags = {};\n\t\tflags.forEach(f => this.flags[f.type] = f);\n\t}\n\tgetFlag(flag) {\n\t\treturn this.flags[flag.type];\n\t}\n\tcreateProperty({ value, predefinedId, skipSerializableRegistering = false } = {}) {\n\t\treturn new Property({\n\t\t\tpropertyType: this,\n\t\t\tvalue,\n\t\t\tpredefinedId,\n\t\t\tname: this.name,\n\t\t\tskipSerializableRegistering\n\t\t});\n\t}\n}\n\n/*\n\tBeautiful way of creating property types\n\t\n\toptionalParameters:\n\t\tdescription: 'Example',\n\t\tvalidator: PropertyType.\n */\nexport default function createPropertyType(propertyName, defaultValue, type, ...optionalParameters) {\n\ttype = type();\n\tlet validator = type.validators.default();\n\tlet description = '';\n\tlet flags = [];\n\tlet visibleIf = null;\n\toptionalParameters.forEach((p, idx) => {\n\t\tif (typeof p === 'string')\n\t\t\tdescription = p;\n\t\telse if (p && p.validate)\n\t\t\tvalidator = p;\n\t\telse if (p && p.isFlag)\n\t\t\tflags.push(p);\n\t\telse if (p && p.visibleIf)\n\t\t\tvisibleIf = p;\n\t\telse\n\t\t\tassert(false, 'invalid parameter ' + p + ' idx ' + idx);\n\t});\n\treturn new PropertyType(propertyName, type, validator, defaultValue, description, flags, visibleIf);\n};\n\nexport let dataType = createPropertyType;\n\ndataType.visibleIf = function(propertyName, value) {\n\tassert(typeof propertyName === 'string' && propertyName.length);\n\tassert(typeof value !== 'undefined');\n\treturn {\n\t\tvisibleIf: true,\n\t\tpropertyName,\n\t\tvalue\n\t};\n};\n\nfunction createFlag(type, func = {}) {\n\tfunc.isFlag = true;\n\tfunc.type = type;\n\treturn func;\n}\n\ncreatePropertyType.flagDegreesInEditor = createFlag('degreesInEditor');\n\nexport function createDataType({\n\tname = '',\n\tvalidators = { default: x => x }, // default must exist. if value is a reference(object), validator should copy the value.\n\ttoJSON = x => x,\n\tfromJSON = x => x,\n\tclone = x => x\n}) {\n\tassert(name, 'name missing from property type');\n\tassert(typeof validators.default === 'function','default validator missing from property type: ' + name);\n\tassert(typeof toJSON === 'function', 'invalid toJSON for property type: ' + name);\n\tassert(typeof fromJSON === 'function', 'invalid fromJSON for property type: ' + name);\n\n\tlet type = {\n\t\tname,\n\t\tvalidators,\n\t\ttoJSON,\n\t\tfromJSON,\n\t\tclone\n\t};\n\tlet createType = () => type;\n\n\tObject.keys(validators).forEach(validatorName => {\n\t\tcreateType[validatorName] = createValidator(validatorName, validators[validatorName]);\n\t\tvalidators[validatorName] = createType[validatorName];\n\t});\n\treturn createType;\n}\n\nfunction createValidator(name, validatorFunction) {\n\tlet validator = function() {\n\t\tlet parameters = [...arguments];\n\t\treturn {\n\t\t\tvalidatorName: name,\n\t\t\tvalidatorParameters: parameters,\n\t\t\tvalidate: x => validatorFunction(x, ...parameters),\n\t\t\tparameters\n\t\t};\n\t};\n\tvalidator.validatorName = name;\n\tvalidator.validate = validatorFunction;\n\treturn validator;\n}\n","import assert from '../util/assert';\nimport { createDataType, dataType } from './propertyType';\nimport Vector from '../util/vector';\n\nfunction validateFloat(val) {\n\tif (isNaN(val) || val === Infinity || val === -Infinity)\n\t\tthrow new Error('Invalid float: ' + val);\n}\n\nconst FLOAT_JSON_PRECISION = 4;\nconst FLOAT_JSON_PRECISION_MULTIPLIER = Math.pow(10, FLOAT_JSON_PRECISION);\nconst FLOAT_DELTA = 0.0000001;\n\ndataType.float = createDataType({\n\tname: 'float',\n\tvalidators: {\n\t\tdefault(x) {\n\t\t\tx = parseFloat(x);\n\t\t\tvalidateFloat(x);\n\t\t\treturn x;\n\t\t},\n\t\t// PropertyType.float.range(min, max)\n\t\trange(x, min, max) {\n\t\t\tx = parseFloat(x);\n\t\t\tvalidateFloat(x);\n\t\t\treturn Math.min(max, Math.max(min, x));\n\t\t},\n\t\tmodulo(x, min, max) {\n\t\t\tx = parseFloat(x);\n\t\t\tvalidateFloat(x);\n\t\t\t\n\t\t\tlet range = max - min;\n\t\t\t\n\t\t\tif (x < min) {\n\t\t\t\tx += (((min - x) / range | 0) + 1) * range;\n\t\t\t} else if (x > max - FLOAT_DELTA) {\n\t\t\t\tx -= (((x - max) / range | 0) + 1) * range;\n\t\t\t}\n\t\t\t\n\t\t\treturn x;\n\t\t}\n\t},\n\ttoJSON: x => Math.round(x*FLOAT_JSON_PRECISION_MULTIPLIER)/FLOAT_JSON_PRECISION_MULTIPLIER,\n\tfromJSON: x => x\n});\ndataType.int = createDataType({\n\tname: 'int',\n\tvalidators: {\n\t\tdefault(x) {\n\t\t\tx = parseInt(x);\n\t\t\tvalidateFloat(x);\n\t\t\treturn x;\n\t\t},\n\t\t// PropertyType.float.range(min, max)\n\t\trange(x, min, max) {\n\t\t\tx = parseInt(x);\n\t\t\tvalidateFloat(x);\n\t\t\treturn Math.min(max, Math.max(min, x));\n\t\t}\n\t},\n\ttoJSON: x => x,\n\tfromJSON: x => x\n});\n\ndataType.vector = createDataType({\n\tname: 'vector',\n\tvalidators: {\n\t\tdefault(vec) {\n\t\t\tif (!(vec instanceof Vector))\n\t\t\t\tthrow new Error();\n\t\t\tvec = vec.clone();\n\t\t\tvec.x = parseFloat(vec.x);\n\t\t\tvec.y = parseFloat(vec.y);\n\t\t\tvalidateFloat(vec.x);\n\t\t\tvalidateFloat(vec.y);\n\t\t\treturn vec;\n\t\t}\n\t},\n\ttoJSON: vec => ({\n\t\tx: Math.round(vec.x*FLOAT_JSON_PRECISION_MULTIPLIER)/FLOAT_JSON_PRECISION_MULTIPLIER,\n\t\ty: Math.round(vec.y*FLOAT_JSON_PRECISION_MULTIPLIER)/FLOAT_JSON_PRECISION_MULTIPLIER\n\t}),\n\tfromJSON: vec => Vector.fromObject(vec),\n\tclone: vec => vec.clone()\n});\n\ndataType.string = createDataType({\n\tname: 'string',\n\tvalidators: {\n\t\tdefault: x => x ? String(x) : ''\n\t},\n\ttoJSON: x => x,\n\tfromJSON: x => x\n});\n\ndataType.bool = createDataType({\n\tname: 'bool',\n\tvalidators: {\n\t\tdefault(x) {\n\t\t\tif (typeof x !== 'boolean')\n\t\t\t\tthrow new Error();\n\t\t\treturn x;\n\t\t}\n\t},\n\ttoJSON: x => x ? 1 : 0,\n\tfromJSON: x => !!x\n});\n\ndataType.enum = createDataType({\n\tname: 'enum',\n\tvalidators: {\n\t\tdefault() {\n\t\t\tassert(false, `also specify enum values with Prop.enum.values('value1', 'value2', ...)`);\n\t\t},\n\t\tvalues(x, ...values) {\n\t\t\tif (!Array.isArray(values))\n\t\t\t\tthrow new Error();\n\t\t\tif (typeof x !== 'string')\n\t\t\t\tthrow new Error('val should be string');\n\t\t\tif (values.indexOf(x) < 0)\n\t\t\t\tthrow new Error(`value ${x} not in enum: [${values}]`);\n\t\t\treturn x;\n\t\t}\n\t},\n\ttoJSON: x => x,\n\tfromJSON: x => x\n});\n","import assert from '../util/assert';\nimport { isClient } from '../util/environment';\n\nlet Matter;\nif (isClient)\n\tMatter = window.Matter;\nelse\n\tMatter = require('../src/external/matter.min'); // from dist folder\n\nexport default Matter;\n\nexport function createWorld(owner, options) {\n\tassert(!owner._matterEngine);\n\towner._matterEngine = Matter.Engine.create(options);\n}\nexport function updateWorld(owner, dt) {\n\tMatter.Engine.update(owner._matterEngine, dt * 1000, dt / (owner._matterPreviousDt || dt));\n\towner._matterPreviousDt = dt;\n}\nexport function deleteWorld(owner) {\n\tif (owner._matterEngine)\n\t\tMatter.Engine.clear(owner._matterEngine);\n\towner._matterEngine = null;\n\tdelete owner._matterPreviousDt;\n}\nexport function addBody(owner, body) {\n\tMatter.Composite.add(owner._matterEngine.world, body);\n}\nexport function deleteBody(owner, body) {\n\tMatter.Composite.remove(owner._matterEngine.world, body, false);\n}\n","import Vector from '../util/vector';\n\nexport function keyPressed(key) {\n\treturn keys[key] || false;\n}\n\nexport function listenKeyDown(handler) {\n\tkeyDownListeners.push(handler);\n\treturn () => keyDownListeners.splice(keyDownListeners.indexOf(handler), 1);\n}\nexport function listenKeyUp(handler) {\n\tkeyUpListeners.push(handler);\n\treturn () => keyUpListeners.splice(keyUpListeners.indexOf(handler), 1);\n}\n\nexport const key = {\n\tleft: 37,\n\tright: 39,\n\tup: 38,\n\tdown: 40,\n\tctrl: 17,\n\tappleLeft: 91,\n\tappleRight: 93,\n\talt: 18,\n\tshift: 16,\n\tspace: 32,\n\ta: 65,\n\tb: 66,\n\tc: 67,\n\td: 68,\n\te: 69,\n\tf: 70,\n\tg: 71,\n\th: 72,\n\ti: 73,\n\tj: 74,\n\tk: 75,\n\tl: 76,\n\tm: 77,\n\tn: 78,\n\to: 79,\n\tp: 80,\n\tq: 81,\n\tr: 82,\n\ts: 83,\n\tt: 84,\n\tu: 85,\n\tv: 86,\n\tw: 87,\n\tx: 88,\n\ty: 89,\n\tz: 90,\n\t'0': 48,\n\t'1': 49,\n\t'9': 57,\n\tbackspace: 8,\n\tenter: 13,\n\tesc: 27\n};\n\nexport function listenMouseMove(element, handler) {\n\telement.addEventListener('mousemove', event => {\n\t\tlet x = event.pageX;\n\t\tlet y = event.pageY;\n\t\tlet el = element;\n\t\twhile( el != null ) {\n\t\t\tx -= el.offsetLeft;\n\t\t\ty -= el.offsetTop;\n\t\t\tel = el.offsetParent;\n\t\t}\n\t\t\n\t\telement._mx = x;\n\t\telement._my = y;\n\t\thandler(new Vector(x, y));\n\t});\n}\n\nexport function listenMouseDown(element, handler) {\n\telement.addEventListener('mousedown', event => {\n\t\tif (typeof element._mx === 'number')\n\t\t\thandler(new Vector(element._mx, element._my));\n\t\telse\n\t\t\thandler();\n\t});\n}\nexport function listenMouseUp(element, handler) {\n\telement.addEventListener('mouseup', event => {\n\t\tif (typeof element._mx === 'number')\n\t\t\thandler(new Vector(element._mx, element._my));\n\t\telse\n\t\t\thandler();\n\t});\n}\n\n////////////////////////////////////\n\n\nlet keys = {};\nlet keyDownListeners = [];\nlet keyUpListeners = [];\n\n\nif (typeof window !== 'undefined') {\n\n\twindow.onkeydown = event => {\n\t\tlet keyCode = event.which || event.keyCode;\n\n\t\tif (document.activeElement.nodeName.toLowerCase() == \"input\" && keyCode !== key.esc)\n\t\t\treturn;\n\n\t\tkeys[keyCode] = true;\n\t\tkeyDownListeners.forEach(l => l(keyCode));\n\t};\n\twindow.onkeyup = event => {\n\t\tlet key = event.which || event.keyCode;\n\t\tkeys[key] = false;\n\t\tkeyUpListeners.forEach(l => l(key));\n\t};\n}\n","import { addChangeListener, packChange, unpackChange, executeChange, executeExternal, changeType } from '../core/serializableManager'\nimport Serializable from '../core/serializable';\nimport { game } from '../core/game';\nimport { isClient } from './environment';\n\nimport { lzw_decode, lzw_encode } from './compression';\n\nlet networkEnabled = false;\nexport function setNetworkEnabled(enabled = true) {\n\tnetworkEnabled = enabled;\n}\n\nlet shouldStartSceneWhenGameLoaded = false;\nexport function startSceneWhenGameLoaded() {\n\tshouldStartSceneWhenGameLoaded = true;\n}\n\nlet socket;\n\nfunction isInSceneTree(change) {\n\treturn change.reference.getRoot().threeLetterType === 'sce';\n}\n\nfunction getQueryVariable(variable) {\n\tvar query = window.location.search.substring(1);\n\tvar vars = query.split('&');\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=');\n\t\tif (decodeURIComponent(pair[0]) == variable) {\n\t\t\treturn decodeURIComponent(pair[1]);\n\t\t}\n\t}\n\tconsole.log('Query variable %s not found', variable);\n}\n\nfunction tryToLoad() {\n\tif (!window.io) return setTimeout(tryToLoad, 10);\n\t\n\tsocket = io();\n\t\n\tlet changes = [];\n\tlet valueChanges = {}; // id => change\n\n\taddChangeListener(change => {\n\t\tif (change.origin === 'external' || !networkEnabled)\n\t\t\treturn; // Don't send a change that you have received.\n\t\t\n\t\tif (isInSceneTree(change)) // Don't sync scene\n\t\t\treturn;\n\t\t\n\t\tif (change.type === changeType.setPropertyValue) {\n\t\t\tlet duplicateChange = valueChanges[change.id];\n\t\t\tif (duplicateChange) {\n\t\t\t\tchanges.splice(changes.indexOf(duplicateChange), 1);\n\t\t\t}\n\t\t\tvalueChanges[change.id] = change;\n\t\t}\n\t\tchanges.push(change);\n\t});\n\t\n\tsetInterval(() => {\n\t\tif (changes.length === 0)\n\t\t\treturn;\n\t\tlet packedChanges = changes.map(packChange);\n\t\tchanges.length = 0;\n\t\tvalueChanges = {};\n\t\tconsole.log('sending', packedChanges);\n\t\tsocket.emit('c', packedChanges);\n\t}, 100);\n\n\tsocket.on('c', packedChanges => {\n\t\tconsole.log('RECEIVE,', networkEnabled);\n\t\tif (!networkEnabled)\n\t\t\treturn;\n\t\t\n\t\tconsole.log('received', packedChanges);\n\t\tpackedChanges.forEach(change => {\n\t\t\tchange = unpackChange(change);\n\t\t\tif (change) {\n\t\t\t\texecuteChange(change);\n\t\t\t}\n\t\t});\n\t});\n\t\n\tsocket.on('requestGameId', serverStartTime => {\n\t\tif (game)\n\t\t\tsocket.emit('gameId', game.id);\n\t});\n\n\tlet clientStartTime = Date.now();\n\tsocket.on('refreshIfOlderThan', requiredClientTime => {\n\t\tif (clientStartTime < requiredClientTime)\n\t\t\tlocation.reload();\n\t});\n\t\n\tsocket.on('gameData', gameData => {\n\t\tconsole.log('gameData', gameData);\n\t\texecuteExternal(() => {\n\t\t\tSerializable.fromJSON(gameData);\n\t\t});\n\t\tlocalStorage.anotherGameId = gameData.id;\n\t\t// location.replace(`${location.origin}${location.pathname}?gameId=${gameData.id}`);\n\t\thistory.replaceState({}, null, `?gameId=${gameData.id}`);\n\t\tconsole.log('replaced with', `${location.origin}${location.pathname}?gameId=${gameData.id}`);\n\t\t\n\t\tif (shouldStartSceneWhenGameLoaded) {\n\t\t\tlet scene = game.getChildren('lvl')[0].createScene();\n\t\t\tscene.play();\n\t\t\t\n\t\t\tgame.listen('levelCompleted', () => {\n\t\t\t\tscene.play();\n\t\t\t});\n\t\t}\n\t});\n\t\n\tsetTimeout(() => {\n\t\tlet gameId = getQueryVariable('gameId') || localStorage.anotherGameId;\n\t\tconsole.log('requestGameData', gameId);\n\t\tsocket.emit('requestGameData', gameId);\n\t}, 100);\n}\n\nif (isClient)\n\ttryToLoad();\n","import './core'\nimport './components'\nimport { startSceneWhenGameLoaded, setNetworkEnabled } from './util/net'\n\nstartSceneWhenGameLoaded();\nsetNetworkEnabled(true);\n\nlet canvas;\nwindow.addEventListener('load', () => {\n\tcanvas = document.querySelector('canvas.anotherCanvas');\n\tresizeCanvas();\n});\nwindow.addEventListener('resize', resizeCanvas);\n\nfunction resizeCanvas() {\n\tif (!canvas)\n\t\treturn;\n\tcanvas.width = window.innerWidth;\n\tcanvas.height = window.innerHeight;\n}\n","import Serializable from './serializable';\nimport { addChange, changeType, setChangeOrigin } from './serializableManager'; \nimport assert from '../util/assert';\n\n// Instance of a property\nexport default class Property extends Serializable {\n\t// set skipSerializableRegistering=true if you are not planning to add this property to the hierarchy\n\t// if you give propertyType, value in real value form\n\t// if you don't give propertyType (give it later), value as JSON form\n\tconstructor({ value, predefinedId, name, propertyType, skipSerializableRegistering = false }) {\n\t\tassert(name, 'Property without a name can not exist');\n\t\tsuper(predefinedId, skipSerializableRegistering);\n\t\tthis._initialValue = value;\n\t\tif (propertyType)\n\t\t\tthis.setPropertyType(propertyType);\n\t\telse {\n\t\t\tthis.name = name;\n\t\t\tthis._initialValueIsJSON = true;\n\t\t}\n\t}\n\tsetPropertyType(propertyType) {\n\t\tthis.propertyType = propertyType;\n\t\ttry {\n\t\t\tif (this._initialValue !== undefined)\n\t\t\t\tthis.value = this._initialValueIsJSON ? propertyType.type.fromJSON(this._initialValue) : this._initialValue;\n\t\t\telse\n\t\t\t\tthis.value = propertyType.initialValue;\n\t\t} catch(e) {\n\t\t\tconsole.log('Invalid value', e, propertyType, this);\n\t\t\tthis.value = propertyType.initialValue;\n\t\t}\n\t\tthis.name = propertyType.name;\n\t}\n\tclone(skipSerializableRegistering = false) {\n\t\treturn new Property({\n\t\t\tvalue: this.propertyType.type.clone(this.value),\n\t\t\tname: this.name,\n\t\t\tpropertyType: this.propertyType,\n\t\t\tskipSerializableRegistering\n\t\t});\n\t}\n\ttoJSON() {\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tv: this.type.toJSON(this.value),\n\t\t\tn: this.propertyType.name\n\t\t});\n\t}\n}\nProperty.prototype.propertyType = null;\nObject.defineProperty(Property.prototype, 'type', {\n\tget() {\n\t\treturn this.propertyType.type;\n\t}\n});\nObject.defineProperty(Property.prototype, 'value', {\n\tset(newValue) {\n\t\tthis._value = this.propertyType.validator.validate(newValue);\n\t\tthis.dispatch('change', this._value);\n\t\tif (this._isInTree)\n\t\t\taddChange(changeType.setPropertyValue, this);\n\t},\n\tget() {\n\t\treturn this._value;\n\t}\n});\n\nSerializable.registerSerializable(Property, 'prp', json => {\n\treturn new Property({\n\t\tvalue: json.v,\n\t\tpredefinedId: json.id,\n\t\tname: json.n\n\t});\n});\n\nObject.defineProperty(Property.prototype, 'debug', {\n\tget() {\n\t\treturn `prp ${this.name}=${this.value}`;\n\t}\n});\n","export default class Vector {\n\tconstructor(x, y) {\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t}\n\tadd(vec) {\n\t\tthis.x += vec.x;\n\t\tthis.y += vec.y;\n\t\treturn this;\n\t}\n\tsubtract(vec) {\n\t\tthis.x -= vec.x;\n\t\tthis.y -= vec.y;\n\t\treturn this;\n\t}\n\tmultiply(vec) {\n\t\tthis.x *= vec.x;\n\t\tthis.y *= vec.y;\n\t\treturn this;\n\t}\n\tmultiplyScalar(scalar) {\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\treturn this;\n\t}\n\tdivide(vec) {\n\t\tthis.x /= vec.x;\n\t\tthis.y /= vec.y;\n\t\treturn this;\n\t}\n\tdivideScalar(scalar) {\n\t\tthis.x /= scalar;\n\t\tthis.y /= scalar;\n\t\treturn this;\n\t}\n\tdot(vec) {\n\t\treturn this.x * vec.x + this.y * vec.y;\n\t}\n\tlength() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t}\n\tlengthSq() {\n\t\treturn this.x * this.x + this.y * this.y;\n\t}\n\tsetLength(newLength) {\n\t\tlet oldLength = this.length();\n\n\t\tif (oldLength === 0) {\n\t\t\tthis.x = newLength;\n\t\t\tthis.y = 0;\n\t\t} else {\n\t\t\tthis.multiplyScalar(newLength / oldLength);\n\t\t}\n\t\treturn this;\n\t}\n\tgetProjectionOn(vec) {\n\t\tlet length = vec.length();\n\t\tif (length === 0)\n\t\t\treturn this.clone();\n\t\telse\n\t\t\treturn vec.clone().multiplyScalar(this.dot(vec) / (length * length));\n\t}\n\tdistance(vec) {\n\t\tlet dx = this.x - vec.x,\n\t\t\tdy = this.y - vec.y;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t}\n\tdistanceSq(vec) {\n\t\tlet dx = this.x - vec.x,\n\t\t\tdy = this.y - vec.y;\n\t\treturn dx * dx + dy * dy;\n\t}\n\tnormalize() {\n\t\treturn this.setLength(1);\n\t}\n\thorizontalAngle() {\n\t\treturn Math.atan2(this.y, this.x);\n\t}\n\tverticalAngle() {\n\t\treturn Math.atan2(this.x, this.y);\n\t}\n\trotate(angle) {\n\t\tlet x = this.x * Math.cos(angle) - this.y * Math.sin(angle);\n\t\tthis.y = this.x * Math.sin(angle) + this.y * Math.cos(angle);\n\t\tthis.x = x;\n\n\t\treturn this;\n\t}\n\trotateTo(rotation) {\n\t\treturn this.rotate(rotation-this.verticalAngle());\n\t}\n\tisEqualTo(vec) {\n\t\treturn this.x === vec.x && this.y === vec.y;\n\t}\n\tclone() {\n\t\treturn new Vector(this.x, this.y);\n\t}\n\tset(vec) {\n\t\tthis.x = vec.x;\n\t\tthis.y = vec.y;\n\t\treturn this;\n\t}\n\ttoString() {\n\t\treturn `[${this.x}, ${this.y}]`;\n\t}\n}\nVector.fromObject = function(obj) {\n\treturn new Vector(obj.x, obj.y);\n};\n","import Serializable from './serializable';\nimport assert from '../util/assert';\nimport { getSerializable } from './serializableManager';\nexport { default as Prop } from './propertyType';\n\nexport default class PropertyOwner extends Serializable {\n\tconstructor(predefinedId = false) {\n\t\tassert(Array.isArray(this.constructor._propertyTypes), 'call PropertyOwner.defineProperties after class definition');\n\t\tsuper(predefinedId);\n\t\tthis._properties = {};\n\t}\n\t// Just a helper\n\tinitWithPropertyValues(values = {}) {\n\t\tlet children = [];\n\t\t\n\t\tObject.keys(values).forEach(propName => {\n\t\t\tlet propertyType = this.constructor._propertyTypesByName[propName];\n\t\t\tassert(propertyType, 'Invalid property ' + propName);\n\t\t\tchildren.push(propertyType.createProperty({\n\t\t\t\tvalue: values[propName]\n\t\t\t}));\n\t\t});\n\t\tthis.initWithChildren(children);\n\t\treturn this;\n\t}\n\tinitWithChildren(children = []) {\n\t\tassert(!(this._state & Serializable.STATE_INIT), 'init already done');\n\t\tthis._state |= Serializable.STATE_INIT;\n\t\t\n\t\tlet propChildren = [];\n\t\tlet otherChildren = [];\n\t\t// Separate Property children and other children\n\t\tchildren.forEach(child => {\n\t\t\tif (child.threeLetterType === 'prp') {\n\t\t\t\tpropChildren.push(child);\n\t\t\t} else {\n\t\t\t\totherChildren.push(child);\n\t\t\t}\n\t\t});\n\t\tsuper.addChildren(otherChildren);\n\t\t\n\t\tlet invalidPropertiesCount = 0;\n\t\t\n\t\t// Make sure Properties have a PropertyType. They don't work without it.\n\t\tpropChildren.filter(prop => !prop.propertyType).forEach(prop => {\n\t\t\tif (!this.constructor._propertyTypesByName[prop.name]) {\n\t\t\t\tconsole.log('Property of that name not defined', this.id, prop.name, this);\n\t\t\t\tinvalidPropertiesCount++;\n\t\t\t\tprop.isInvalid = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tprop.setPropertyType(this.constructor._propertyTypesByName[prop.name]);\n\t\t});\n\t\tif (invalidPropertiesCount)\n\t\t\tpropChildren = propChildren.filter(p => !p.isInvalid);\n\t\t\n\t\t// Make sure all PropertyTypes have a matching Property\n\t\tlet nameToProp = {};\n\t\tpropChildren.forEach(c => nameToProp[c.name] = c);\n\t\tthis.constructor._propertyTypes.forEach(propertyType => {\n\t\t\tif (!nameToProp[propertyType.name])\n\t\t\t\tpropChildren.push(propertyType.createProperty());\n\t\t});\n\t\t\n\t\tsuper.addChildren(propChildren);\n\t};\n\taddChild(child) {\n\t\tassert(this._state & Serializable.STATE_INIT, this.constructor.componentName || this.constructor + ' requires that initWithChildren will be called before addChild');\n\t\tsuper.addChild(child);\n\t\tif (child.threeLetterType === 'prp') {\n\t\t\tif (!child.propertyType) {\n\t\t\t\tif (!this.constructor._propertyTypesByName[child.name]) {\n\t\t\t\t\tconsole.log('Property of that name not defined', this.id, child, this);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchild.setPropertyType(this.constructor._propertyTypesByName[child.name]);\n\t\t\t}\n\t\t\tassert(this._properties[child.propertyType.name] === undefined, 'Property already added');\n\t\t\tthis._properties[child.propertyType.name] = child;\n\t\t}\n\t};\n\tdelete() {\n\t\tif (!super.delete()) return false;\n\t\tthis._properties = {};\n\t\treturn true;\n\t}\n\t// idx is optional\n\tdeleteChild(child, idx) {\n\t\tassert(child.threeLetterType !== 'prp', 'Can not delete just one Property child.');\n\t\tsuper.deleteChild(child, idx);\n\t}\n}\n\nPropertyOwner.defineProperties = function(Class, propertyTypes) {\n\tClass._propertyTypes = propertyTypes;\n\tClass._propertyTypesByName = {};\n\tpropertyTypes.forEach(propertyType => {\n\t\tassert(Class.prototype[propertyType.name] === undefined, 'Property name ' + propertyType.name + ' clashes');\n\t\tClass._propertyTypesByName[propertyType.name] = propertyType;\n\t\tObject.defineProperty(Class.prototype, propertyType.name, {\n\t\t\tget() {\n\t\t\t\treturn this._properties[propertyType.name].value;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis._properties[propertyType.name].value = value;\n\t\t\t}\n\t\t});\n\t});\n};\n","import Serializable from './serializable';\nimport assert from '../util/assert';\n\nconst ALIVE_ERROR = 'entity is already dead';\n\nexport default class Entity extends Serializable {\n\tconstructor(predefinedId = false) {\n\t\tsuper(predefinedId);\n\t\tthis.components = new Map(); // name -> array\n\t\tthis.sleeping = false;\n\t\tthis.prototype = null; // should be set immediately after constructor\n\t\tthis.localMaster = true; // set false if entity is controlled over the net\n\t}\n\n\t// Get the first component of given name\n\tgetComponent(name) {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tlet components = this.components.get(name);\n\t\tif (components !== undefined)\n\t\t\treturn components[0];\n\t\telse\n\t\t\treturn null;\n\t}\n\n\t// Get all components with given name\n\tgetComponents(name) {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\treturn this.components.get(name) || [];\n\t}\n\t\n\tgetListOfAllComponents() {\n\t\tlet components = [];\n\t\tthis.components.forEach((value, key) => {\n\t\t\tcomponents.push(...value);\n\t\t});\n\t\treturn components;\n\t}\n\t\n\tclone() {\n\t\tlet entity = new Entity();\n\t\tentity.prototype = this.prototype;\n\t\tentity.sleeping = this.sleeping;\n\t\tlet components = [];\n\t\tthis.components.forEach((value, key) => {\n\t\t\tcomponents.push(...value.map(c => c.clone()));\n\t\t});\n\t\tentity.addComponents(components);\n\t\treturn entity;\n\t}\n\n\t/*\n\tAdds multiple components as an array to this Entity.\n\tUses addComponent internally.\n\tInitializes components after all components are added.\n\t*/\n\taddComponents(components) {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tassert(Array.isArray(components), 'Parameter is not an array.');\n\n\t\tfor (let i = 0; i < components.length; i++) {\n\t\t\tlet componentList = this.components.get(components[i]._name) || this.components.set(components[i]._name, []).get(components[i]._name);\n\t\t\tcomponentList.push(components[i]);\n\t\t\tcomponents[i].entity = this;\n\t\t\tcomponents[i]._parent = this;\n\t\t}\n\t\t\n\t\tif (!this.sleeping)\n\t\t\tEntity.initComponents(components);\n\t\treturn this;\n\t}\n\tstatic initComponents(components) {\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i]._preInit();\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i]._init();\n\t}\n\tstatic makeComponentsSleep(components) {\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i]._sleep();\n\t}\n\tstatic deleteComponents(components) {\n\t\tfor (let i = 0; i < components.length; i++)\n\t\t\tcomponents[i].delete();\n\t}\n\tsleep() {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tif (this.sleeping) return false;\n\t\t\n\t\tthis.components.forEach((value, key) => Entity.makeComponentsSleep(value));\n\t\t\n\t\tthis.sleeping = true;\n\t\treturn true;\n\t}\n\twakeUp() {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tif (!this.sleeping) return false;\n\n\t\tthis.components.forEach((value, key) => Entity.initComponents(value));\n\n\t\tthis.sleeping = false;\n\t\treturn true;\n\t}\n\tdelete() {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\tthis.sleep();\n\t\tif (!super.delete()) return false;\n\t\t\n\t\tthis.components.forEach((value, key) => Entity.deleteComponents(value));\n\t\tthis.components.clear();\n\t\t\n\t\treturn true;\n\t}\n\tdeleteComponent(component) {\n\t\tlet array = this.getComponents(component.constructor.componentName);\n\t\tlet idx = array.indexOf(component);\n\t\tassert(idx >= 0);\n\t\tif (!this.sleeping)\n\t\t\tcomponent._sleep();\n\t\tcomponent.delete();\n\t\tarray.splice(idx, 1);\n\t\treturn this;\n\t}\n\tsetInTreeStatus(isInTree) {\n\t\tif (this._isInTree === isInTree)\n\t\t\treturn;\n\n\t\tthis._isInTree = isInTree;\n\t\tthis.components.forEach((value, key) => {\n\t\t\tvalue.forEach(component => component.setInTreeStatus(isInTree));\n\t\t});\n\t}\n\ttoJSON() {\n\t\tassert(this._alive, ALIVE_ERROR);\n\t\t\n\t\tlet components = [];\n\t\tthis.components.forEach(compArray => {\n\t\t\tcompArray.forEach(comp => {\n\t\t\t\tcomponents.push(comp.toJSON());\n\t\t\t});\n\t\t});\n\t\t\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tcomp: components,\n\t\t\tproto: this.prototype.id\n\t\t});\n\t}\n}\nObject.defineProperty(Entity.prototype, 'position', {\n\tget() {\n\t\treturn this.getComponent('Transform').position;\n\t},\n\tset(position) {\n\t\tthis.getComponent('Transform').position = position;\n\t}\n});\n\nSerializable.registerSerializable(Entity, 'ent', json => {\n\tconsole.log('creating entity from json', json);\n\tlet entity = new Entity(json.id);\n\tentity.prototype = getSerializable(json.proto);\n\tconsole.log('created entity from json', entity);\n\tif (json.comp) {\n\t\tentity.addComponents(json.comp.map(Serializable.fromJSON));\n\t}\n\treturn entity;\n});\n","import Serializable, { createStringId } from './serializable';\nimport assert from '../util/assert';\nimport { componentClasses, Component } from './component';\n\nexport default class ComponentData extends Serializable {\n\tconstructor(componentClassName, predefinedId = false, predefinedComponentId = false) {\n\t\tthis.name = componentClassName;\n\t\tthis.componentClass = componentClasses.get(this.name);\n\t\tassert(this.componentClass, 'Component class not defined: ' + componentClassName);\n\t\tsuper(predefinedId);\n\t\tif (!this.componentClass.allowMultiple)\n\t\t\tpredefinedComponentId = '_' + componentClassName;\n\t\tthis.componentId = predefinedComponentId || createStringId('cid', 10); // what will be the id of component created from this componentData\n\t}\n\taddChild(child) {\n\t\tif (child.threeLetterType === 'prp') {\n\t\t\tif (!child.propertyType) {\n\t\t\t\tif (!this.componentClass._propertyTypesByName[child.name]) {\n\t\t\t\t\tconsole.log('Property of that name not defined', this.id, child, this);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchild.setPropertyType(this.componentClass._propertyTypesByName[child.name]);\n\t\t\t}\n\t\t}\n\t\tsuper.addChild(child);\n\t\treturn this;\n\t};\n\tclone(options) {\n\t\tlet newComponentId = (options && options.cloneComponentId) ? this.componentId : false;\n\t\tlet obj = new ComponentData(this.name, false, newComponentId);\n\t\tlet children = [];\n\t\tthis.forEachChild(null, child => {\n\t\t\tchildren.push(child.clone());\n\t\t});\n\t\tobj.initWithChildren(children);\n\t\tthis._state |= Serializable.STATE_CLONE;\n\t\treturn obj;\n\t}\n\ttoJSON() {\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tcid: this.componentId,\n\t\t\tn: this.name\n\t\t});\n\t}\n\t/*\n\tReturns a list of Properties.\n\tThose which don't have an id are temporary properties generated from parents.\n\tDon't set _depth.\n\t */\n\tgetInheritedProperties(_depth = 0) {\n\t\tlet properties = {};\n\n\t\t// properties from parent\n\t\tlet parentComponentData = this.getParentComponentData();\n\t\tif (parentComponentData)\n\t\t\tparentComponentData.getInheritedProperties(_depth + 1).forEach(prop => properties[prop.name] = prop);\n\t\t\n\t\t// properties from this. override properties of parents\n\t\tthis.getChildren('prp').forEach(prop => {\n\t\t\tif (_depth === 0)\n\t\t\t\tproperties[prop.name] = prop;\n\t\t\telse\n\t\t\t\tproperties[prop.name] = prop.clone(true);\n\t\t});\n\t\t\n\t\t// fill from propertyType\n\t\tif (_depth === 0) {\n\t\t\treturn this.componentClass._propertyTypes.map(propertyType => {\n\t\t\t\treturn properties[propertyType.name] || propertyType.createProperty({\n\t\t\t\t\tskipSerializableRegistering: true\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn Object.keys(properties).map(key => properties[key]);\n\t\t}\n\t}\n\tgetParentComponentData() {\n\t\tif (!this._parent) return null;\n\t\tlet parentPrototype = this._parent.getParentPrototype();\n\t\twhile (parentPrototype) {\n\t\t\tlet parentComponentData = parentPrototype.findChild('cda', componentData => componentData.componentId === this.componentId);\n\t\t\tif (parentComponentData)\n\t\t\t\treturn parentComponentData;\n\t\t\telse\n\t\t\t\tparentPrototype = parentPrototype.getParentPrototype();\n\t\t}\n\t\treturn null;\n\t}\n\tgetPropertyOrCreate(name) {\n\t\tlet property = this.findChild('prp', prp => prp.name === name);\n\t\tif (!property) {\n\t\t\tproperty = this.componentClass._propertyTypesByName[name].createProperty();\n\t\t\tthis.addChild(property);\n\t\t}\n\t\treturn property;\n\t}\n\tgetProperty(name) {\n\t\treturn this.findChild('prp', prp => prp.name === name);\n\t}\n\tsetValue(propertyName, value) {\n\t\tthis.getPropertyOrCreate(propertyName).value = value;\n\t\treturn this;\n\t}\n\tgetValue(name) {\n\t\tlet property = this.getProperty(name);\n\t\tif (property)\n\t\t\treturn property.value;\n\t\tlet parent = this.getParentComponentData();\n\t\t\n\t\tif (parent)\n\t\t\treturn parent.getValue(name);\n\t\t\n\t\treturn this.componentClass._propertyTypesByName[name].initialValue;\n\t}\n\tcreateComponent() {\n\t\tlet properties = this.getInheritedProperties();\n\t\tlet values = {};\n\t\tproperties.forEach(prop => {\n\t\t\tvalues[prop.name] = prop.value;\n\t\t});\n\t\tlet component = Component.create(this.name, values);\n\t\tcomponent._componentId = this.componentId;\n\t\treturn component;\n\t}\n}\nSerializable.registerSerializable(ComponentData, 'cda', json => {\n\treturn new ComponentData(json.n, json.id, json.cid);\n});\n","import Serializable from './serializable';\nimport assert from '../util/assert';\nimport { getSerializable } from './serializableManager';\nimport Prop from './propertyType';\nimport PropertyOwner from './propertyOwner';\nimport ComponentData from './componentData';\nimport Entity from './entity';\nimport { game } from './game';\nimport { Component } from './component';\n\nlet propertyTypes = [\n\tProp('name', 'No name', Prop.string)\n];\n\nexport default class Prototype extends PropertyOwner {\n\tconstructor() {\n\t\tsuper(...arguments);\n\t\t\n\t\tthis.previouslyCreatedEntity = null;\n\t}\n\t\n\taddChild(child) {\n\t\tif (child.threeLetterType === 'cda' && !child.componentClass.allowMultiple)\n\t\t\tassert(this.findChild('cda', cda => cda.componentId === child.componentId) === null, `Can't have multiple ${child.name} components. See Component.allowMultiple`);\n\t\tsuper.addChild(child);\n\t}\n\tgetParentPrototype() {\n\t\treturn this._parent && this._parent.threeLetterType === 'prt' ? this._parent : null;\n\t}\n\t\n\t/*\n\tReturns JSON:\n\t[\n\t\t{\n\t\t\townComponent: false, // component of a parent prototype\n\t\t\tcomponentClass: [object Object],\n\t\t\tcomponentId: <componentId>,\n\t\t\tthreeLetterType: 'icd',\n\t \t\tgeneratedForPrototype: <this>,\n\t\t\tproperties: [\n\t\t\t\t{ id missing }\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t ownComponentData: <ComponentData> || null, // null if this prototype has 0 properties defined\n\t\t\t componentClass: [object Object],\n\t\t\t componentId: <componentId>,\n\t\t\t threeLetterType: 'icd',\n\t\t\t generatedForPrototype: <this>,\n\t\t\t properties: [\n\t\t\t \t{ id found if own property } // some properties might be from parent prototypes and thus missing id\n\t\t\t ]\n\t\t }\n\t]\n\t */\n\tgetInheritedComponentDatas(filter = null) {\n\t\tlet originalPrototype = this;\n\t\t\n\t\tfunction getDataFromPrototype(prototype, _depth = 0) {\n\t\t\tlet data;\n\t\t\t\n\t\t\tlet parentPrototype = prototype.getParentPrototype();\n\t\t\tif (parentPrototype)\n\t\t\t\tdata = getDataFromPrototype(parentPrototype, _depth + 1);\n\t\t\telse\n\t\t\t\tdata = {}; // Top level\n\t\t\t\n\t\t\tlet componentDatas = prototype.getChildren('cda');\n\t\t\tcomponentDatas.forEach(componentData => {\n\t\t\t\tif (filter && !filter(componentData))\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\tif (!data[componentData.componentId]) {\n\t\t\t\t\t// Most parent version of this componentId\n\t\t\t\t\tdata[componentData.componentId] = {\n\t\t\t\t\t\t// ownComponent = true if the original prototype is the first one introducing this componentId\n\t\t\t\t\t\townComponentData: null, // will be given value if original prototype has this componentId\n\t\t\t\t\t\tcomponentClass: componentData.componentClass,\n\t\t\t\t\t\tcomponentId: componentData.componentId,\n\t\t\t\t\t\tpropertyHash: {},\n\t\t\t\t\t\tthreeLetterType: 'icd',\n\t\t\t\t\t\tgeneratedForPrototype: originalPrototype\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (_depth === 0) {\n\t\t\t\t\tdata[componentData.componentId].ownComponentData = componentData;\n\t\t\t\t}\n\n\t\t\t\tcomponentData.getChildren('prp').forEach(property => {\n\t\t\t\t\t// Newest version of a property always overrides old property\n\t\t\t\t\tdata[componentData.componentId].propertyHash[property.name] = _depth === 0 ? property : property.clone(true);\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\treturn data;\n\t\t}\n\n\t\tlet data = getDataFromPrototype(this);\n\t\tlet array = Object.keys(data).map(key => data[key]);\n\t\tarray.forEach(inheritedComponentData => {\n\t\t\tinheritedComponentData.properties = inheritedComponentData.componentClass._propertyTypes.map(propertyType => {\n\t\t\t\tif (inheritedComponentData.propertyHash[propertyType.name])\n\t\t\t\t\treturn inheritedComponentData.propertyHash[propertyType.name];\n\t\t\t\telse\n\t\t\t\t\treturn propertyType.createProperty({ skipSerializableRegistering: true });\n\t\t\t});\n\t\t\tdelete inheritedComponentData.propertyHash;\n\t\t});\n\t\t\n\t\tarray.forEach(inheritedComponentData => {\n\t\t\tlet cid = inheritedComponentData.componentId;\n\t\t});\n\n\t\treturn array.sort((a, b) => a.componentClass.componentName.localeCompare(b.componentClass.componentName));\n\t}\n\t\n\tcreateAndAddPropertyForComponentData(inheritedComponentData, propertyName, propertyValue) {\n\t\tlet propertyType = inheritedComponentData.componentClass._propertyTypesByName[propertyName];\n\t\tassert(propertyType, 'Invalid propertyName', propertyName, inheritedComponentData);\n\t\tlet componentData = this.findChild('cda', componentData => componentData.componentId === inheritedComponentData.componentId);\n\t\tlet componentDataIsNew = false;\n\t\tif (!componentData) {\n\t\t\tconsole.log('no component data. create one', this, inheritedComponentData);\n\t\t\tcomponentData = new ComponentData(inheritedComponentData.componentClass.componentName, false, inheritedComponentData.componentId);\n\t\t\tcomponentDataIsNew = true;\n\t\t}\n\t\tlet property = componentData.findChild('prp', property => property.name === propertyName);\n\t\tif (property) {\n\t\t\tproperty.value = propertyValue;\n\t\t\treturn property;\n\t\t}\n\n\t\tproperty = propertyType.createProperty({\n\t\t\tvalue: propertyValue,\n\t\t});\n\t\tcomponentData.addChild(property);\n\t\t\n\t\tif (componentDataIsNew)\n\t\t\tthis.addChild(componentData);\n\t\t\n\t\treturn property;\n\t}\n\t\n\tfindComponentDataByComponentId(componentId, alsoFindFromParents = false) {\n\t\tlet child = this.findChild('cda', componentData => componentData.componentId === componentId);\n\t\tif (child)\n\t\t\treturn child;\n\t\tif (alsoFindFromParents) {\n\t\t\tlet parent = this.getParentPrototype();\n\t\t\tif (parent)\n\t\t\t\treturn parent.findComponentDataByComponentId(componentId, alsoFindFromParents);\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tgetOwnComponentDataOrInherit(componentId) {\n\t\tlet componentData = this.findComponentDataByComponentId(componentId, false);\n\t\tif (!componentData) {\n\t\t\tlet inheritedComponentData = this.findComponentDataByComponentId(componentId, true);\n\t\t\tif (!inheritedComponentData)\n\t\t\t\treturn null;\n\t\t\t\n\t\t\tcomponentData = new ComponentData(inheritedComponentData.name, false, componentId);\n\t\t\tthis.addChild(componentData);\n\t\t}\n\t\treturn componentData\n\t}\n\t\n\tfindOwnProperty(componentId, propertyName) {\n\t\tlet componentData = this.findComponentDataByComponentId(componentId);\n\t\tif (componentData) {\n\t\t\treturn componentData.getProperty(propertyName);\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tcreateEntity() {\n\t\tlet entity = new Entity();\n\t\tlet inheritedComponentDatas = this.getInheritedComponentDatas();\n\t\tlet components = inheritedComponentDatas.map(Component.createWithInheritedComponentData);\n\t\tentity.addComponents(components);\n\t\tentity.prototype = this;\n\t\t\n\t\tthis.previouslyCreatedEntity = entity;\n\t\treturn entity;\n\t}\n\t\n\tgetValue(componentId, propertyName) {\n\t\tlet componentData = this.findComponentDataByComponentId(componentId, true);\n\t\tif (componentData)\n\t\t\treturn componentData.getValue(propertyName);\n\t\telse\n\t\t\treturn undefined;\n\t}\n\t\n\tcountEntityPrototypes(findParents = false) {\n\t\tif (this.threeLetterType !== 'prt')\n\t\t\treturn 0;\n\t\t\n\t\tlet count = 0;\n\t\tlet levels = game.getChildren('lvl');\n\t\tfor (let i = levels.length-1; i >= 0; i--) {\n\t\t\tlet entityPrototypes = levels[i].getChildren('epr');\n\t\t\tfor (let j = entityPrototypes.length-1; j >= 0; j--) {\n\t\t\t\tif (entityPrototypes[j].prototype === this)\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (findParents)\n\t\t\tthis.forEachChild('prt', prt => count += prt.countEntityPrototypes(true));\n\t\t\n\t\treturn count;\n\t}\n\t\n\tdelete() {\n\t\tthis._game = this._game || this.getRoot();\n\t\tif (!super.delete()) return false;\n\t\tif (this.threeLetterType === 'prt') {\n\t\t\tthis._game.forEachChild('lvl', lvl => {\n\t\t\t\tlet items = lvl.getChildren('epr');\n\t\t\t\tfor (let i = items.length-1; i >= 0; i--) {\n\t\t\t\t\tif (items[i].prototype === this) {\n\t\t\t\t\t\tlvl.deleteChild(items[i], i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.previouslyCreatedEntity = null;\n\t\treturn true;\n\t}\n}\nPropertyOwner.defineProperties(Prototype, propertyTypes);\n\nPrototype.create = function(name) {\n\treturn new Prototype().initWithPropertyValues({ name: name });\n};\n\nSerializable.registerSerializable(Prototype, 'prt');\n","import Serializable from './serializable'\nimport { addChange, changeType, setChangeOrigin } from './serializableManager';\nimport Prototype from '../core/prototype'\nimport assert from '../util/assert'\nimport PropertyOwner, { Prop } from '../core/propertyOwner';\n\nlet propertyTypes = [\n\tProp('name', 'No name', Prop.string)\n];\n\nlet game = null; // only one game at the time\nexport { game };\n\nlet isClient = typeof window !== 'undefined';\n\nexport default class Game extends PropertyOwner {\n\tconstructor(predefinedId) {\n\t\tif (isClient) {\n\t\t\tif (game) {\n\t\t\t\ttry {\n\t\t\t\t\tgame.delete();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Deleting old game failed', e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tgame = this;\n\t\t}\n\t\t\n\t\tif (predefinedId)\n\t\t\tconsole.log('game import');\n\t\telse\n\t\t\tconsole.log('game created');\n\t\t\n\t\tsuper(...arguments);\n\t}\n\tinitWithChildren() {\n\t\tsuper.initWithChildren(...arguments);\n\t\taddChange(changeType.addSerializableToTree, this);\n\t}\n\tdelete() {\n\t\tif (!super.delete()) return false;\n\t\t\n\t\tif (game === this)\n\t\t\tgame = null;\n\t\tconsole.log('game.delete');\n\t\t\n\t\treturn true;\n\t}\n}\nPropertyOwner.defineProperties(Game, propertyTypes);\n\nGame.prototype.isRoot = true;\n\nSerializable.registerSerializable(Game, 'gam');\n","let isClient = typeof window !== 'undefined';\nlet isServer = typeof module !== 'undefined';\n\nif (isClient && isServer)\n\tthrow new Error('Can not be client and server at the same time.');\n\nexport { isClient, isServer };\n","import Serializable from './serializable';\nimport Entity from './entity';\nimport assert from '../util/assert';\nimport { game } from './game';\nimport { addChange, changeType, setChangeOrigin } from './serializableManager';\nimport { isClient } from '../util/environment';\nimport { createWorld, deleteWorld, updateWorld } from '../feature/physics';\n\nlet scene = null;\nexport { scene };\n\nconst physicsOptions = {\n\tenableSleeping: true\n};\n\nexport default class Scene extends Serializable {\n\tconstructor(predefinedId = false) {\n\t\tif (isClient) {\n\t\t\tif (scene) {\n\t\t\t\ttry {\n\t\t\t\t\tscene.delete();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Deleting old scene failed', e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tscene = this;\n\t\t\t\n\t\t\tthis.canvas = document.querySelector('canvas.anotherCanvas');\n\t\t\tthis.context = this.canvas.getContext('2d');\n\t\t}\n\t\tthis.level = null;\n\t\t\n\t\t// To make component based entity search fast:\n\t\tthis.components = new Map(); // componentName -> Set of components\n\t\t\n\t\tthis.animationFrameId = null;\n\t\tthis.playing = false;\n\t\tthis.time = 0;\n\n\t\tthis.physicsWorld = null;\n\t\t\n\t\tsuper(predefinedId);\n\t\taddChange(changeType.addSerializableToTree, this);\n\n\t\tif (predefinedId)\n\t\t\tconsole.log('scene import');\n\t\telse\n\t\t\tconsole.log('scene created');\n\n\t\tcreateWorld(this, physicsOptions);\n\t\t\n\t\tthis.draw();\n\t}\n\twin() {\n\t\tsetTimeout(() => {\n\t\t\tsetChangeOrigin(this);\n\t\t\tthis.reset();\n\t\t\tgame.dispatch('levelCompleted');\n\t\t})\n\t}\n\tanimFrame(playCalled) {\n\t\tthis.animationFrameId = null;\n\t\tif (!this._alive || !this.playing) return;\n\t\t\n\t\tlet t = 0.001*performance.now();\n\t\tlet dt = t-this._prevUpdate;\n\t\tif (dt > 0.1)\n\t\t\tdt = 0.1;\n\t\tthis._prevUpdate = t;\n\t\tthis.time += dt;\n\n\t\tsetChangeOrigin(this);\n\t\t\n\t\tthis.dispatch('onUpdate', dt, this.time);\n\t\tupdateWorld(this, dt);\n\t\tthis.draw();\n\t\t\n\t\tthis.requestAnimFrame();\n\t}\n\trequestAnimFrame() {\n\t\tthis.animationFrameId = window.requestAnimationFrame(() => this.animFrame());\n\t}\n\tdraw() {\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\tthis.dispatch('onDraw', this.context);\n\t}\n\tisInInitialState() {\n\t\treturn !this.playing && this.time === 0;\n\t}\n\treset() {\n\t\tthis.pause();\n\t\tthis.deleteChildren();\n\n\t\tdeleteWorld(this);\n\t\tcreateWorld(this, physicsOptions);\n\t\t\n\t\tif (this.level)\n\t\t\tthis.level.createScene(this);\n\t\tthis.time = 0;\n\t\tthis.draw();\n\t}\n\tpause() {\n\t\tif (!this.playing) return;\n\t\t\n\t\tthis.playing = false;\n\t\tif (this.animationFrameId)\n\t\t\twindow.cancelAnimationFrame(this.animationFrameId);\n\t\tthis.animationFrameId = null;\n\t}\n\tplay() {\n\t\tif (this.playing) return;\n\t\t\n\t\tthis._prevUpdate = 0.001*performance.now();\n\t\tthis.playing = true;\n\t\t\n\t\tthis.requestAnimFrame();\n\t\t\n\t\t\n\t\tif (this.time === 0)\n\t\t\tthis.dispatch('onStart');\n\t\t\n\t\t/*\n\t\tlet player = game.findChild('prt', p => p.name === 'Player', true);\n\t\tif (player) {\n\t\t\tconsole.log('Spawning player!', player);\n\t\t\tthis.spawn(player);\n\t\t}\n\t\t*/\n\t}\n\tdelete() {\n\t\tif (!super.delete()) return false;\n\n\t\tdeleteWorld(this);\n\t\t\n\t\tif (scene === this)\n\t\t\tscene = null;\n\t\t\n\t\tconsole.log('scene.delete');\n\t\treturn true;\n\t}\n\n\t// To make component based entity search fast:\n\taddComponent(component) {\n\t\tlet set = this.components.get(component.constructor.componentName);\n\t\tif (!set) {\n\t\t\tset = new Set();\n\t\t\tthis.components.set(component.constructor.componentName, set);\n\t\t}\n\t\tset.add(component);\n\t}\n\tremoveComponent(component) {\n\t\tlet set = this.components.get(component.constructor.componentName);\n\t\tassert(set);\n\t\tassert(set.delete(component));\n\t}\n\tgetComponents(componentName) {\n\t\treturn this.components.get(componentName) || new Set;\n\t}\n}\nScene.prototype.isRoot = true;\n\nSerializable.registerSerializable(Scene, 'sce');\n","import Serializable from './serializable';\nimport assert from '../util/assert';\nimport Property from './property';\nimport PropertyOwner from './propertyOwner';\nimport { scene } from './scene';\nimport { game } from './game';\nexport { default as Prop } from './propertyType';\nexport let componentClasses = new Map();\nimport ComponentData from './componentData';\n\n// Instance of a component, see componentExample.js\nexport class Component extends PropertyOwner {\n\tconstructor(predefinedId = false) {\n\t\tsuper(predefinedId);\n\t\tthis._componentId = null; // Creator will fill this\n\t\tthis.scene = scene;\n\t\tthis.game = game;\n\t\tthis._listenRemoveFunctions = [];\n\t\tthis.entity = null;\n\t}\n\tdelete() {\n\t\t// Component.delete never returns false because entity doesn't have components as children\n\t\tthis._parent = null;\n\t\tthis.entity = null;\n\t\tsuper.delete();\n\t\treturn true;\n\t}\n\t_preInit() {\n\t\tthis.constructor.requirements.forEach(r => {\n\t\t\tthis[r] = this.entity.getComponent(r);\n\t\t\tassert(this[r], `${this.constructor.componentName} requires component ${r} but it is not found`);\n\t\t});\n\n\t\tthis.forEachChild('com', c => c._preInit());\n\t\t\n\t\t['onUpdate', 'onDraw', 'onDrawHelper', 'onStart'].forEach(funcName => {\n\t\t\tif (typeof this[funcName] === 'function') {\n\t\t\t\t// console.log('listen ' + funcName);\n\t\t\t\tthis._listenRemoveFunctions.push(this.scene.listen(funcName, (...args) => this[funcName](...args)));\n\t\t\t}\n\t\t});\n\n\t\tif (this.constructor.componentName !== 'Transform')\n\t\t\tthis.scene.addComponent(this);\n\t\t\n\t\ttry {\n\t\t\tif (typeof this.preInit === 'function')\n\t\t\t\tthis.preInit();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.componentName, 'preInit', e);\n\t\t}\n\t}\n\t_init() {\n\t\tthis.forEachChild('com', c => c._init());\n\t\ttry {\n\t\t\tif (typeof this.init === 'function')\n\t\t\t\tthis.init();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.componentName, 'init', e);\n\t\t}\n\t}\n\t_sleep() {\n\t\ttry {\n\t\t\tif (typeof this.sleep === 'function')\n\t\t\t\tthis.sleep();\n\t\t} catch(e) {\n\t\t\tconsole.error(this.entity, this.constructor.componentName, 'sleep', e);\n\t\t}\n\n\t\tif (this.constructor.componentName !== 'Transform')\n\t\t\tthis.scene.removeComponent(this);\n\t\t\n\t\tthis.forEachChild('com', c => c._sleep());\n\t\t// console.log(`remove ${this._listenRemoveFunctions.length} listeners`);\n\t\tthis._listenRemoveFunctions.forEach(f => f());\n\t\tthis._listenRemoveFunctions.length = 0;\n\t}\n\tlistenProperty(component, propertyName, callback) {\n\t\tthis._listenRemoveFunctions.push(component._properties[propertyName].listen('change', callback));\n\t}\n\tcreateComponentData() {\n\t\tlet componentName = this.constructor.componentName;\n\t\tlet propertyTypes = this.constructor._propertyTypes;\n\t\tlet componentData = new ComponentData(componentName);\n\t\tlet children = [];\n\t\tpropertyTypes.forEach(pt => {\n\t\t\tchildren.push(pt.createProperty({\n\t\t\t\tvalue: this[pt.name]\n\t\t\t}));\n\t\t});\n\t\tcomponentData.initWithChildren(children);\n\t\treturn componentData;\n\t}\n\ttoJSON() {\n\t\treturn Object.assign(super.toJSON(), {\n\t\t\tn: this.constructor.componentName,\n\t\t\tcid: this._componentId\n\t\t});\n\t}\n}\nComponent.create = function(name, values = {}) {\n\tlet componentClass = componentClasses.get(name);\n\tassert(componentClass);\n\tlet component = new componentClass();\n\tcomponent.initWithPropertyValues(values);\n\treturn component;\n};\nComponent.createWithInheritedComponentData = function(inheritedComponentData) {\n\tlet component = new inheritedComponentData.componentClass;\n\tcomponent._componentId = inheritedComponentData.componentId;\n\tlet properties = inheritedComponentData.properties.map(p => p.clone());\n\tcomponent.initWithChildren(properties);\n\treturn component;\n};\n\nComponent.reservedPropertyNames = new Set(['id', 'constructor', 'delete', 'children', 'entity', 'env', 'init', 'preInit', 'sleep', 'toJSON', 'fromJSON']);\nComponent.reservedPrototypeMembers = new Set(['id', 'children', 'entity', 'env', '_preInit', '_init', '_sleep', '_forEachChildComponent', '_properties', '_componentData', 'toJSON', 'fromJSON']);\nComponent.register = function({\n\tname = '', // required\n\tdescription = '',\n\tcategory = 'Other',\n\ticon = 'fa-puzzle-piece', // in editor\n\tcolor = '', // in editor\n\tproperties = [],\n\trequirements = ['Transform'],\n\tchildren = [],\n\tparentClass = Component,\n\tprototype = {},\n\tallowMultiple = true,\n\trequiesInitWhenEntityIsEdited = false\n}) {\n\tassert(name, 'Component must have a name.');\n\tassert(name[0] >= 'A' && name[0] <= 'Z', 'Component name must start with capital letter.');\n\tassert(!componentClasses.has(name), 'Duplicate component class ' + name);\n\tObject.keys(prototype).forEach(k => {\n\t\tif (Component.reservedPrototypeMembers.has(k))\n\t\t\tassert(false, 'Component prototype can not have a reserved member: ' + k);\n\t});\n\t\n\tlet constructorFunction = prototype.constructor;\n\tlet deleteFunction = prototype.delete;\n\tdelete prototype.constructor;\n\tdelete prototype.delete;\n\tclass Com extends parentClass {\n\t\tconstructor() {\n\t\t\tsuper(...arguments);\n\t\t\tif (constructorFunction)\n\t\t\t\tconstructorFunction();\n\t\t}\n\t\tdelete() {\n\t\t\tif (!super.delete()) return false;\n\t\t\t\n\t\t\tif (deleteFunction)\n\t\t\t\tdeleteFunction();\n\t\t\t\n\t\t\treturn true;\n\t\t}\n\t}\n\tproperties.forEach(p => {\n\t\tassert(!Component.reservedPropertyNames.has(p.name), 'Can not have property called ' + p.name);\n\t});\n\tPropertyOwner.defineProperties(Com, properties); // properties means propertyTypes here\n\tCom.componentName = name;\n\tCom.category = category;\n\tif (requirements.indexOf('Transform') < 0) requirements.push('Transform');\n\tCom.requirements = requirements;\n\tCom.children = children;\n\tCom.description = description;\n\tCom.allowMultiple = allowMultiple;\n\tCom.icon = icon;\n\t\n\tlet num = name.split('').reduce((prev, curr) => prev + curr.charCodeAt(0), 0);\n\tCom.color = color || `hsla(${ num % 360 }, 40%, 60%, 1)`;\n\n\tprototype._name = name;\n\tObject.assign(Com.prototype, prototype);\n\tcomponentClasses.set(Com.componentName, Com);\n\treturn Com;\n};\n\nSerializable.registerSerializable(Component, 'com', json => {\n\tlet component = new (componentClasses.get(json.n))(json.id);\n\tcomponent._componentId = json.cid || null;\n\treturn component;\n});\n","import Prototype from './prototype';\nimport Property from './property';\nimport Serializable from './serializable';\nimport { getSerializable } from './serializableManager';\nimport { Prop, componentClasses } from './component';\nimport ComponentData from './componentData';\nimport { scene } from './scene';\nimport assert from '../util/assert';\nimport Vector from '../util/vector';\n\n// EntityPrototype is a prototype that always has one Transform ComponentData and optionally other ComponentDatas also.\n// Entities are created based on EntityPrototypes\nexport default class EntityPrototype extends Prototype {\n\tconstructor(predefinedId = false) {\n\t\tsuper(...arguments);\n\t\t// this._parent is level, not prototype. We need a link to parent-prototype.\n\t\tthis.prototype = null;\n\t}\n\tgetTransform() {\n\t\treturn this.findChild('cda', cda => cda.name === 'Transform');\n\t}\n\tgetParentPrototype() {\n\t\treturn this.prototype;\n\t}\n\tclone() {\n\t\tlet obj = new EntityPrototype();\n\t\tobj.prototype = this.prototype;\n\t\tlet id = obj.id;\n\t\tlet children = [];\n\t\tthis.forEachChild(null, child => {\n\t\t\tif (child.threeLetterType === 'prp' && child.name === 'name') {\n\t\t\t\tlet property = new Property({\n\t\t\t\t\tvalue: child.propertyType.type.clone(child.value),\n\t\t\t\t\tname: child.name,\n\t\t\t\t\tpropertyType: this.propertyType,\n\t\t\t\t\tpredefinedId: id + '_n'\n\t\t\t\t});\n\t\t\t\tchildren.push(property);\n\t\t\t} else if (child.threeLetterType === 'cda' && child.name === 'Transform') {\n\t\t\t\tlet transform = new ComponentData('Transform', id + '_t');\n\n\t\t\t\tlet position = transform.componentClass._propertyTypesByName.position.createProperty({\n\t\t\t\t\tvalue: child.findChild('prp', prp => prp.name === 'position').value,\n\t\t\t\t\tpredefinedId: id + '_p'\n\t\t\t\t});\n\t\t\t\ttransform.addChild(position);\n\n\t\t\t\tlet scale = transform.componentClass._propertyTypesByName.scale.createProperty({\n\t\t\t\t\tvalue: child.findChild('prp', prp => prp.name === 'scale').value,\n\t\t\t\t\tpredefinedId: id + '_s'\n\t\t\t\t});\n\t\t\t\ttransform.addChild(scale);\n\n\t\t\t\tlet rotation = transform.componentClass._propertyTypesByName.rotation.createProperty({\n\t\t\t\t\tvalue: child.findChild('prp', prp => prp.name === 'rotation').value,\n\t\t\t\t\tpredefinedId: id + '_r'\n\t\t\t\t});\n\t\t\t\ttransform.addChild(rotation);\n\t\t\t\t\n\t\t\t\tchildren.push(transform);\n\t\t\t} else if (child.threeLetterType === 'cda') {\n\t\t\t\tchildren.push(child.clone({ cloneComponentId: true }));\n\t\t\t} else {\n\t\t\t\tchildren.push(child.clone());\n\t\t\t}\n\t\t});\n\t\tobj.initWithChildren(children);\n\t\tthis._state |= Serializable.STATE_CLONE;\n\t\treturn obj;\n\t}\n\ttoJSON() {\n\t\t// return super.toJSON();\n\t\t\n\t\t// Below optimization reduces size 88%. id's have to be generated based on this.id\n\t\t\n\t\tlet Transform = this.getTransform();\n\t\tlet json = {\n\t\t\tid: this.id,\n\t\t\tp: this.prototype.id\n\t\t};\n\t\t\n\t\tlet childArrays = [];\n\t\tthis._children.forEach(child => {\n\t\t\tchildArrays.push(child);\n\t\t});\n\t\tlet children = [].concat(...childArrays).filter(child => {\n\t\t\treturn child !== Transform && child !== this._properties.name;\n\t\t});\n\t\tif (children.length > 0)\n\t\t\tjson.c = children.map(child => child.toJSON());\n\t\t\n\t\tlet prototype = this.prototype;\n\t\t\n\t\tlet floatToJSON = Prop.float().toJSON;\n\t\tlet handleProperty = prp => {\n\t\t\tif (prp.name === 'name') {\n\t\t\t\tif (!prototype || prp.value !== prototype.name)\n\t\t\t\t\tjson.n = prp.value;\n\t\t\t} else if (prp.name === 'position') {\n\t\t\t\tjson.x = floatToJSON(prp.value.x);\n\t\t\t\tjson.y = floatToJSON(prp.value.y);\n\t\t\t} else if (prp.name === 'scale') {\n\t\t\t\tif (!prp.value.isEqualTo(new Vector(1, 1))) {\n\t\t\t\t\tjson.w = floatToJSON(prp.value.x);\n\t\t\t\t\tjson.h = floatToJSON(prp.value.y);\n\t\t\t\t}\n\t\t\t} else if (prp.name === 'rotation') {\n\t\t\t\tif (prp.value !== 0)\n\t\t\t\t\tjson.a = floatToJSON(prp.value);\n\t\t\t}\n\t\t};\n\t\thandleProperty(this._properties.name);\n\n\t\tTransform.getChildren('prp').forEach(handleProperty);\n\t\treturn json;\n\t}\n\tspawnEntityToScene(position) {\n\t\tif (!scene)\n\t\t\treturn;\n\t\t\n\t\tif (position) {\n\t\t\tthis.getTransform().getPropertyOrCreate('position').value = position;\n\t\t}\n\t\t\n\t\tlet entity = this.createEntity();\n\t\tscene.addChild(entity);\n\t}\n}\nObject.defineProperty(EntityPrototype.prototype, 'position', {\n\tget() {\n\t\treturn this.getTransform().findChild('prp', prp => prp.name === 'position').value;\n\t},\n\tset(position) {\n\t\treturn this.getTransform().findChild('prp', prp => prp.name === 'position').value = position;\n\t}\n});\n\n// If Transform or Transform.position is missing, they are added.\nEntityPrototype.createFromPrototype = function(prototype, componentDatas = []) {\n\n\tlet entityPrototype = new EntityPrototype();\n\tentityPrototype.prototype = prototype;\n\tlet id = entityPrototype.id;\n\t\n\tassert(!componentDatas.find(cda => cda.name === 'Transform'), 'Prototype (prt) can not have a Transform component');\n\t\n\tlet transform = new ComponentData('Transform', id + '_t');\n\tcomponentDatas.push(transform);\n\t\n\tlet position = transform.componentClass._propertyTypesByName.position.createProperty({\n\t\tvalue: new Vector(0, 0),\n\t\tpredefinedId: id + '_p'\n\t});\n\ttransform.addChild(position);\n\n\tlet scale = transform.componentClass._propertyTypesByName.scale.createProperty({\n\t\tvalue: new Vector(1, 1),\n\t\tpredefinedId: id + '_s'\n\t});\n\ttransform.addChild(scale);\n\n\tlet rotation = transform.componentClass._propertyTypesByName.rotation.createProperty({\n\t\tvalue: 0,\n\t\tpredefinedId: id + '_r'\n\t});\n\ttransform.addChild(rotation);\n\n\tlet name = EntityPrototype._propertyTypesByName.name.createProperty({\n\t\tvalue: prototype.name,\n\t\tpredefinedId: id + '_n'\n\t});\n\t\n\tentityPrototype.initWithChildren([name, ...componentDatas])\n\n\treturn entityPrototype;\n};\n\nSerializable.registerSerializable(EntityPrototype, 'epr', json => {\n\tlet entityPrototype = new EntityPrototype(json.id);\n\tentityPrototype.prototype = getSerializable(json.p);\n\tassert(entityPrototype.prototype, `Prototype ${json.p} not found`);\n\t\n\tlet nameId = json.id + '_n';\n\tlet transformId = json.id + '_t';\n\tlet positionId = json.id + '_p';\n\tlet scaleId = json.id + '_s';\n\tlet rotationId = json.id + '_r';\n\t\n\tlet name = Prototype._propertyTypesByName.name.createProperty({ \n\t\tvalue: json.n === undefined ? entityPrototype.prototype.name : json.n, \n\t\tpredefinedId: nameId \n\t});\n\t\n\tlet transformData = new ComponentData('Transform', transformId);\n\tlet transformClass = componentClasses.get('Transform');\n\t\n\tlet position = transformClass._propertyTypesByName.position.createProperty({\n\t\tvalue: new Vector(json.x, json.y),\n\t\tpredefinedId: positionId\n\t});\n\ttransformData.addChild(position);\n\n\tlet scale = transformClass._propertyTypesByName.scale.createProperty({\n\t\tvalue: new Vector(json.w === undefined ? 1 : json.w, json.h === undefined ? 1 : json.h),\n\t\tpredefinedId: scaleId\n\t});\n\ttransformData.addChild(scale);\n\n\tlet rotation = transformClass._propertyTypesByName.rotation.createProperty({\n\t\tvalue: json.a || 0,\n\t\tpredefinedId: rotationId\n\t});\n\ttransformData.addChild(rotation);\n\t\n\t\n\tentityPrototype.initWithChildren([name, transformData]);\n\treturn entityPrototype;\n});\n","import Serializable from './serializable';\nimport PropertyOwner, { Prop } from '../core/propertyOwner';\nimport Scene, { scene } from './scene';\n\nlet propertyTypes = [\n\tProp('name', 'No name', Prop.string)\n];\n\nexport default class Level extends PropertyOwner {\n\tconstructor(predefinedId) {\n\t\tsuper(...arguments);\n\n\t\tif (predefinedId)\n\t\t\tconsole.log('level import');\n\t\telse\n\t\t\tconsole.log('level created');\n\t}\n\tcreateScene(predefinedSceneObject = false) {\n\t\tif (!predefinedSceneObject)\n\t\t\tnew Scene();\n\t\tlet entities = this.getChildren('epr').map(epr => epr.createEntity());\n\t\tscene.addChildren(entities);\n\t\tscene.level = this;\n\t\treturn scene;\n\t}\n\t\n\t\n\t/*\n\tOPTIMIZATION DOES NOT WORK, YET\n\ttoJSON() {\n\t\tlet json = super.toJSON();\n\t\tconsole.log('before', json);\n\t\tif (json.c) {\n\t\t\tlet prototypeIds = new Set();\n\t\t\tjson.c.forEach(child => {\n\t\t\t\tconsole.log('child', child);\n\t\t\t\tprototypeIds.add(child.p);\n\t\t\t});\n\t\t\t\n\t\t\tlet prototypeIdToNum = {};\n\t\t\tlet prototypeIdArray = [];\n\t\t\tlet num = 0;\n\t\t\tprototypeIds.forEach(key => {\n\t\t\t\tprototypeIdArray[num] = key;\n\t\t\t\tprototypeIdToNum[key] = num++;\n\t\t\t});\n\n\t\t\tjson.c.forEach(child => {\n\t\t\t\tchild.p = prototypeIdToNum[child.p] || child.p;\n\t\t\t});\n\t\t\t\n\t\t\tjson.p = prototypeIdArray;\n\n\t\t\tconsole.log(json, prototypeIds, prototypeIdToNum, prototypeIdArray);\n\t\t}\n\t\treturn json;\n\t}\n\t*/\n}\nPropertyOwner.defineProperties(Level, propertyTypes);\n\nSerializable.registerSerializable(Level, 'lvl');\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\n\nComponent.register({\n\tname: 'Transform',\n\tcategory: 'Core',\n\ticon: 'fa-dot-circle-o',\n\tallowMultiple: false,\n\tproperties: [\n\t\tProp('position', new Vector(0, 0), Prop.vector),\n\t\tProp('scale', new Vector(1, 1), Prop.vector),\n\t\tProp('rotation', 0, Prop.float, Prop.float.modulo(0, Math.PI * 2), Prop.flagDegreesInEditor)\n\t]\n});\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\n\nlet vari = 0;\n\nComponent.register({\n\tname: 'Test',\n\tcategory: 'Core',\n\tproperties: [\n\t\tProp('name', 'Oh right', Prop.string),\n\t\tProp('enum', 'yksi', Prop.enum, Prop.enum.values('yksi', 'kaksi', 'kolme', 'neljä')),\n\t\tProp('topBarHelper', new Vector(0, 1), Prop.vector),\n\t\tProp('test' + ++vari, vari, Prop.int),\n\t\tProp('test' + ++vari, false, Prop.bool),\n\t\tProp('test' + ++vari, true, Prop.bool)\n\t]\n});\n","import { Component, Prop } from '../core/component';\nimport { key, keyPressed } from '../util/input';\nimport Vector from '../util/vector';\n\nComponent.register({\n\tname: 'Mover',\n\tproperties: [\n\t\tProp('change', new Vector(10, 10), Prop.vector),\n\t\tProp('userControlled', false, Prop.bool),\n\t\tProp('speed', 1, Prop.float),\n\t\tProp('rotationSpeed', 0, Prop.float, 'Degrees per second', Prop.flagDegreesInEditor)\n\t],\n\tprototype: {\n\t\tonUpdate(dt, t) {\n\t\t\tif (this.userControlled) {\n\t\t\t\tif (!this.entity.localMaster) return;\n\t\t\t\t\n\t\t\t\tlet dx = 0;\n\t\t\t\tlet dy = 0;\n\t\t\t\t\n\t\t\t\tif (keyPressed(key.left)) dx -= 1;\n\t\t\t\tif (keyPressed(key.right)) dx += 1;\n\t\t\t\tif (keyPressed(key.up)) dy -= 1;\n\t\t\t\tif (keyPressed(key.down)) dy += 1;\n\t\t\t\tif (dx) this.Transform.position.x += dx * this.speed * dt;\n\t\t\t\tif (dy) this.Transform.position.y += dy * this.speed * dt;\n\t\t\t\tif (dx || dy) {\n\t\t\t\t\tthis.Transform.position = this.Transform.position;\n\t\t\t\t}\n\t\t\t\tif (dx && this.rotationSpeed) {\n\t\t\t\t\tthis.Transform.rotation += dt * dx * this.rotationSpeed;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet change = new Vector(dt, 0).rotate(t * this.speed).multiply(this.change);\n\t\t\t\tthis.Transform.position.set(this.Transform.position).add(change);\n\t\t\t\t\n\t\t\t\tif (this.rotationSpeed)\n\t\t\t\t\tthis.Transform.rotation += dt * this.rotationSpeed;\n\t\t\t}\n\t\t}\n\t}\n});\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\n\nComponent.register({\n\tname: 'Rect',\n\ticon: 'fa-stop',\n\tallowMultiple: true,\n\tproperties: [\n\t\tProp('size', new Vector(10, 10), Prop.vector),\n\t\tProp('style', 'red', Prop.string),\n\t\tProp('randomStyle', false, Prop.bool)\n\t],\n\tprototype: {\n\t\tinit() {\n\t\t\tif (this.randomStyle)\n\t\t\t\tthis.style = `hsl(${Math.random()*360 | 0}, 100%, 40%)`;\n\t\t},\n\t\tonDraw(context) {\n\t\t\tlet\n\t\t\t\tx = this.Transform.position.x - this.size.x/2 * this.Transform.scale.x,\n\t\t\t\ty = this.Transform.position.y - this.size.y/2 * this.Transform.scale.y,\n\t\t\t\tw = this.size.x * this.Transform.scale.x,\n\t\t\t\th = this.size.y * this.Transform.scale.y;\n\t\t\tcontext.save();\n\t\t\tcontext.fillStyle = this.style;\n\t\t\tcontext.translate(x+w/2, y+h/2);\n\t\t\tcontext.rotate(this.Transform.rotation);\n\t\t\tcontext.fillRect(-w/2, -h/2, w, h);\n\t\t\tcontext.restore();\n\t\t}\n\t}\n});\n","import { Component, Prop } from '../core/component';\nimport EntityPrototype from '../core/entityPrototype';\n\nComponent.register({\n\tname: 'Spawner',\n\tproperties: [\n\t\tProp('typeName', '', Prop.string)\n\t],\n\tprototype: {\n\t\tonStart() {\n\t\t\tthis.spawn();\n\t\t},\n\t\tonDrawHelper(context) {\n\t\t\tlet size = 30;\n\t\t\tlet\n\t\t\t\tx = this.Transform.position.x - size * this.Transform.scale.x/2,\n\t\t\t\ty = this.Transform.position.y - size * this.Transform.scale.y/2,\n\t\t\t\tw = size * this.Transform.scale.x,\n\t\t\t\th = size * this.Transform.scale.y;\n\t\t\tcontext.save();\n\t\t\tcontext.fillStyle = 'blue';\n\t\t\tcontext.strokeStyle = 'white';\n\t\t\tcontext.lineWidth = 1;\n\t\t\tcontext.font = '40px FontAwesome';\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.fillText('\\uf21d', this.Transform.position.x + 2, this.Transform.position.y);\n\t\t\tcontext.strokeText('\\uf21d', this.Transform.position.x + 2, this.Transform.position.y);\n\t\t\t\n\t\t\tcontext.restore();\n\t\t},\n\t\tspawn() {\n\t\t\tlet prototype = this.game.findChild('prt', prt => prt.name === this.typeName);\n\t\t\tif (!prototype)\n\t\t\t\treturn;\n\n\t\t\tEntityPrototype.createFromPrototype(prototype).spawnEntityToScene(this.Transform.position);\n\t\t}\n\t}\n});\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\n\nComponent.register({\n\tname: 'Trigger',\n\tallowMultiple: true,\n\tproperties: [\n\t\tProp('trigger', 'playerComesNear', Prop.enum, Prop.enum.values('playerComesNear')),\n\t\tProp('radius', 40, Prop.float, Prop.float.range(0, 1000), Prop.visibleIf('trigger', 'playerComesNear')),\n\t\tProp('action', 'win', Prop.enum, Prop.enum.values('win'))\n\t],\n\tprototype: {\n\t\tonDrawHelper(context) {\n\t\t\tlet size = 30;\n\t\t\tlet\n\t\t\t\tx = this.Transform.position.x - size * this.Transform.scale.x/2,\n\t\t\t\ty = this.Transform.position.y - size * this.Transform.scale.y/2,\n\t\t\t\tw = size * this.Transform.scale.x,\n\t\t\t\th = size * this.Transform.scale.y;\n\t\t\tcontext.save();\n\t\t\tcontext.fillStyle = 'blue';\n\t\t\tcontext.strokeStyle = 'white';\n\t\t\tcontext.lineWidth = 1;\n\t\t\tcontext.font = '40px FontAwesome';\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.fillText('\\uf085', this.Transform.position.x, this.Transform.position.y + 15);\n\t\t\tcontext.strokeText('\\uf085', this.Transform.position.x, this.Transform.position.y + 15);\n\t\t\t\n\t\t\tcontext.restore();\n\t\t},\n\t\tpreInit() {\n\t\t\tthis.storeProp = `__Trigger_${this._componentId}`;\n\t\t},\n\t\tonUpdate() {\n\t\t\tif (this.trigger === 'playerComesNear') {\n\t\t\t\tlet componentSet = this.scene.getComponents('Mover');\n\t\t\t\tlet entities = [];\n\t\t\t\tcomponentSet.forEach(c => entities.push(c.entity));\n\t\t\t\tlet distSq = this.radius * this.radius;\n\t\t\t\tlet pos = this.Transform.position;\n\t\t\t\tfor (let i = 0; i < entities.length; ++i) {\n\t\t\t\t\tif (entities[i].position.distanceSq(pos) < distSq) {\n\t\t\t\t\t\tif (!entities[i][this.storeProp] && this.launchTrigger(entities[i]) === false)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tentities[i][this.storeProp] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tentities[i][this.storeProp] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\t// Return false if other triggers should not be checked\n\t\tlaunchTrigger(entity) {\n\t\t\tif (this.action === 'win') {\n\t\t\t\tthis.scene.win();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n});\n","import { Component, Prop } from '../core/component';\nimport Vector from '../util/vector';\nimport Matter, { addBody, deleteBody } from '../feature/physics';\nimport { getChangeOrigin } from '../core/serializableManager';\n\nComponent.register({\n\tname: 'Physics',\n\ticon: 'fa-stop',\n\tallowMultiple: false,\n\tproperties: [\n\t\tProp('isStatic', false, Prop.bool)\n\t],\n\trequirements: [\n\t\t'Rect'\n\t],\n\trequiesInitWhenEntityIsEdited: true,\n\tprototype: {\n\t\tinit() {\n\t\t\tlet update = callback => {\n\t\t\t\treturn value => {\n\t\t\t\t\tif (!this.updatingOthers && this.body) {\n\t\t\t\t\t\tcallback(value);\n\t\t\t\t\t\tMatter.Sleeping.set(this.body, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tthis.listenProperty(this.Transform, 'position', update(position => Matter.Body.setPosition(this.body, position)));\n\t\t\tthis.listenProperty(this.Transform, 'rotation', update(rotation => Matter.Body.setAngle(this.body, rotation)));\n\t\t\t// this.listenProperty(this.Rect, 'size', update(() => this.body.position = this.Transform.position));\n\t\t},\n\t\tcreateBody() {\n\t\t\tthis.body = Matter.Bodies.rectangle(this.Transform.position.x, this.Transform.position.y, this.Rect.size.x, this.Rect.size.y, {\n\t\t\t\tisStatic: this.isStatic,\n\t\t\t\tangle: this.Transform.rotation\n\t\t\t});\n\t\t\taddBody(this.scene, this.body);\n\t\t},\n\t\tsetInTreeStatus() {\n\t\t\tthis.createBody();\n\t\t\treturn Component.prototype.setInTreeStatus.call(this, ...arguments);\n\t\t},\n\t\tonUpdate() {\n\t\t\tif (!this.body || this.body.isSleeping)\n\t\t\t\treturn;\n\t\t\t\n\t\t\tthis.updatingOthers = true;\n\t\t\tthis.Transform.position = Vector.fromObject(this.body.position);\n\t\t\tthis.Transform.rotation = this.body.angle;\n\t\t\tthis.updatingOthers = false;\n\t\t},\n\t\tsleep() {\n\t\t\tif (this.body) {\n\t\t\t\tdeleteBody(this.scene, this.body);\n\t\t\t\tthis.body = null;\n\t\t\t}\n\t\t}\n\t}\n});\n"],"names":["createStringId","threeLetterPrefix","characters","let","id","i","CHARACTERS","Math","random","CHAR_COUNT","addSerializable","serializable","assert","undefined","serializables","getSerializable","removeSerializable","Error","resetOrigin","origin","getChangeOrigin","setChangeOrigin","_origin","setTimeout","addChange","type","reference","change","external","externalChange","changeType","setPropertyValue","value","_value","move","parent","_parent","addSerializableToTree","previousOrigin","listeners","forEach","l","executeExternal","callback","addChangeListener","push","packChange","packedChange","packed","parentId","toJSON","propertyType","Object","keys","keyToShortKey","key","e","console","log","unpackChange","shortKey","shortKeyToKey","error","executeChange","newScene","fromJSON","obj","Serializable","addChild","threeLetterType","localMaster","deleteAllChildren","deleteChildren","deleteSerializable","delete","play","condition","message","stack","createPropertyType","propertyName","defaultValue","validator","validators","default","description","flags","visibleIf","optionalParameters","p","idx","validate","isFlag","PropertyType","createFlag","func","createDataType","ref","x","name","clone","createType","validatorName","createValidator","validatorFunction","parameters","validatorParameters","validateFloat","val","isNaN","Infinity","createWorld","owner","options","_matterEngine","Matter","Engine","create","updateWorld","dt","update","_matterPreviousDt","deleteWorld","clear","addBody","body","Composite","add","world","deleteBody","remove","keyPressed","setNetworkEnabled","enabled","networkEnabled","startSceneWhenGameLoaded","shouldStartSceneWhenGameLoaded","isInSceneTree","getRoot","getQueryVariable","variable","query","window","location","search","substring","vars","split","length","pair","decodeURIComponent","tryToLoad","io","socket","changes","valueChanges","duplicateChange","splice","indexOf","setInterval","packedChanges","map","emit","on","serverStartTime","game","clientStartTime","Date","now","requiredClientTime","reload","gameData","localStorage","anotherGameId","history","replaceState","scene","getChildren","createScene","listen","gameId","resizeCanvas","canvas","width","innerWidth","height","innerHeight","const","serializableClasses","Map","predefinedId","skipSerializableRegistering","this","_children","_listeners","_isInTree","isRoot","_state","STATE_CONSTRUCTOR","STATE_PREDEFINEDID","startsWith","serializableManager.addSerializable","deleteChild","_alive","serializableManager.removeSerializable","STATE_DESTROY","size","array","child","serializableManager.addChange","serializableManager.changeType","initWithChildren","children","STATE_INIT","addChildren","_addChild","STATE_ADDCHILD","get","set","STATE_ADDPARENT","setInTreeStatus","findChild","filterFunction","find","findParent","element","_detachChild","forEachChild","deep","processArray","newParent","_detach","getParent","json","arrays","Array","from","sort","a","b","c","concat","toString","JSON","stringify","constructor","STATE_CLONE","event","hasOwnProperty","unshift","index","this$1","dispatch","apply","args","hasDescendant","isInTree","force","filter","Boolean","STATE_FROMJSON","registerSerializable","Class","prototype","defineProperty","info","join","states","logState","state","stateString","createDebugObject","debug","debugChildArray","k","Property","super","_initialValue","setPropertyType","_initialValueIsJSON","initialValue","assign","v","n","newValue","f","getFlag","flag","createProperty","dataType","flagDegreesInEditor","Vector","y","vec","subtract","multiply","multiplyScalar","scalar","divide","divideScalar","dot","sqrt","lengthSq","setLength","newLength","oldLength","getProjectionOn","distance","dx","dy","distanceSq","normalize","horizontalAngle","atan2","verticalAngle","rotate","angle","cos","sin","rotateTo","rotation","isEqualTo","fromObject","FLOAT_JSON_PRECISION_MULTIPLIER","pow","float","parseFloat","range","min","max","modulo","round","int","parseInt","vector","string","String","bool","enum","values","isArray","PropertyOwner","_propertyTypes","_properties","initWithPropertyValues","propName","_propertyTypesByName","propChildren","otherChildren","invalidPropertiesCount","prop","isInvalid","nameToProp","componentName","defineProperties","propertyTypes","ALIVE_ERROR","Entity","components","sleeping","getComponent","getComponents","getListOfAllComponents","entity","addComponents","_name","initComponents","_preInit","_init","makeComponentsSleep","_sleep","deleteComponents","sleep","wakeUp","deleteComponent","component","compArray","comp","proto","position","ComponentData","componentClassName","predefinedComponentId","componentClass","componentClasses","allowMultiple","componentId","newComponentId","cloneComponentId","cid","getInheritedProperties","_depth","properties","parentComponentData","getParentComponentData","parentPrototype","getParentPrototype","componentData","getPropertyOrCreate","property","prp","getProperty","setValue","getValue","createComponent","Component","_componentId","Prop","Prototype","arguments","previouslyCreatedEntity","cda","getInheritedComponentDatas","getDataFromPrototype","data","ownComponentData","propertyHash","generatedForPrototype","originalPrototype","inheritedComponentData","localeCompare","createAndAddPropertyForComponentData","propertyValue","componentDataIsNew","findComponentDataByComponentId","alsoFindFromParents","getOwnComponentDataOrInherit","findOwnProperty","createEntity","inheritedComponentDatas","createWithInheritedComponentData","countEntityPrototypes","findParents","count","levels","entityPrototypes","j","prt","_game","lvl","items","isClient","Game","warn","isServer","module","require","physicsOptions","enableSleeping","Scene","document","querySelector","context","getContext","level","animationFrameId","playing","time","physicsWorld","draw","win","reset","animFrame","playCalled","t","performance","_prevUpdate","requestAnimFrame","requestAnimationFrame","clearRect","isInInitialState","pause","cancelAnimationFrame","addComponent","Set","removeComponent","_listenRemoveFunctions","requirements","r","funcName","preInit","init","listenProperty","createComponentData","pt","reservedPropertyNames","reservedPrototypeMembers","register","has","constructorFunction","deleteFunction","Com","parentClass","category","icon","num","reduce","prev","curr","charCodeAt","color","EntityPrototype","getTransform","transform","scale","Transform","childArrays","floatToJSON","handleProperty","w","h","spawnEntityToScene","createFromPrototype","componentDatas","entityPrototype","nameId","transformId","positionId","scaleId","rotationId","transformData","transformClass","Level","predefinedSceneObject","entities","epr","PI","vari","left","right","up","down","ctrl","appleLeft","appleRight","alt","shift","space","d","g","m","o","q","s","u","z","0","1","9","backspace","enter","esc","keyDownListeners","keyUpListeners","onkeydown","keyCode","which","activeElement","nodeName","toLowerCase","onkeyup","onUpdate","userControlled","speed","rotationSpeed","randomStyle","style","onDraw","save","fillStyle","translate","fillRect","restore","onStart","spawn","onDrawHelper","strokeStyle","lineWidth","font","textAlign","fillText","strokeText","typeName","storeProp","trigger","componentSet","distSq","radius","pos","launchTrigger","action","requiesInitWhenEntityIsEdited","updatingOthers","Sleeping","Body","setPosition","setAngle","createBody","Bodies","rectangle","Rect","isStatic","call","argsArray","isSleeping","addEventListener"],"mappings":"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"}